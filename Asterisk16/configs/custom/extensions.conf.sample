;!
;! Automatically generated configuration file
;! Filename: extensions.conf (/app/asterisk/etc/asterisk/extensions.conf)
;! Generator: Manager
;! Creation Date: Thu Dec  5 10:21:56 2013
;!
[globals]
DEF_PERMISSION = internal
MEETME_EXIT_CONTEXT = conf-tools
TRANSFER_CONTEXT = from-internal-xfer
MIXMON_FORMAT = wav
MIXMON_DIR = /app/asterisk/var/spool/asterisk/monitor
MIXMON_POST =
;CONF_SIZE_LIMIT = 25
AST_REDIRECTING_REASON_USER_BUSY = 1
AST_REDIRECTING_REASON_NO_ANSWER = 2
AST_REDIRECTING_REASON_UNCONDITIONAL = 4
#include extensions_globals_additional.conf
[general]
static = yes
writeprotect = no
clearglobalvars = yes
#include extensions_additional.conf

;###################################################################
;extensions
;###################################################################
[callee-handler]
exten = s,1,ExecIf($["${JITTERBUFFER_ENABLE}" = "yes" && "${CONF_ROOM}" = ""]?Set(JITTERBUFFER(${JITTERBUFFER_TYPE})=${JITTERBUFFER_PARAM}))
exten = s,n,ExecIf($["${JITTERBUFFER_ENABLE}" = "yes" && "${CONF_ROOM}" != "" && "${CHANNEL(channeltype)}" != "Local"]?Set(JITTERBUFFER(neteq_${JITTERBUFFER_TYPE})=${JITTERBUFFER_PARAM}))
exten = s,n,ExecIf($["${JITTERBUFFER_ENABLE}" = "yes" && "${CONF_ROOM}" != "" && "${CHANNEL(channeltype)}" == "Local"]?Set(JITTERBUFFER(${JITTERBUFFER_TYPE})=${JITTERBUFFER_PARAM}))
exten = s,n,ExecIf($["${JITTERBUFFER_ENABLE}" = "no" && "${CONF_ROOM}" != "" && "${CHANNEL(channeltype)}" != "Local"]?Set(JITTERBUFFER(neteq)=${JITTERBUFFER_PARAM}))
exten = s,n,ExecIf($["${MCB_CONF_HEADER}" != ""]?Set(PJSIP_HEADER(add,X-Grandstream-Mcb-Req)=${MCB_CONF_HEADER}))
exten = s,n,ExecIf($["${EMERGENCY_CALL_INFO}" == "yes"]?Set(PJSIP_HEADER(add,Call-Info)=<sip:__SIP_CONTACT_HOST__>\;answer-after=0))
exten = s,n,ExecIf($[ "${CODEBLUE_AUTO}" == "yes"  ]?Set(PJSIP_HEADER(add,Call-Info)=<sip:__SIP_CONTACT_HOST__>\;answer-after=0))
exten = s,n,MacroIf($[$["${HEAD_ALERT_INFO}" != ""] && $["${HEAD_CALL_INFO}" != ""]]?set-page-header)
exten = s,n,GotoIf($["${PAGING_ALERT_INFO}" != "yes" | "${PAGE_HEADER_ADD}" == "yes"]?PG_no:PG_yes)
exten = s,n(PG_yes),Set(PJSIP_HEADER(add,Alert-Info)=${PAGING_HEADER})
exten = s,n,Set(PJSIP_HEADER(add,Call-Info)=<sip:__SIP_CONTACT_HOST__>\;answer-after=0)
exten = s,n,Goto(normal)
exten = s,n(PG_no),ExecIf($["${PAGE_HEADER_ADD}" != "yes"]?Set(PJSIP_HEADER(remove,Alert-Info)=))
exten = s,n(normal),ExecIf($["${DID_ALERTINFO}" != "" & "${DID_ALERT_SCHEMA}" == "uri"]?Set(PJSIP_HEADER(add,Alert-Info)=<http://127.0.0.1/${DID_ALERTINFO}>))
exten = s,n,ExecIf($["${DID_ALERTINFO}" != "" & "${DID_ALERT_SCHEMA}" == "info"]?Set(PJSIP_HEADER(add,Alert-Info)=<http://127.0.0.1>\;info=${DID_ALERTINFO}))
exten = s,n,MacroIf($["${NOTIFYNUM}" != ""]?emergency-notify)

[dahdi-signal-auto-trace]
exten = test,1,Log(NOTICE, "Start dahdi auto test!")
exten = test,n(again),Playback(/data/var/lib/asterisk/moh/macroform-robot_dity)
exten = test,n,Goto(again)

[set-language]
exten = _.,1,ExecIf($["${UCMDB(AAUSER/${AAUSER}/language)}" != ""]?Set(CHANNEL(language)=${UCMDB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = _.,2,Return

[macro-set-page-header]
exten = s,1,Set(_PAGE_HEADER_ADD=yes)
exten = s,n,Set(PJSIP_HEADER(add,Alert-Info)=${HEAD_ALERT_INFO})
exten = s,n,Set(PJSIP_HEADER(add,Call-Info)=${HEAD_CALL_INFO})

[app-blacklist-check]
exten = s,1(check),GotoIf($["${BLACKLIST()}"="1"]?blacklisted)
exten = s,n,Set(CALLED_BLACKLIST=1)
exten = s,n,Return()
exten = s,n(blacklisted),ExecIf($["${FROM_EXTEN}"!=""]?Set(CDR(app_callee)=${FROM_EXTEN}))
exten = s,n,Progress()
exten = s,n,Wait(1)
exten = s,n,Zapateller()
;exten = s,n,Playback(ss-noservice,noanswer)
exten = s,n,ExecIf($["${CHANNEL(channeltype)}" != "DAHDI"]?Playback(ss-noservice,noanswer))
exten = s,n,ExecIf($["${CHANNEL(channeltype)}" == "DAHDI"]?Playback(ss-noservice,))
exten = s,n,Hangup(21)

[conf-inv-menu]
exten = s,1,Wait(1)
exten = s,n,ExecIf($["${CONF_ROOM}" == ""]?Set(isCCM=1):Set(isCCM=0)
exten = s,n,ExecIf($[${isCCM} = 1]?Set(__CONF_ROOM=${CUT(CHANNEL,-,2)})
exten = s,n,ExecIf($[${isCCM} = 1]?Set(__CONF_ROOM=${CONF_ROOM:0:$[${LEN(${CONF_ROOM})}-4]})
exten = s,n,Set(__HAS_JOIN=invited)
exten = s,n,ExecIf($["${CONF_OPTIONS}" == ""]?Set(__CONF_OPTIONS=${ORI_OPTIONS})) ;For CCM, variables are not share between Local legs
exten = s,n,Set(AAUSER=${CALLERID(number)})
exten = s,n,ExecIf($["${UCMDB(AAUSER/${AAUSER}/language)}" != ""]?Set(CHANNEL(language)=${UCMDB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = s,n,ExecIf($["${CONF_INV_CONFIRM}" = ""]?ExecIf($[${DB(CCM/${CONF_ROOM}/INVITE_DATA)} = 0]?Set(__CONF_INV_CONFIRM=no):Set(__CONF_INV_CONFIRM=yes)))
exten = s,n,Set(DB(CCM/${CONF_ROOM}/INVITE_DATA)=)
;exten = s,n,Set(DB(CCM/${CONF_ROOM}/INVITING)=)
exten = s,n,GotoIf($["${CONF_INV_CONFIRM}" = "no"]?bypass)
exten = s,n,Background(this-call-may-be&to-join-a-meeting&followme/options,)
exten = s,n,WaitExten(2)
exten = s,n,Background(this-call-may-be&to-join-a-meeting&followme/options,)
exten = s,n,WaitExten(2)
exten = s,n,Background(this-call-may-be&to-join-a-meeting&followme/options,)
exten = s,n,WaitExten(2)
exten = s,n,SIPTerminatedNotify(${CONF_ROOM})
exten = s,n,Macro(hangupcall)
exten = s,n(bypass),Background(this-call-may-be&to-join-a-meeting,)
exten = s,n,Goto(ext-conference,${CONF_ROOM},1)
exten = s,n,Macro(hangupcall)
exten = 1,1,Goto(ext-conference,${CONF_ROOM},1)
exten = 2,1,ExecIf($["${CONF_INV_CONFIRM}" = "yes"]?SIPTerminatedNotify(${CONF_ROOM}):Goto(ext-conference,${CONF_ROOM},1))
exten = 2,n,Macro(hangupcall)
exten = i,1,Goto(s,1)

[conf-tools]
exten = 0,1,Set(DIALED=${EXTEN})
exten = 0,n,Goto(entry-gate,1)
exten = 1,1,Set(DIALED=${EXTEN})
exten = 1,n,Goto(entry-gate,1)
exten = 2,1,Set(DIALED=${EXTEN})
exten = 2,n,Goto(entry-gate,1)
exten = 3,1,Set(DIALED=${EXTEN})
exten = 3,n,Goto(entry-gate,1)
exten = entry-gate,1,Set(CONF_MENU_LOCK=${TRYLOCK(LOCK_CONF_MENU_${CONF_ROOM})})
exten = entry-gate,n,Set(_ENTRY_CONF=yes)
exten = entry-gate,n,Set(ORIGIN_CALLERID=${CALLERID(all)})
exten = entry-gate,n,Set(SHARED(CONF_MENU_INVITE_RESULT)=)
exten = entry-gate,n,GotoIf($[${CONF_MENU_LOCK} = 0]?occupied)
exten = entry-gate,n,Goto(e${DIALED},1)
exten = entry-gate,n(occupied),Playback(im-sorry&please-try-again-later)
exten = entry-gate,n,Goto(exit-gate,1)
exten = exit-gate,1,Set(CONF_MENU_LOCK=${UNLOCK(LOCK_CONF_MENU_${CONF_ROOM})})
exten = exit-gate,n,Set(SHARED(CONF_MENU_INVITE_RESULT)=)
exten = exit-gate,n,Set(DIALSTATUS=)
exten = exit-gate,n,Set(CALLERID(all)=${ORIGIN_CALLERID})
exten = exit-gate,n,Set(__CONF_INVITE=)
exten = exit-gate,n,ExecIf($["${TMP_WEBCALL}" != ""]?Set(__WEBCALL=${TMP_WEBCALL}))
exten = exit-gate,n,ExecIf($["${TMP_WEBCALL}" != ""]?Set(TMP_WEBCALL=))
;exten = exit-gate,n,Set(CDR(app_callee)=${DEST_EXT})
;exten = exit-gate,n,Set(_EXIT_CONF=yes)
;exten = exit-gate,n,Goto(ext-conference,${CONF_ROOM},1)
exten = exit-gate,n,ExecIf($["${FORCE_SLIN_CODEC}" == "yes"]?Set(FORCE_SLIN_CODEC=))
exten = e0,1,Wait(1)
exten = e0,n,Set(__CONF_INV_CONFIRM=yes)
exten = e0,n,ExecIf($["${WEBCALL}" != ""]?Set(TMP_WEBCALL=${WEBCALL}))
exten = e0,n,ExecIf($["${WEBCALL}" != ""]?Set(__WEBCALL=))
exten = e0,n,Set(CONNECTEDLINE(all)=)
;exten = e0,n,Set(CONF_LOCKED=${MEETME_INFO(lock,${CONF_ROOM})})
exten = e0,n,Set(CONF_LOCKED=${CONFBRIDGE_INFO(locked,${CONF_ROOM})})
exten = e0,n,GotoIf($["${CONF_LOCKED}" = "1"]?locked)
exten = e0,n,Read(DEST_EXT,conf-invite,,i)
exten = e0,n,GotoIf($["${UCMDB(AAUSER/${DEST_EXT}/TYPE)}" = "conference" || "${UCMDB(AAUSER/${DEST_EXT}/TYPE)}" = "multimedia_conference"]?e2,invalid)
exten = e0,n,Set(CALLERID(all)=Meeting Invitation <${CONF_ROOM}>)
exten = e0,n,Set(__CEI_SUPPORT=yes)
exten = e0,n,Set(__CONF_ROOM=${CONF_ROOM})
exten = e0,n,Set(__CONF_MENU_CHAN=${CHANNEL})
exten = e0,n,Set(__CONF_USER_INVITE=yes)
exten = e0,n,Set(__CONF_INVITE=yes)
exten = e0,n,Set(PHONECONFINVITE=${CUT(CONF_MENU_CHAN,-,1)})
exten = e0,n,Set(__PHONECONFINVITE=${CUT(PHONECONFINVITE,/,2)})
exten = e0,n,Set(FORCE_SLIN_CODEC=yes)
exten = e0,n,Dial(local/${DEST_EXT}@from-internal,,gG(conf-tools,conf-inv,1))
exten = e0,n,ExecIf($["${SHARED(CONF_MENU_INVITE_RESULT)}" = "failed"]?Playback(silence/1&cannot-complete-as-dialed&check-number-dial-again,noanswer))
exten = e0,n,Goto(exit-gate,1)
exten = e0,n(locked),Playback(im-sorry&conf-lockednow)
exten = e0,n,Goto(exit-gate,1)
exten = e1,1,Wait(1)
exten = e1,n,Set(__CONF_INV_CONFIRM=no)
exten = e1,n,ExecIf($["${WEBCALL}" != ""]?Set(TMP_WEBCALL=${WEBCALL}))
exten = e1,n,ExecIf($["${WEBCALL}" != ""]?Set(__WEBCALL=))
exten = e1,n,Set(CONNECTEDLINE(all)=)
;exten = e1,n,Set(CONF_LOCKED=${MEETME_INFO(lock,${CONF_ROOM})})
exten = e1,n,Set(CONF_LOCKED=${CONFBRIDGE_INFO(locked,${CONF_ROOM})})
exten = e1,n,GotoIf($["${CONF_LOCKED}" = "1"]?locked)
exten = e1,n,Read(DEST_EXT,conf-invite,,i)
exten = e1,n,GotoIf($["${UCMDB(AAUSER/${DEST_EXT}/TYPE)}" = "conference" || "${UCMDB(AAUSER/${DEST_EXT}/TYPE)}" = "multimedia_conference"]?e2,invalid)
exten = e1,n,Set(CALLERID(all)=Meeting Invitation <${CONF_ROOM}>)
exten = e1,n,Set(__CEI_SUPPORT=yes)
exten = e1,n,Set(__CONF_ROOM=${CONF_ROOM})
exten = e1,n,Set(__CONF_MENU_CHAN=${CHANNEL})
exten = e1,n,Set(__CONF_USER_INVITE=yes)
exten = e1,n,Set(__CONF_INVITE=yes)
exten = e1,n,Set(PHONECONFINVITE=${CUT(CONF_MENU_CHAN,-,1)})
exten = e1,n,Set(__PHONECONFINVITE=${CUT(PHONECONFINVITE,/,2)})
exten = e1,n,Set(FORCE_SLIN_CODEC=yes)
exten = e1,n,Dial(local/${DEST_EXT}@from-internal,,gG(conf-tools,conf-inv,1))
exten = e1,n,ExecIf($["${SHARED(CONF_MENU_INVITE_RESULT)}" = "failed"]?Playback(silence/1&cannot-complete-as-dialed&check-number-dial-again,noanswer))
exten = e1,n,Goto(exit-gate,1)
exten = e1,n(locked),Playback(im-sorry&conf-lockednow)
exten = e1,n,Goto(exit-gate,1)
exten = e2,1,Set(__CONF_INV_CONFIRM=NO)
exten = e2,n,ExecIf($["${WEBCALL}" != ""]?Set(TMP_WEBCALL=${WEBCALL}))
exten = e2,n,ExecIf($["${WEBCALL}" != ""]?Set(__WEBCALL=))
;exten = e2,n,Set(CONF_LOCKED=${MEETME_INFO(lock,${CONF_ROOM})})
exten = e2,n,Set(CONF_LOCKED=${CONFBRIDGE_INFO(locked,${CONF_ROOM})})
exten = e2,n,GotoIf($["${CONF_LOCKED}" = "1"]?locked)
exten = e2,n,Set(MCB_LOCAL=${CONF_ROOM})
exten = e2,n,Read(MCB_REMOTE,conf-invite,,i)
exten = e2,n,Read(MCB_PASS,conference-password-mono,,,,5)
exten = e2,n,Set(MCB_PASS=${FILTER(0-9,${MCB_PASS})})
exten = e2,n,GotoIf($["${MCB_REMOTE}" = "${MCB_LOCAL}"]?invalid)
exten = e2,n,GotoIf($["${UCMDB(AAUSER/${MCB_REMOTE}/TYPE)}" = "user"]?invalid)
exten = e2,n,Set(MCB_PARENT_CHAN=${CHANNEL:0:1}${CUT(CHANNEL,/,2-)})
exten = e2,n,ExecIf($["${DISACONTEXT}" != ""]?Set(MCB_PARENT_CHAN=${CUT(MCB_PARENT_CHAN,@,1)}-${MCB_PARENT_CHAN:-10}))
exten = e2,n,ExecIf($["${MCB_PARENT_CHAN:0:1}" = "L"]?Set(MCB_PARENT_CHAN=${CUT(MCB_PARENT_CHAN,@,1)}-${CUT(MCB_PARENT_CHAN,-,3)}))
exten = e2,n,Originate(local/${MCB_REMOTE}-${MCB_LOCAL}-${MCB_PARENT_CHAN}@mcb-create,exten,mcb-connect,${MCB_REMOTE}-${MCB_LOCAL},1)
exten = e2,n,ExecIf($["${SHARED(CONF_MENU_INVITE_RESULT)}" = "failed"]?Playback(silence/1&cannot-complete-as-dialed&check-number-dial-again,noanswer))
exten = e2,n,Goto(exit-gate,1)
exten = e2,n(locked),Playback(im-sorry&conf-lockednow)
exten = e2,n,Goto(exit-gate,1)
exten = e2,n(invalid),playback(sorry-cant-let-you-do-that)
exten = e2,n,Goto(exit-gate,1)
exten = e3,1,Wait(1)
exten = e3,n,Set(I=1)
exten = e3,n,Set(MCB_LOCK=${TRYLOCK(LOCK_MCB_${CONF_ROOM})})
exten = e3,n,While($[${MCB_LOCK} < 1])
exten = e3,n,Set(MCB_LOCK=${TRYLOCK(LOCK_MCB_${CONF_ROOM})})
exten = e3,n,EndWhile
exten = e3,n,MeetmeAdmin(${CONF_ROOM},D)
exten = e3,n(exit_loop),Set(MCB_LOCK=${UNLOCK(LOCK_MCB_${CONF_ROOM})})
exten = e3,n,Goto(exit-gate,1)
exten = conf-inv,1,Goto(exit-gate,1)
exten = conf-inv,n,ExecIf($["${ORI_OPTIONS}" == ""]?Set(CONF_ROOM=${CUT(CHANNEL,-,2)}))
exten = conf-inv,n,ExecIf($["${ORI_OPTIONS}" == ""]?Set(CONF_ROOM=${CUT(CONF_ROOM,@,1)}))
exten = conf-inv,n,ExecIf($["${ORI_OPTIONS}" == ""]?Set(ORIG_CHANNEL=${DB(CCM/${CONF_ROOM}/ORIG_CHANNEL)}))
exten = conf-inv,n,ExecIf($["${ORI_OPTIONS}" == ""]?Set(__ORI_OPTIONS=${IMPORT(${ORIG_CHANNEL},ORI_OPTIONS)}))
exten = conf-inv,n,Set(__CONF_OPTIONS=${ORI_OPTIONS})
exten = conf-inv,n,ExecIf($["${NODEST}" == ""]?Set(__NODEST=${CONF_ROOM}))
exten = conf-inv,n,ExecIf($[${REGEX("ccm-invite" "${CHANNEL(name)}")} = 1 && "${CALLERID(num)}" = ""]?Set(CALLERID(num)=${CUT(CUT(CHANNEL(name),-,1),/,2)}))
exten = conf-inv,n,ExecIf($[${REGEX("ccm-invite" "${CHANNEL(name)}")} = 0 && $["${CALLERID(num)}" = "e0" || "${CALLERID(num)}" = "e1"] ]?Set(CALLERID(num)=${CUT(CUT(CHANNEL(name),@,1),/,2)}))
exten = conf-inv,n,Goto(conf-inv-menu,s,1)
exten = conf-inv,n,Macro(hangupcall)
exten = h,1,Set(CONF_MENU_LOCK=${UNLOCK(LOCK_CONF_MENU_${CONF_ROOM})})
exten = h,n,Goto(sub-dial-conference,h,1)

[chanspy-inv]
exten = s,1,Wait(1)
exten = s,n,Set(TMPUSER=${CUT(CHANNEL(name),@,1):6:})
exten = s,n,ExecIf($["${UCMDB(AAUSER/${AAUSER}/language)}" != ""]?Set(CHANNEL(language)=${UCMDB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = s,n,ExecIf($[$["${CHANNEL(channeltype)}" == "Local"] & $["${UCMDB(AAUSER/${TMPUSER}/language)}" != ""]]?Set(CHANNEL(language)=${UCMDB(AAUSER/${TMPUSER}/language)}))
exten = s,n,GotoIf($["${SPYEXTEN}" == ""]?invalid)
exten = s,n,GotoIf($["${CALL_INV_CONFIRM}" = "no"]?1,1)
exten = s,n,Background(followme/options,)
exten = s,n,WaitExten(2)
exten = s,n,Background(followme/options,)
exten = s,n,WaitExten(2)
exten = s,n,Background(followme/options,)
exten = s,n,WaitExten(2)
exten = s,n,Macro(hangupcall)
exten = s,n(invalid),Playback(invalid)
exten = s,n,Macro(hangupcall)
exten = 1,1,ChanSpy(${SPYEXTEN},usE${SPYMODE})
exten = 1,n,Macro(hangupcall)
exten = 2,1,Macro(hangupcall)
exten = i,1,Goto(s,1)
exten = h,1,Macro(hangupcall)

[faxcontext]
exten = fax,1,Noop()
exten = fax,n,Set(fax_intelligent_route=${FAX_INTELLIGENT_ROUTE})
exten = fax,n,Set(EXTENSION=${FAX_INTELLIGENT_ROUTE_DETINATION})
exten = fax,n,GotoIf($["${fax_intelligent_route}" == "yes" & "${UCMDB(VFAX/${FAX_INTELLIGENT_ROUTE_DETINATION}/AUTORECORD)}" != "yes"]?fax-intelligent-route:continue)
exten = fax,n(fax-intelligent-route),GotoIF($["${EXTENSION}" != ""]?fax-intelligent-routing,${EXTEN},1)
exten = fax,n(continue),GotoIF($["${EXTENSION}" != ""]?ext-fax,${EXTENSION},1)
exten = fax,n,Goto(fax2email,${EXTEN},1)

[bad-number]
exten = _X!,1,Macro(user-callerid,)
exten = _X!,n,ExecIf($["${WEBRTC_DEFAULT_DEST}" == "yes"]?Return())
exten = _X!,n,ResetCDR()
exten = _X!,n,Log(WARNING, "Ohh...Sorry, there is no route used for destination number ${EXTEN}")
exten = _X!,n,Progress()
exten = _X!,n,ExecIf($["${RINGGROUP_HANGUP}" == "yes" & "${TRUNK_PROTOCAL}"  == "Analog"]?Answer())
exten = _X!,n,Set(CDR(app_callee)=${EXTEN})
exten = _X!,n,ExecIf($["${DISA_TRUNK_NAME}" != ""]?NoCDR())
exten = _X!,n,GotoIf($["${CHANNEL(dahdi_type)}" == "ss7"]?congestion)
exten = _X!,n,Set(PROMPT_TONE=${IF($["${UCMDB_EXISTS(PROMPT_TONE/WRONG_NUM)}" = "1"]?${DB_RESULT}:wrong-number)})  
exten = _X!,n,ExecIf($["${CDR(special_action_type)}"="OPERATOR_TRANSFER"]?Set(CDR(special_action_type)=OPERATOR_TRANSFER_FAILED))
exten = _X!,n,ExecIf($[ $["${DISA}" == ""] && $[ "${WEBRTC}" != "yes" ]  && $["${CONF_MENU_CHAN}" = ""] ]?Playback(silence/1&${PROMPT_TONE},noanswer))
exten = _.!,n,ExecIf($[ $["${DISA}" == ""] && $[ "${WEBRTC}" == "yes" ]  && $["${CONF_MENU_CHAN}" = ""] ]?Playback(silence/1&${PROMPT_TONE},))
exten = _.!,n,ExecIf($["${CONF_MENU_CHAN}" != ""]?Set(SHARED(CONF_MENU_INVITE_RESULT,${CONF_MENU_CHAN})=failed))
exten = _.!,n(congestion),ExecIf($["${CONF_MENU_CHAN}" = ""]?Congestion(20))
exten = h,1,GotoIf($["${FROM_TRUNK}"="yes"||"${PROTOCOL}"="Analog"||"${NOTSAVEOUTDATA}"="yes"]?analog)
exten = h,n,GotoIF($["${GROUP_NUM_OF_THE_TRUNK}"=""]?cbftrunkgroup)
exten = h,n,ExecIF($["${TRUNKINDEX_NUM}" == "${TRUNK_OF_GROUP}"]?Set(TRUNKINDEX_NUM=${GROUP_NUM_OF_THE_TRUNK}))
exten = h,n(cbftrunkgroup),Set(TMP=${DIALOUT_CHECK(${DIAL_NUMBER},${SIP_CODE}${DIALSTATUS},${SAVETODIALIN},${TRUNKINDEX_NUM})})
exten = h,n(analog),GotoIf($[$["${PROTOCOL}"!="Analog"||"${FROM_TRUNK}"="yes"||"${NOTSAVEOUTDATA}"="yes"] || $["${DIALSTATUS}"="BUSY" || "${DIALSTATUS}"="CHANUNAVAIL"]]?end)
exten = h,n,Set(TMP=${DIALOUT_CHECK(${DIAL_NUMBER},${PROTOCOL},${SAVETODIALIN},${TRUNKINDEX_NUM})})
exten = h,n(end),Hangup

[asterisk_guitools]
exten = executecommand,1,System(${command})
exten = executecommand,n,answer(,nocdr)
exten = executecommand,n,Hangup()
exten = record_vmenu,1,Set(TMPUSER=${CUT(CHANNEL(name),@,1):9:})
exten = record_vmenu,n,GotoIf($["${REC_CALLFORWARD}"!=""]?guiforward)
exten = record_vmenu,n,ExecIf($["${UCMDB(AAUSER/${AAUSER}/language)}" != ""]?Set(CHANNEL(language)=${UCMDB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = record_vmenu,n,ExecIf($[$["${CHANNEL(channeltype)}" == "Local"] & $["${UCMDB(AAUSER/${TMPUSER}/language)}" != ""]]?Set(CHANNEL(language)=${UCMDB(AAUSER/${TMPUSER}/language)}))
exten = record_vmenu,n(guiforward),ExecIf($["${REC_CALLFORWARD}"=="NO"]?Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = record_vmenu,n,ExecIf($[${SHARED(REC_CALLFORWARD)}!=""&"${UCMDB(AAUSER/${SHARED(REC_CALLFORWARD)}/language)}"!=""]?Set(CHANNEL(language)=${UCMDB(AAUSER/${SHARED(REC_CALLFORWARD)}/language)}))
exten = record_vmenu,n,ExecIf($[${SHARED(REC_CALLFORWARD)}!=""&"${UCMDB(AAUSER/${SHARED(REC_CALLFORWARD)}/language)}"=""]?Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = record_vmenu,n,NoCDR()
exten = record_vmenu,n,Answer
exten = record_vmenu,n,Playback(speak-louder&done-hangup-or-into-advance-menu)
exten = record_vmenu,n,Record(${var1},0,500,kr)
exten = record_vmenu,n,ExecIf($["${UCMDB(AAUSER/${AAUSER}/language)}" != ""]?Set(CHANNEL(language)=${UCMDB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = record_vmenu,n,ExecIf($[$["${CHANNEL(channeltype)}" == "Local"] & $["${UCMDB(AAUSER/${TMPUSER}/language)}" != ""]]?Set(CHANNEL(language)=${UCMDB(AAUSER/${TMPUSER}/language)}))
exten = record_vmenu,n,Playback(vm-saved)
exten = record_vmenu,n,Playback(vm-goodbye)
exten = record_vmenu,n,Hangup
exten = play_file,1,Answer
exten = play_file,n,NoCDR()
exten = play_file,n,Playback(${var1})
exten = play_file,n,Hangup
exten = _REC.,1,Set(__RECORD_VMENU=ON)
exten = _REC.,n,ExecIf($["${codeblue_code}" == ""]?NoCDR()
exten = _REC.,n,ExecIf($["${codeblue_code}" != ""]?Macro(set-cdr-variables)
exten = _REC.,n,ExecIf($["${codeblue_code}" != ""]?Set(NOCF=yes))
;exten = _REC.,n,ExecIf($["${codeblue_code}" != ""]?Set(CDR(action_owner)=${CUT(CDR_SESSION,-,2)}))
exten = _REC.,n,Goto(from-internal,${EXTEN:3},1)
exten = trunk-proxy,1,Log(NOTICE, "trunk-proxy: Begin processing...")
exten = trunk-proxy,n,set(i=0)
exten = trunk-proxy,n(check),Log(NOTICE, "trunk-proxy: Auth user...")
exten = trunk-proxy,n,Set(i=$[${i} + 1])
exten = trunk-proxy,n,Read(PROXYUSER,please-enter-your&user&number&then-press-pound,,,,3)
exten = trunk-proxy,n,GotoIf($["${PROXYUSER}" = ""]?bad)
exten = trunk-proxy,n,Read(PWD,enter-password&then-press-pound,,,,3)
exten = trunk-proxy,n,GotoIf($["${PWD}" = ""]?bad)
exten = trunk-proxy,n,Set(PROXY_PWD=${UCMDB(AAUSER/${PROXYUSER}/PROXY_PWD)})
exten = trunk-proxy,n,GotoIf($["${PWD}" = "${PROXY_PWD}"]?good:bad)
exten = trunk-proxy,n,Macro(hangupcall,)
exten = trunk-proxy,n(good),Set(AAUSER={PROXYUSER})
exten = trunk-proxy,n(dial),Read(DIALNUM,pls-entr-num-uwish2-call&then-press-pound,,,,3)
exten = trunk-proxy,n,Goto(outbound-allroutes,${DIALNUM},1)
exten = trunk-proxy,n,Macro(hangupcall,)
exten = trunk-proxy,n(bad),Wait(1)
exten = trunk-proxy,n,GotoIf($[${i} >= 3]?thankyou)
exten = trunk-proxy,n,Log(WARNING, "Auth failured: Asking for user name again")
exten = trunk-proxy,n,Read(PROXYUSER,please-enter-your&user&number&then-press-pound,,,,5)
exten = trunk-proxy,n,Goto(check)
exten = trunk-proxy,n(thankyou),playback(sorry-cant-let-you-do-that&auth-thankyou)
exten = trunk-proxy,n,Macro(hangupcall,)

[fax2email]
exten = _.,1,Macro(receiveFax)
exten = h,1,Log(NOTICE, "--- receive end -----")
exten = h,n,Log(NOTICE, "${FAXSTATUS} --- ${FAXERROR}")
exten = h,n,ExecIf($["${FAXSTATUS}" == "SUCCESS"]?System(/app/asterisk/var/lib/asterisk/scripts/sendMail.py fax "${FAXMAIL}" "${FAXFILE}" "${FAXNAME}" "${CALLERID(num)}" "${CALLERID(name)}" "${RECEIVEEXTEN}" "${FAXOPT(pages)}" "${FAXDATE}" "${UNIQUEID}" "${ENV(AST_BASE)}"))
exten = h,n,ExecIf($["${FAXSTATUS}" != "SUCCESS"]?System(rm -f "${FAXFILE}" &))

[fax-intelligent-routing]
exten = _.,1,Set(DIAL_DEST=${FAX_INTELLIGENT_ROUTE_DETINATION})
exten = _.,n,Macro(dial,${DIAL_DEST},60)
exten = h,1,Log(NOTICE, "--- FXS machine receive FAX end ---")
exten = h,n,Hangup

[ext-did-catchall]
exten = s,1,Log(WARNING, "Ohh...Sorry, no DID or CID Match")
exten = s,n(a2),Answer
exten = s,n,Wait(2)
exten = s,n,Playback(ss-noservice)
exten = s,n,SayAlpha(${FROM_DID})
exten = s,n,Hangup
exten = _.,1,Set(__FROM_DID=${EXTEN})
exten = _.,n,Log(WARNING, "Received an unknown call with DID set to ${EXTEN}")
exten = _.,n,Goto(s,a2)
exten = h,1,Hangup

[disa-dial]
;exten = fax,1,Goto(fax2email,${EXTEN},1)
exten = fax,1,Goto(faxcontext,${EXTEN},1)
exten = _.,1,Log(NOTICE, "called ${EXTEN} in ${DISACONTEXT} by ${DISA}")
exten = _.,n,Set(EXTTOCALL=${EXTEN})
exten = _.,n,Set(_DISA_TRUNK_NAME=yes)
exten = _.,n,ExecIf($["${REPLACE_CIDNAME}"!=""]?Set(CDR(special_action_type)="${REPLACE_CIDNAME}" <${CALLERID(num)}>))
exten = _.,n,Macro(fax-gateway,${EXTEN})
exten = _.,n,Set(__DISA_CHANNEL_LANGUAGE=${CHANNEL(language)})
;exten = _.,n,Set(CDR(dst_need)=TRUE)
exten = _.,n,Set(_CDR_SESSION=${CDR(session)})
exten = _.,n,Set(CDR(special_dst)=${EXTEN})
exten = _.,n,Set(__DISACONTEXT=from-internal)
exten = _.,n,Dial(Local/${EXTEN}@${DISACONTEXT},${RINGTIME},${DISA_HANGUP}${DIAL_OPTIONS})
exten = _.,n(gosub),Gosub(s-${DIALSTATUS},1)
exten = _.,n,Goto(${DISA})
exten = s-ANSWER,1,Return()
exten = s-CANCEL,1,Return()
exten = s-BUSY,1,Playtones(busy)
exten = s-BUSY,n,NoCDR()
exten = s-BUSY,n,Wait(3)
exten = s-BUSY,n,Return()
exten = _s-.,1,Log(WARNING, "DISA Dial failed due to ${DIALSTATUS} - returning to dial tone")
exten = _s-.,n,NoCDR()
exten = _s-.,n,Playback(cannot-complete-as-dialed&check-number-dial-again)
exten = _s-.,n,Return()
exten = i,1,Playback(cannot-complete-as-dialed&check-number-dial-again)
exten = i,n,GotoIf($["${DISA_HANGUP}" = "Hg"]?${DISA})

[simple_vm]
exten = _X!,1,Set(CDR(action_type)=VM)
exten = _X!,n,Voicemail(${EXTEN},u)

[queue-member-manager]
exten = handle_member,1,Verbose(2, Looping through queues to log in or out queue members)
exten = handle_member,n,Set(thisActiveMember=${CHANNEL(channeltype)}/${CHANNEL(peername)})
exten = handle_member,n,Set(queue_field=2)
exten = handle_member,n,Set(thisQueueXtn=${CUT(QUEUES,\,,${queue_field})})
exten = handle_member,n,While($[${EXISTS(${thisQueueXtn})}])
exten = handle_member,n,Macro(member-loginlogout)
exten = handle_member,n,Set(queue_field=$[${queue_field} + 1])
exten = handle_member,n,Set(thisQueueXtn=${CUT(QUEUES,\,,${queue_field})})
exten = handle_member,n,EndWhile()

;[ext-conference]
[ringgroups]
;[ext-queues]
[voicemenus]
;[voicemailgroups]
[directory]
;[pagegroups]

[sendFAX]
exten => s,1,NoOp(SEND FAX ...)
exten => s,n,Wait(2)
exten => s,n,Set(FILE=${filepath})
exten => s,n,NoOp(${FILE})
exten => s,n,ExecIf($["${fax_local_station_id}" != ""]?Set(LOCALSTATIONID=${fax_local_station_id}))
exten => s,n,ExecIf($["${fax_header_info}" != ""]?Set(LOCALHEADERINFO=${fax_header_info}))
exten => s,n,GotoIf($["${FILE}" = ""]?exit-fax)
exten => s,n,ExecIf($["${station_id}" != ""]?Set(FAXOPT(localstationid=${station_id})))
exten => s,n,Set(FAXOPT(faxdetect)=no)
exten => s,n(send),SendFAX(${FILE},dzsf)
exten => s,n,ExecIf($["${fax_email}" != "" & "${FAXSTATUS}" == "SUCCESS"]?System(/app/asterisk/var/lib/asterisk/scripts/sendMail.py sendfax ${fax_email} ${CALLERID} ${CUT(CUT(CHANNEL,@,1)),/,2)}))
exten => s,n(exit-fax),Hangup

[sendFAXHangUp]
exten => send_fax_hangup,1,Log(NOTICE, "Dial channel is CHANUNAVAIL")
exten => send_fax_hangup,n,Hangup()

;####################################################################
;include
;####################################################################
[ext-paging]
include = pagegroups
include = page_an_extension

[page_an_extension]
include = app-paging
include = app-intercom

[webrtc-internal]
include = from-internal-xfer
include = webrtc-bad-number

[webrtc-bad-number]
exten = h,1,Hangup()
exten = _.,1,ExecIf($["${WEBRTC_DEFAULT_DEST}" == "yes"]?Return())

[from-internal]
include = from-internal-xfer
include = bad-number

[from-internal-codeblue]
include = emergency-outbounds
include = parkedcalls
include = ext-local-confirm
include = from-internal-additional
include = seamless-transfer
include = bad-number

[from-internal-xfer]
include = emergency-outbounds
include = parkedcalls
include = ext-local-confirm
include = app-codeblue
include = from-internal-additional
include = seamless-transfer
;[ext-fax]
[ext-local-confirm]
[from-internal-additional]
include = speed-dial
include = ext-group
include = ext-findmefollow
include = ext-paging
include = app-dialvm
include = app-vmmain
include = app-dialvmgroup
include = ext-conference
include = ext-queues
include = app-blacklist
include = app-pickup
include = app-cfb-on
include = app-cfb-off
include = app-cfn-on
include = app-cfn-off
include = app-cfu-on
include = app-cfu-off
include = app-dnd-on
include = app-dnd-off
include = app-agent-pause
include = app-agent-unpause
include = app-agent-logoff
include = app-cc-request
include = app-cc-cancel
include = app-chanspy
include = app_inbound_zero
include = app_inbound_one
include = inbound_mode_bind
include = app_inbound_routes_one_mode
include = app_inbound_routes_zero_mode
include = app_inbound_routes_sub_bind
include = app-direct-phonenumber
include = directory
include = ext-directory
include = voicemenus
include = voicemailgroups
include = app-pms-status
include = app-pms-wakeup
include = app-ucm-wakeup
include = app-pms-minibar
include = app-wakeup
include = app-presence
include = ext-local
include = ext-webrtc
include = ext-fax
include = ext-park
include = mcm-outbound-allroutes
include = outbound-allroutes
include = callback-outbound-allroutes
include = followme-out
;[ext-group]
;[ext-findmefollow]
[app-blacklist]
include = app-blacklist-add-wrap
include = app-blacklist-remove-wrap
;[ext-local]
;[disa]
;[outbound-allroutes]
[default]
include = operator

[from-trunk]
include = ext-did
include = from-did-direct
include = ext-did-catchall

;[ext-did]
[from-did-direct]
include = ext-findmefollow
include = ext-local

[outbound-externalroutes]
include = outbound-allroutes
include = bad-number



;#################################
;Macros
;#################################
[macro-set-call-options]
;exten = s,1,ExecIf($["${VQ_CALLBACK_CALLER}" == "yes"]?Set(DIAL_OPTIONS=))
exten = s,1,ExecIf($["${VQ_CALLBACK_CALLER}" == "yes" & "${FEATURE_ENABLE}" == "no"]?Set(DIAL_OPTIONS=))
exten = s,n,ExecIf($[ "${WEBCALL:0:13}" == "ANNOUNCEMENTS"  ]?MacroExit)
exten = s,n,ExecIf($[$["${WEBCALL}" == "Conference invitation"] || $["${CONF_USER_INVITE}" == "yes"] || $[ "${CALL_INV_CONFIRM}" != ""]]?Set(CALL_OPTIONS=${ARG1}):Set(CALL_OPTIONS=${ARG1}${DIAL_OPTIONS}))
exten = s,n,ExecIf($["${FROM_TRUNK}" = "yes"]?Set(CALL_OPTIONS=${ARG1}${FROM_TRUNK_OPTIONS}))
exten = s,n,ExecIf($["${WEBRTC_ANONYMOUS}" == "yes"]?Set(CALL_OPTIONS=${FROM_TRUNK_OPTIONS})
exten = s,n,ExecIf($[$["${AUTO_RECORDING}" = "ON"] & $["${RECORD_PROMPT}" = "yes"]]?Set(CALL_OPTIONS=${CALL_OPTIONS}A(dialog-being-recorded)))

[macro-multicastpaging]
exten = s,1,Macro(user-callerid,)
exten = s,n,Set(CDR(app_callee)=${ARG3})
exten = s,n,Set(CDR(action_type)=PAGE[${ARG3}])
exten = s,n,Set(CUSTOM_PROMPT=${ARG4})
exten = s,n,ExecIF($["${ANNOUNCEMENT_TO_MULTICAST}" == "yes"]?Macro(set-cdr-variables))
exten = s,n,ExecIF($["${WAKEUP_INDEX}" != ""]?Set(TARGET=${EXTTOCALL}))
exten = s,n,ExecIF($["${WAKEUP_INDEX}" != ""]?PMS(ucmWake,executed,answered)
exten = s,n,ExecIF($["${CUSTOM_PROMPT}" != ""]?Set(DIAL_OPT=${CUSTOM_PROMPT}))
exten = s,n,ExecIF($["${UCMDB(PAGING/multicastpaging/${ARG1}:${ARG2}_inuse)}" == "yes"]?busy,1)
exten = s,n,Set(UCMDB(PAGING/multicastpaging/${ARG1}:${ARG2}_inuse)=yes)
exten = s,n,Set(IS_MULTIPAGE=yes)
exten = s,n,Set(MULTIPAGE_EXTEN=${ARG1}:${ARG2})
exten = s,n,ExecIf($[${PAGE_DUR_LIMIT} > 0]?Set(PAGE_OPTIONS=zA(${DIAL_OPT})L(${PAGE_DUR_LIMIT})):Set(PAGE_OPTIONS=zA(${DIAL_OPT})))
exten = s,n,Dial(MulticastRTP/basic/${ARG1}:${ARG2},10,${PAGE_OPTIONS})
exten = s,n,Hangup
exten = busy,1,Log(WARNING, "multicastpaging is in use")
exten = busy,n,Playtones(busy)
exten = busy,n,Hangup

[macro-pagingintercom]
exten = s,1,Macro(user-callerid,)
exten = s,n,Set(_CALLER_CHANNEL=${CUT(CHANNEL,/,1)})
exten = s,n,ExecIf($["${ARG1}" == ""]?Hangup)
exten = s,n,ExecIf($["${MCB_CREATE_CHAN}" != ""]?Hangup)
exten = s,n,ExecIf($["${JITTERBUFFER_ENABLE}" = "yes"]?Set(JITTERBUFFER(${JITTERBUFFER_TYPE})=${JITTERBUFFER_PARAM}))
exten = s,n,ExecIf($["${CHANNEL(session)}" = ""]?Set(CHANNEL(session)=${CALLERID(number)}))
exten = s,n,ExecIf($["${CALLER_CHANNEL}" == "Local"]?NoCDR())
exten = s,n,Set(__PAGING_ALERT_INFO=yes)
exten = s,n,Set(__TRANSPARENTSDP=no)
exten = s,n,ExecIf($["${PAGING_REPLACE_CALLERID}" != ""]?Set(CALLERID(name)=${PAGING_REPLACE_CALLERID}))
exten = s,n,Set(__PAGE_CALLERID=${CALLERID(all)})
exten = s,n,Set(_HEAD_CALL_INFO=${PJSIP_HEADER(read,Call-Info)})
exten = s,n,Set(_HEAD_ALERT_INFO=${PJSIP_HEADER(read,Alert-Info)})
exten = s,n,Set(CALLEE_NUMBER=${PAGING_EXTENSION})
exten = s,n,ExecIf($["${CF_USER}" != ""]?Set(CALLEE_NUMBER=${CF_USER}))
exten = s,n,ExecIf($["${CALLEE_NUMBER}"=""]?Set(GOPAGING=${BLACK_WHITE_LIST(pag-${ARG3},CALLEE_NUMBER)}):Set(GOPAGING=${BLACK_WHITE_LIST(pag-${ARG3},${CALLEE_NUMBER})}))
exten = s,n,ExecIf($["${GOPAGING}"="NO"]?Macro(paging-end))
exten = s,n,Page(${ARG1},${ARG2})
exten = s,n,Hangup

[macro-paging-end]
exten = s,1,NoOp()
exten = s,n,Playback(you-have-no-permission&goodbye)
exten = s,n,Hangup

[macro-dial]
exten = s,1,ExecIf($["${VQ_CALLBACK_CALLER}" == "yes"]?Set(__VQ_CALLBACK_CALLEE=yes))
exten = s,n,ExecIf($["${VQ_CALLBACK_CALLER}" == "yes"]?Set(CDR(special_action_type)=VQ_CALLBACK))
exten = s,n,GotoIf($["${MOHCLASS}" = ""]?dial)
exten = s,n,SetMusicOnHold(${MOHCLASS})
exten = s,n(dial),Set(DIAL_STR=${UCMDB(AAUSER/${ARG1}/DIAL)})
exten = s,n,Set(DIALED_EXTEN=${DIAL_STR})
exten = s,n,Set(RINGBOTH_CALLERID=)
exten = s,n,Set(_HEAD_CALL_INFO=${PJSIP_HEADER(read,Call-Info)})
exten = s,n,Set(_HEAD_ALERT_INFO=${PJSIP_HEADER(read,Alert-Info)})
exten = s,n,Set(CHANNEL_TYPE=${SHIFT(DIALED_EXTEN,/)})
;exten = s,n,Set(CALLER_CHANNEL=${CUT(CHANNEL,/,1)})
exten = s,n,ExecIf($["${CHANNEL_TYPE}" == "IAX2"]?Set(DIAL_STR=${DIAL_STR}/${DIALED_EXTEN}))
exten = s,n,ExecIf($["${CHANNEL_TYPE}" == "PJSIP" & "${PJSIP_DIAL_CONTACTS(${DIALED_EXTEN})}" != ""]?Set(DIAL_STR=${PJSIP_DIAL_CONTACTS(${DIALED_EXTEN})}))
exten = s,n,ExecIf($["${FOLLOWME_RING_TIMROUT}" != ""]?Set(CALL_RT=${FOLLOWME_RING_TIMROUT}):Set(CALL_RT=${ARG2})
exten = s,n,Macro(set-call-options,${DISA_HANGUP})
exten = s,n,ExecIf($[$["${FROM_IVR}" != ""] | $[$["${CHANNEL(channeltype)}" == "IAX2"] & $["${BLINDTRANSFER}" != ""]]]?Set(CALL_OPTIONS=${CALL_OPTIONS}m(rbt)))
exten = s,n,ExecIf($[ $["${FROM_IVR}" != ""] & $["${CHANNEL(dahdi_type)}" != "mfc/r2"] ]?Set(CALL_OPTIONS=${CALL_OPTIONS}m(rbt)))
exten = s,n,ExecIf($["${FROM_DIRECTORY}" != ""]?Set(CALL_OPTIONS=${CALL_OPTIONS}m(rbt)))
;exten = s,n,ExecIf($["${CALLER_CHANNEL}" = "Local"]?Set(CALL_OPTIONS=${CALL_OPTIONS}m(rbt)))
exten = s,n,Macro(fax-gateway,${ARG1})
exten = s,n,GotoIf($["${RINGBOTH}" == "yes" & "${RECORD_VMENU}" != "ON"]?:normal)
exten = s,n,Set(EN_BOTH=${UCMDB(AAUSER/${ARG1}/EN_BOTH)})
exten = s,n,ExecIf($["${WAKEUP}" == "WAKEUP" || "${WEBCALL}" = "ANNOUNCEMENT PAGE"]?Set(EN_BOTH=no))
exten = s,n,GotoIf($["${EN_BOTH}" == "yes"]?:normal)
exten = s,n,Set(MATCHTIME=)
exten = s,n,Macro(holidaytime-system,${UCMDB(AAUSER/${ARG1}/RINGBOTH_TIMETYPE)},${ARG1})
exten = s,n,GotoIf($[$[ "${MATCHTIME}" != "1" ] & $["${UCMDB(AAUSER/${ARG1}/bypass_outrt_auth)}" != "yes"] & $["${UCMDB(AAUSER/${ARG1}/user_outrt_passwd)}" != ""] ]?normal:ringboth)
exten = s,n(ringboth),Set(FROM-EXTEN=${UCMDB(AAUSER/${ARG1}/EXTERNAL_NUMBER)})
exten = s,n,Set(TMPCALLERID=${CALLERID(number)})
exten = s,n,Set(CALLERID(number)=${ARG1})
exten = s,n,ExecIf($["${FROM-EXTEN}" != "" & "${EN_BOTH}" == "yes"]?Set(__TRANSPARENTSDP=no))
exten = s,n,GosubIf($["${FROM-EXTEN}" != "" & "${EN_BOTH}" == "yes"]?ringboth_outroute,${FROM-EXTEN},1,${ARG1})
exten = s,n,Set(CALLERID(number)=${TMPCALLERID})
exten = s,n,GotoIf($["${NOMATCHOUT}" == "yes"]?normal)
exten = s,n,Set(MATCHTIME=)
;exten = s,n,Macro(holidaytime-system,${UCMDB(AAUSER/${ARG1}/SKIPAUTHTIMETYPE)},${ARG1})
exten = s,n,MacroIf($["${UCMDB(AAUSER/${ARG1}/bypass_outrt_auth)}" == "bytime"]?holidaytime-system,${UCMDB(AAUSER/${ARG1}/SKIPAUTHTIMETYPE)},${ARG1})
exten = s,n,ExecIf($["${UCMDB(AAUSER/${ARG1}/bypass_outrt_auth)}" != "bytime"]?Set(MATCHTIME=1))
exten = s,n,GotoIf($[$["${RBPASSWD}"!=""] & $[ "${MATCHTIME}" != "1"  ] & $[ "${UCMDB(AAUSER/${ARG1}/bypass_outrt_auth)}" != "yes" ]]?normal)
exten = s,n,GotoIf($[$["${RBPASSWD}"!=""] & $[ "${UCMDB(AAUSER/${ARG1}/bypass_outrt_auth)}" == "no" ]]?normal)
exten = s,n,Noop(BOTHDENIED=${BOTHDENIED})
exten = s,n,NOOp(FROM-EXTEN=${FROM-EXTEN})
exten = s,n,Noop(EN_BOTH=${EN_BOTH})
exten = s,n,GotoIf($[ $["${BOTHDENIED}" == "yes"] & $["${RINGBOTH_PINSETID}" == ""] ]?normal)
exten = s,n,GotoIf($[ $["${RINGBOTH_PINSETID}" != ""] & $[$["${UCMDB(AAUSER/${ARG1}/bypass_outrt_auth)}" == "no"] | $["${MATCHTIME}" != "1"]]]?normal)
exten = s,n,ExecIf($[ $["${GROUP_CALLEE}" == "" ] & $["${FROM-EXTEN}"!=""] & $["${EN_BOTH}"=="yes"]]?Set(CDR(app_callee)=${FROM-EXTEN}))
exten = s,n,ExecIf($["${CUT(OUT_${EXTERNAL_TRUNKINDEX},/,1)}" = "PJSIP"]?Set(TRUNK_PRE_NAME=${CUT(OUT_${EXTERNAL_TRUNKINDEX},/,1)}/${EXTERNAL_NUMBER}@${CUT(OUT_${EXTERNAL_TRUNKINDEX},/,2)}):Set(TRUNK_PRE_NAME=${OUT_${EXTERNAL_TRUNKINDEX}}/${EXTERNAL_NUMBER}))
exten = s,n,ExecIf($[$["${FROM-EXTEN}"!=""] & $["${EN_BOTH}"=="yes"] ]?Set(DIAL_STR=${TRUNK_PRE_NAME}&${DIAL_STR}))
exten = s,n,ExecIF($[ "${UCMDB(TRUNK_${EXTERNAL_TRUNKINDEX}/DOD/${AAUSER})}" != ""]?Set(RINGBOTH_CALLERID=${UCMDB(TRUNK_${EXTERNAL_TRUNKINDEX}/DOD/${AAUSER})}))
exten = s,n,ExecIf($["${OUTKEEPCID_${EXTERNAL_TRUNKINDEX}}" == "yes"]?Set(RINGBOTH_CALLERID=${OUT_CID_${EXTERNAL_TRUNKINDEX}}))
exten = s,n,ExecIF($["${UCMDB(AAUSER/${ARG1}/USE_CALLEE_DOD_ON_FWD_RB)}" == "yes" & "${UCMDB(TRUNK_${GROUP_NUM_OF_THE_TRUNK}/DOD/${ARG1})}" != ""]?Set(RINGBOTH_CALLERID=${UCMDB(TRUNK_${GROUP_NUM_OF_THE_TRUNK}/DOD/${ARG1})}))
exten = s,n,ExecIf($["${CALLERID(number)}"!="" & "${EN_BOTH}"=="yes"]?Set(REG_CALLERNUM=${CALLERID(number)}))
exten = s,n,ExecIf($["${CALLERID(name)}"!="" | "${CALLERID(number)}"!="" & "${EN_BOTH}"=="yes"]?Set(REG_CALELRNAME=${CALLERID(name)}))
exten = s,n,ExecIf($["${CDR(app_callee)}"!="" & "${EN_BOTH}"=="yes"]?Set(REG_CALLEENUM=${CDR(app_callee)}))
exten = s,n,ExecIf($[$["${FROM-EXTEN}"!=""] & $["${EN_BOTH}"=="yes"] ]?Set(__CID_NUM=${CALLERID(num)}))
exten = s,n,ExecIf($[$["${FROM-EXTEN}"!=""] & $["${EN_BOTH}"=="yes"] ]?Set(CDR(special_action_type)=ringboth))
exten = s,n(normal),Log(NOTICE,"The recording file name : ${MIXFILENAME}")
exten = s,n,Log(NOTICE,"Whether open auto recording or not :${MIXAUTORECORDING}")
exten = s,n,ExecIf($["${MIXAUTORECORDING}" == "ON"]?Set(CALL_OPTIONS=${CALL_OPTIONS}M(record-check,StartMonitor)))
exten = s,n,ExecIf($["${DISA_TRUNK_NAME}" != "" & "${ringboth_checkper}" != "yes" & "${CDR(special_action_type)}" != "local_disa"]?NoCDR())
exten = s,n,Set(CALL_OPTIONS=${CALL_OPTIONS}b(callee-handler^s^1))
exten = s,n,Set(CALL_OPTIONS=${CALL_OPTIONS}${EXTENSION_LIMIT})
exten = s,n,ExecIf($["${CODEBLUE_RT}" != ""]?Set(CALL_RT=${CODEBLUE_RT}))
exten = s,n,Set(RETRY=0)
exten = s,n,GotoIf($[$["${UCMDB(AAUSER/${AAUSER}/DIRECTMEDIA)}" == "yes"] & $["${UCMDB(AAUSER/${ARG1}/DIRECTMEDIA)}" == "yes"]]?retry_dial)
exten = s,n,Set(__DYNAMIC_FEATURES=seamless_transfer)
exten = s,n,ExecIf($["${IS_ANNOUNCEMENT_PAGING}" != ""]?Set(CDR(app_callee)=${ANNOUNCEMENT_PAGING_INDEX}(${Callee_NUM})))
exten = s,n(retry_dial),Dial(${Caller_PROTOCOL}/${Callee_NUM},${CALL_RT},${CALL_OPTIONS})
exten = s,n,GotoIf($[ $["${callfile}" != ""] && $[$["${DIALSTATUS}" == "NOANSWER"] || $["${CHANNEL(hangupcause)}" == "18"]] && $[${RETRY} < 2] ]?retry,1)
exten = retry,1,Set(RETRY=${INC(RETRY)})
exten = retry,n,ExecIf($["${RETRY}" == "1"]?Set(postfix=(second call)))
exten = retry,n,ExecIf($["${RETRY}" == "2"]?Set(postfix=(final call)))
exten = retry,n,Set(CALLERID(name)=Scheduled Conference${postfix})
exten = retry,n,Wait(10)
exten = retry,n,Goto(s,retry_dial)

[macro-exten-dialpersonalvm]                 
exten = s,1,Set(CDR(app_callee)=${EXTEN})                                                                                 
exten = s,n(start),Wait(1)                     
exten = s,n,Macro(user-callerid,)
exten = s,n,Macro(get-vmcontext,${AAUSER})
exten = s,n(check),MailBoxExists(${AAUSER}@${VMCONTEXT})                                          
exten = s,n,GotoIf($["${VMBOXEXISTSSTATUS}" = "SUCCESS"]?mbexist)
exten = s,n,Playback(cannot-complete-as-dialed&check-number-dial-again)
exten = s,n,Macro(hangupcall,)           
exten = s,check+101(mbexist),Set(SKIP_PW_CHECK=${UCMDB(AAUSER/${AAUSER}/SKIPVMAUTH)})
exten = s,n,ExecIf($["${SKIP_PW_CHECK}" = "yes"]?VoiceMailMain(${AAUSER}@${VMCONTEXT},s):VoiceMailMain(${AAUSER}@${VMCONTEXT}))
exten = s,n,Macro(hangupcall,)   	

[macro-exten-dialvm]
exten = s,1,Answer
exten = s,n,Macro(user-callerid,)
exten = s,n,Set(CDR(app_callee)=${EXTEN})
exten = s,n(start),Wait(1)
exten = s,n,Log(NOTICE, "macro-exten-dialvm: Asking for mailbox")
exten = s,n,set(i=0)
exten = s,n,Read(MAILBOX,vm-login,,,,5)
exten = s,n(check),Log(NOTICE, "macro-exten-dialvm: Got Mailbox ${MAILBOX}")
exten = s,n,Set(i=$[${i} + 1])
exten = s,n,Macro(get-vmcontext,${MAILBOX})
exten = s,n,MailBoxExists(${MAILBOX}@${VMCONTEXT})
exten = s,n,GotoIf($["${VMBOXEXISTSSTATUS}" = "SUCCESS"]?good:bad)
exten = s,n,Macro(hangupcall,)
exten = s,n(good),Log(NOTICE, "macro-exten-dialvm: Good mailbox ${MAILBOX}@${VMCONTEXT}")
exten = s,n,VoiceMailMain(${MAILBOX}@${VMCONTEXT})
exten = s,n,Macro(hangupcall,)
exten = s,n(bad),Log(WARNING, "macro-exten-dialvm: BAD mailbox ${MAILBOX}@${VMCONTEXT}")
exten = s,n,Wait(1)
exten = s,n,GotoIf($[${i} >= 3]?thankyou)
exten = s,n,Log(NOTICE, "macro-exten-dialvm: Asking for mailbox again")
exten = s,n,Read(MAILBOX,vm-incorrect-mailbox,,,,5)
exten = s,n,Goto(check)
exten = s,n(thankyou),playback(vm-incorrect&auth-thankyou)
exten = s,n,Macro(hangupcall,)

[macro-exten-vm]
exten = s,1,Macro(user-callerid)
exten = s,n,Set(VMBOX=${ARG1})
exten = s,n,Set(CID_NUM=)
exten = s,n,Set(EXTTOCALL=${ARG2})
exten = s,n,Set(DNDON=${UCMDB(AAUSER/${EXTTOCALL}/DND)})
exten = s,n,ExecIf($["${DNDON}" = "yes"]?Macro(check-dnd-white-list))
exten = s,n,ExecIf($["${DNDON}" = "yes"]?Macro(holidaytime-system,${UCMDB(AAUSER/${EXTTOCALL}/DNDTIMETYPE)},${EXTTOCALL}))
exten = s,n,ExecIf($["${MATCHTIME}" != "1"]?Set(DNDON=no))
exten = s,n,Set(WAKEUP=${WEBCALL})
exten = s,n,ExecIf($["${WAKEUP}" = "WAKEUP" || "${WEBCALL}" = "ANNOUNCEMENT PAGE"]?Set(DNDON=no))
exten = s,n,Set(MATCHTIME=)
exten = s,n,Set(CFBEXT=${UCMDB(AAUSER/${EXTTOCALL}/CFB)})
exten = s,n,Set(CFBEXTTYPE=${UCMDB(AAUSER/${EXTTOCALL}/CFBDESTINATIONTYPE)})
exten = s,n,ExecIf($["${CFBEXT}" != ""]?Macro(check-fwd-white-list,CFB))
exten = s,n,ExecIf($["${CFBEXT}" != ""]?Macro(holidaytime-system,${UCMDB(AAUSER/${EXTTOCALL}/CFBTIMETYPE)},${EXTTOCALL}))
exten = s,n,ExecIf($["${MATCHTIME}" != "1"]?Set(CFBEXT=))
exten = s,n,ExecIf($["${WAKEUP}" = "WAKEUP" || "${WEBCALL}" = "ANNOUNCEMENT PAGE"]?Set(CFBEXT=))
exten = s,n,Set(MATCHTIME=)
exten = s,n,Set(CFUEXT=${UCMDB(AAUSER/${EXTTOCALL}/CFU)})
exten = s,n,Set(CFUEXTTYPE=${UCMDB(AAUSER/${EXTTOCALL}/CFUDESTINATIONTYPE)})
exten = s,n,ExecIf($["${CFUEXT}" != ""]?Macro(check-fwd-white-list,CFU))
exten = s,n,ExecIf($["${CFUEXT}" != ""]?Macro(holidaytime-system,${UCMDB(AAUSER/${EXTTOCALL}/CFUTIMETYPE)},${EXTTOCALL}))
exten = s,n,ExecIf($["${MATCHTIME}" != "1" || "${WEBCALL}" = "ANNOUNCEMENT PAGE"]?Set(CFUEXT=))
exten = s,n,Set(MATCHTIME=)
exten = s,n,Set(CFNEXT=${UCMDB(AAUSER/${EXTTOCALL}/CFN)})
exten = s,n,Set(CFNEXTTYPE=${UCMDB(AAUSER/${EXTTOCALL}/CFNDESTINATIONTYPE)})
exten = s,n,ExecIf($["${CFNEXT}" != ""]?Macro(check-fwd-white-list,CFN))
exten = s,n,ExecIf($["${CFNEXT}" != ""]?Macro(holidaytime-system,${UCMDB(AAUSER/${EXTTOCALL}/CFNTIMETYPE)},${EXTTOCALL}))
exten = s,n,ExecIf($["${MATCHTIME}" != "1"]?Set(CFNEXT=))
exten = s,n,ExecIf($["${WAKEUP}" = "WAKEUP" || "${WEBCALL}" = "ANNOUNCEMENT PAGE"]?Set(CFNEXT=))
exten = s,n,ExecIf($["${CFUEXT}" != ""]?ForkCDR(are)) 
exten = s,n,Set(MATCHTIME=)
exten = s,n,Set(RINGBOTH=)
exten = s,n,Macro(holidaytime-system,${UCMDB(AAUSER/${EXTTOCALL}/RINGBOTH_TIMETYPE)},${EXTTOCALL})
exten = s,n,ExecIf($["${MATCHTIME}" == "1"]?Set(RINGBOTH=yes))
exten = s,n,ExecIf($["${CODEBLUE_DNDOFF}" == "yes"]?Set(DNDON=no))
exten = s,n,ExecIf($[ $[$["${IN_FOLLOWME}" == "yes"] && $["${FOLLOWME_DEST}" != "yes"]] | $[ $["${NODEST}" != ""]  && $[ $["${WEBCALL}" == ""] | $["${WEBCALL:0:10}" == "CONFERENCE"] ] ] ]?Set(DNDON=no))
exten = s,n,ExecIf($[ $[$["${IN_FOLLOWME}" == "yes"] && $["${FOLLOWME_DEST}" != "yes"]] | $["${NODEST}" != ""] | $["${NOCF}" != ""]]?Set(CFBEXT=))
exten = s,n,ExecIf($[ $[$["${IN_FOLLOWME}" == "yes"] && $["${FOLLOWME_DEST}" != "yes"]] | $["${NODEST}" != ""] | $["${NOCF}" != ""]]?Set(CFNEXT=))
exten = s,n,ExecIf($[ $[$["${IN_FOLLOWME}" == "yes"] && $["${FOLLOWME_DEST}" != "yes"]] | $["${NODEST}" != ""] | $["${NOCF}" != ""]]?Set(CFUEXT=))
exten = s,n,ExecIf($["${IS_SFU}" == "yes"]?Set(CFBEXT=))
exten = s,n,ExecIf($["${IS_SFU}" == "yes"]?Set(CFNEXT=))
exten = s,n,ExecIf($["${IS_SFU}" == "yes"]?Set(CFUEXT=))
exten = s,n,ExecIf($["${DNDON}" = "yes"]?Set(DIALSTATUS=BUSY))
exten = s,n,ExecIf($[$["${DNDON}" = "yes"] && ["${IS_SFU}" = "yes"]]?Hangup)
exten = s,n,GotoIf($["${DNDON}" = "yes"]?blindtransfercb)
exten = s,n,ExecIf($["${CF_ALL}" != ""]?Set(_CF_ALL=${CALL_FORWARD}@${CF_ALL}))
exten = s,n,ExecIf($["${CF_ALL}" == ""]?Set(_CF_ALL=${CALL_FORWARD}))
exten = s,n,GotoIf($["${CFUEXT}" != ""]?docfu,1)
exten = s,n,Set(CALL_RT=${RINGTIME})
exten = s,n,Set(USER_RT=${UCMDB(AAUSER/${EXTTOCALL}/RT)})
exten = s,n,ExecIf($[$["${USER_RT}" != ""] & $["${CONF_ROOM}" == ""]]?Set(CALL_RT=${USER_RT}))
exten = s,n,ExecIf($[ "${FROM_CALLBACK}" == "yes" && "${AAUSER}" == "" ]?Set(CALLBACK_REC=no):Set(CALLBACK_REC=yes))
exten = s,n,Set(RECOED_CHECK_MEM1=${REC_AAUSER})
exten = s,n,ExecIf($[ "${SPYEXTEN}" != ""]?Set(RECOED_CHECK_MEM1=${CUT(CUT(SPYEXTEN,/,2),-,1)}))
exten = s,n,ExecIf($[ $[ "${HAVE_RECORD}" = "1" | "${TRUNK_REC}" = "yes" ] & $["${WAKEUP_STATUS}" == ""] && $["${UCM_WAKEUP_STATUS}" == ""] && $["${CALLBACK_REC}" == "yes"] && $["${IS_ANNOUNCEMENT_PAGING}" == ""] ]?Macro(record-check,${RECOED_CHECK_MEM1}-${EXTTOCALL},))
exten = s,n,Set(CALLWAITING=${UCMDB(AAUSER/${EXTTOCALL}/CALLWAITING)})
exten = s,n,GotoIf($["${CALLWAITING}" == "no" && "${EXTENSION_STATE(${EXTTOCALL}@from-internal)}" != "NOT_INUSE" && "${EXTENSION_STATE(${EXTTOCALL}@from-internal)}" != "UNAVAILABLE" && "${EXTENSION_STATE(${EXTTOCALL}@from-internal)}" != "UNKNOWN"]?docallwaiting,1)
exten = s,n,Macro(dial,${EXTTOCALL},${CALL_RT})
exten = s,n,ExecIf($["${WEBRTC_DEFAULT_DEST}" == "yes"]?Return())
exten = s,n,ExecIf($["${CHANNEL(channeltype)}" = "Local" & $["${fax_sending}" != "yes" & "${CALLERID(number)}" != "VFAX"] & "${DIALSTATUS}" != "BUSY" & "${CDR(action_type)}" != "ANNOUNCEMENT PAGE"]?NoCDR())
exten = s,n,ExecIf($[$["${fax_sending}"="yes" | "${CALLERID(number)}" = "VFAX"] & $["${DIALSTATUS}"="CHANUNAVAIL" | "${DIALSTATUS}" = "BUSY"]]?Goto(sendFAXHangUp,send_fax_hangup,1))
exten = s,n,Set(XFER=${CUT(CHANNEL(name),@,2):0:18})
exten = s,n,ExecIf($[$["${XFER}" == "from-internal-xfer"] & $["${CHANNEL(channeltype)}" == "Local"] & $["${BLINDTRANSFER}" == ""]]?Hangup)
exten = s,n,ExecIf($["${IS_SFU}" == "yes" | "${CHANNEL(hangupcause)}" == "58" | "${IS_ANNOUNCEMENT_PAGING}" == "1"]?NoCDR())
exten = s,n,ExecIf($["${IS_SFU}" == "yes" | "${IS_ANNOUNCEMENT_PAGING}" == "1"]?Hangup)
exten = s,n,Set(SV_DIALSTATUS=${DIALSTATUS})
exten = s,n,ExecIf($[$["${SV_DIALSTATUS}"="NOANSWER" | "${SV_DIALSTATUS}"="CHANUNAVAIL"] & $["${CFNEXT}"!=""]]?ForkCDR(are))
exten = s,n,ExecIf($["${MCM_PEER_TRUNKS}" == "yes"]?NoCDR())
exten = s,n,ExecIf($["${MCM_PEER_TRUNKS}" == "yes"]?Macro(hangupcall))
exten = s,n,GosubIf($[$["${SV_DIALSTATUS}"="NOANSWER" | "${SV_DIALSTATUS}"="CHANUNAVAIL"] & $["${CFNEXT}"!=""]]?docfn,1)
exten = s,n,GosubIf($[$["${SV_DIALSTATUS}"="BUSY"] & $["${CFBEXT}"!=""]]?docfb,1)
exten = s,n,GosubIf($[$["${SV_DIALSTATUS}"="NOANSWER" | "${SV_DIALSTATUS}"="BUSY" | "${SV_DIALSTATUS}"="CHANUNAVAIL"] & $["${BLIND_TRANSFER_CALLBACK_NUM}"!=""]]?doblindtransfercb,1)
exten = s,n,Set(DIALSTATUS=${SV_DIALSTATUS})
exten = s,n,Log(NOTICE, "redirecting information : ${REDIRECTING(to-all)}")
exten = s,n,ExecIf($[ $["${REDIRECTING(to-num)}" != ""] && $["${CHANNEL(channeltype)}" != "Local"] ]?Set(VMBOX=${REDIRECTING(to-num)}))
exten = s,n,ExecIf($[ $["${IN_FOLLOWME}" = "yes"] && $["${FOLLOWME_DEST}" != "yes"]]?Macro(hangupcall))
exten = s,n(blindtransfercb),GosubIf($[$["${DIALSTATUS}"="NOANSWER" | "${DIALSTATUS}"="BUSY" | "${DIALSTATUS}"="CHANUNAVAIL"] & $["${BLIND_TRANSFER_CALLBACK_NUM}"!=""]]?doblindtransfercb,1)
exten = s,n(sent2vm),GotoIf($[ "${DIALSTATUS}" == "ANSWER" | "${VMBOX}" = "novm" | $[$["${TRANSFERERNAME}" != ""] & $["${BLINDTRANSFER}" == ""]] | "${NODEST}" != ""| "${RECORD_VMENU}" = "ON" | "${callfile}" != "" | "${WAKEUP_STATUS}" != "" | "${UCM_WAKEUP_STATUS}" != "" | "${EMERGENCY_CALL_INFO}" == "yes" | "${CC_CALLBACK}"=="yes"]?s-${DIALSTATUS},1)
exten = s,n,GosubIf($[ $["${DID_VM_ENABLE}" = "yes" & "${FROM_TRUNK}" = "yes"] && $["${DIALSTATUS}" = "NOANSWER" | "${DIALSTATUS}" = "BUSY" | "${DIALSTATUS}" = "CHANUNAVAIL"] ]?dodv,1)
exten = s,n,ExecIf($["${SPYEXTEN}"!=""]?Macro(hangupcall))
exten = s,n,Log(NOTICE, "Sending to Voicemail box ${EXTTOCALL}")
exten = s,n,ExecIf($["${EXTTOCALL}" != "" & "${BLINDTRANSFER}" != ""]?Set(VMBOX=${EXTTOCALL}))
exten = s,n,ExecIf($["${AAUSER}"="${VMBOX}" & "${EXTTOCALL}" != ""]?Set(VMBOX=${EXTTOCALL}))
exten = s,n,ExecIf($["${DIALSTATUS}"="CHANUNAVAIL" & "${FROM_TRUNK}"="yes"]?forkCDR(are))
exten = s,n,Macro(vm,${VMBOX},${DIALSTATUS},${IVR_RETVM})
exten = dodv,1,SET(MSG=choose-vm-mode)
exten = dodv,n,Read(KEY,${MSG},,,,)
exten = dodv,n,MacroIf($[ "${KEY}" = "2" ]?exten-dialvm,)
exten = dodv,n,Return
exten = docfu,1,Macro(set-call-options,)
exten = docfu,n,Set(SHARED(REC_CALLFORWARD,${CHANNEL:0:-1}1)=${CFUEXT})
exten = docfu,n,Set(_CF_REASON=${AST_REDIRECTING_REASON_UNCONDITIONAL})
exten = docfu,n,Set(CDR_RECORD_NO_FILE=yes)
exten = docfu,n,Set(_CF_USER=${EXTTOCALL})
exten = docfu,n,Set(CDR(action_type)=CALLFORWARD)
exten = docfu,n,Set(CDR(action_owner)=${CF_USER})
exten = docfu,n,Macro(exten-presence-transfer,${CFUEXTTYPE},${CFUEXT})
exten = docfu,n,Return
exten = docfn,1,Macro(set-call-options,)
exten = docfn,n,Set(SHARED(REC_CALLFORWARD,${CHANNEL:0:-1}1)=${CFNEXT})
exten = docfn,n,Set(_CF_REASON=${AST_REDIRECTING_REASON_NO_ANSWER})
exten = docfn,n,Set(CDR_RECORD_NO_FILE=yes)
exten = docfn,n,Set(_CF_USER=${EXTTOCALL})
exten = docfn,n,Set(CDR(action_type)=CALLFORWARD)
exten = docfn,n,Set(CDR(app_callee)=${CFNEXT})
exten = docfn,n,Set(CDR(action_owner)=${CF_USER})
exten = docfn,n,Set(CF_EXTEN=${CFNEXT})
exten = docfn,n,Macro(exten-presence-transfer,${CFNEXTTYPE},${CFNEXT})
exten = docfn,n,Return
exten = docfb,1,Macro(set-call-options,)
exten = docfb,n,Set(SHARED(REC_CALLFORWARD,${CHANNEL:0:-1}1)=${CFBEXT})
exten = docfb,n,Set(_CF_REASON=${AST_REDIRECTING_REASON_USER_BUSY})
exten = docfb,n,Set(CDR_RECORD_NO_FILE=yes)
exten = docfb,n,Set(_CF_USER=${EXTTOCALL})
exten = docfb,n,Set(CDR(action_type)=CALLFORWARD)
exten = docfb,n,Set(CDR(app_callee)=${CFBEXT})
exten = docfb,n,Set(CDR(action_owner)=${CF_USER})
exten = docfb,n,Set(CF_EXTEN=${CFBEXT})
exten = docfb,n,Macro(exten-presence-transfer,${CFBEXTTYPE},${CFBEXT})
exten = docfb,n,Return
exten = doblindtransfercb,1,Macro(set-call-options,)
exten = doblindtransfercb,n,Goto(from-internal,${BLIND_TRANSFER_CALLBACK_NUM},1)
exten = doblindtransfercb,n,Return
exten = docallwaiting,1,Set(DIALSTATUS=BUSY)
exten = docallwaiting,n,GotoIf($["${VMBOX}" == "novm"]?s-${DIALSTATUS},1)
exten = docallwaiting,n,Macro(vm,${VMBOX},${DIALSTATUS},${IVR_RETVM})
exten = s-BUSY,1,Log(WARNING, "Extension is reporting BUSY and not passing to Voicemail")
exten = s-BUSY,n,ExecIF($["${WAKEUP_STATUS}" != "" | "${UCM_WAKEUP_STATUS}" != ""]?Set(TARGET=${CUT(CHANNEL(name),@,1)}))
exten = s-BUSY,n,ExecIF($["${WAKEUP_STATUS}" != "" | "${UCM_WAKEUP_STATUS}" != ""]?Set(TARGET=${CUT(TARGET,/,2)}))
exten = s-BUSY,n,ExecIF($["${WAKEUP_STATUS}" != ""]?PMS(wake,2,3));executed)
exten = s-BUSY,n,ExecIF($["${UCM_WAKEUP_STATUS}" != ""]?PMS(ucmWake,executed,busy))
exten = s-BUSY,n,Set(CDR(RECORD_FILES)=)
exten = s-BUSY,n,Progress()
exten = s-BUSY,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI" & "${CHANNEL(dahdi_type)}" = "analog"]?Answer())
exten = s-BUSY,n,Set(PROMPT_TONE=${IF($["${UCMDB_EXISTS(PROMPT_TONE/USER_BUSY)}" = "1"]?${DB_RESULT}:user-busy)})
;exten = s-BUSY,n,Playtones(busy)
exten = s-BUSY,n,ExecIf($["${CHANNEL_TYPE}" != "DAHDI" & (${VMBOX} != "novm" & ${DNDON} != yes)]?NoCDR())
exten = s-BUSY,n,ExecIf($["${CONF_INVITE}" != "yes" || "${DO_FORWARD}" == ""]?Playback(silence/1&${PROMPT_TONE},noanswer))
exten = s-BUSY,n,Busy(5)
exten = s-NOANSWER,1,Log(WARNING, "Extension is reporting NOANSWER and not passing to Voicemail, hangup")
exten = s-NOANSWER,n,ExecIF($["${WAKEUP_STATUS}" != "" | "${UCM_WAKEUP_STATUS}" != ""]?Set(TARGET=${CUT(CHANNEL(name),@,1)}))
exten = s-NOANSWER,n,ExecIF($["${WAKEUP_STATUS}" != "" | "${UCM_WAKEUP_STATUS}" != ""]?Set(TARGET=${CUT(TARGET,/,2)}))
exten = s-NOANSWER,n,ExecIF($["${WAKEUP_STATUS}" != ""]?PMS(wake,2,2));executed
exten = s-NOANSWER,n,ExecIF($["${UCM_WAKEUP_STATUS}" != ""]?PMS(ucmWake,executed,no_answer))
exten = s-NOANSWER,n,Set(CDR(RECORD_FILES)=)
;exten = s-NOANSWER,n,GotoIf($["${CHANNEL(channeltype)}" = "DAHDI" & "${CHANNEL(dahdi_type)}" = "analog"]?congestion)
exten = s-NOANSWER,n,NoCDR()
exten = s-NOANSWER,n,Progress()
exten = s-NOANSWER,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI" & "${CHANNEL(dahdi_type)}" = "analog"]?Answer())
exten = s-NOANSWER,n,Set(PROMPT_TONE=${IF($["${UCMDB_EXISTS(PROMPT_TONE/NO_ANSWER)}" = "1"]?${DB_RESULT}:no-answer)})
exten = s-NOANSWER,n,Playback(silence/1&${PROMPT_TONE},noanswer) 
exten = s-NOANSWER,n,Hangup
exten = s-NOANSWER,n(congestion),Playtones(congestion)
exten = s-NOANSWER,n,Congestion(10)
exten = _s-.,1,Log(WARNING, "Extension is reporting ${DIALSTATUS} and not passing to Voicemail")
exten = _s-.,n,Set(HANGUP_CODE=${CHANNEL(hangupsipcode)})
exten = _s-.,n,ExecIF($["${WAKEUP_STATUS}" != "" | "${UCM_WAKEUP_STATUS}" != ""]?Set(TARGET=${CUT(CHANNEL(name),@,1)}))
exten = _s-.,n,ExecIF($["${WAKEUP_STATUS}" != "" | "${UCM_WAKEUP_STATUS}" != ""]?Set(TARGET=${CUT(TARGET,/,2)}))
exten = _s-.,n,ExecIF($["${WAKEUP_STATUS}" != "" && "${HANGUP_CODE}" == "408"]?PMS(wake,2,2));noanswer
exten = _s-.,n,ExecIF($["${WAKEUP_STATUS}" != "" && "${HANGUP_CODE}" != "408"]?PMS(wake,2,4));executed
exten = _s-.,n,ExecIF($["${UCM_WAKEUP_STATUS}" != "" && "${HANGUP_CODE}" == "408"]?PMS(ucmWake,executed,no_answer))
exten = _s-.,n,ExecIF($["${UCM_WAKEUP_STATUS}" != "" && "${HANGUP_CODE}" != "408"]?PMS(ucmWake,executed,error))
exten = _s-.,n,Noop(${DISA_HANGUP})
exten = _s-.,n,ExecIf($["${DISA}" != "" & "${EXTEN}" == "s-ANSWER" & "${DISA_HANGUP}" == "Hg"]?Goto(disa-dial,s,gosub))
exten = _s-.,n,ExecIf($["${DISA}" != "" & "${EXTEN}" == "s-ANSWER"]?Hangup())
exten = _s-.,n,Set(CDR(RECORD_FILES)=)
;
exten = _s-.,n,GotoIf($["${HANGUP_CODE}" == "408"]?s-NOANSWER,1)
exten = _s-.,n,GotoIf($["${CHANNEL(hangupcause)}" == "30"]?s-UNREACHABLE,1)  
;
;exten = _s-.,n,Playtones(congestion)
exten = _s-.,n,ExecIf($["${CHANNEL_TYPE}" != "DAHDI" & "${CHANNEL_TYPE}" != "IAX2"]?NoCDR())
exten = _s-.,n,Progress()
exten = _s-.,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI" & "${CHANNEL(dahdi_type)}" = "analog"]?Answer())
exten = _s-.,n,Set(PROMPT_TONE=${IF($["${UCMDB_EXISTS(PROMPT_TONE/GENERAL_FAILED)}" = "1"]?${DB_RESULT}:general-failed)})
exten = _s-.,n,Playback(silence/1&${PROMPT_TONE},noanswer) 
exten = _s-.,n,Hangup

exten = s-UNREACHABLE,1,Progress()
exten = s-UNREACHABLE,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI" & "${CHANNEL(dahdi_type)}" = "analog"]?Answer())
exten = s-UNREACHABLE,n,Set(PROMPT_TONE=${IF($["${UCMDB_EXISTS(PROMPT_TONE/OUT_OF_SERVICE)}" = "1"]?${DB_RESULT}:out-of-service)})
exten = s-UNREACHABLE,n,ExecIf($["${CONF_INVITE}" != "yes" || "${DO_FORWARD}" == ""]?Playback(silence/1&${PROMPT_TONE},noanswer))
exten = s-UNREACHABLE,n,Hangup

exten = exit,1,Playback(beep&line-busy-transfer-menu&silence/1)
exten = exit,n(return),MacroExit()

[macro-sca-did-vm]
exten = s,1,Log(NOTICE, "sca did vm, to wait for key")
exten = s,n,SET(MSG=choose-vm-mode)
exten = s,n,Read(KEY,${MSG},,,,)
exten = s,n,ExecIf($[ "${KEY}" = "2" ]?Macro(exten-dialvm):Macro(vm,${ARG1},${SCA_CALL_STATUS}))
exten = s,n,Hangup


[macro-sca-call-end]
exten = s,1,Log(NOTICE, "sca call end, to check if need play prompt tone")
exten = s,n,ExecIf($["${IN_FOLLOWME}" == "yes"]?Hangup())
exten = s,n,GotoIf($[ "${SCA_CALL_STATUS}" == "NOANSWER" | "${SCA_CALL_STATUS}" = "BUSY" | "${SCA_CALL_STATUS}" = "UNREACHABLE" | "${SCA_CALL_STATUS}" = "FAILED" ]?s-${SCA_CALL_STATUS},1)
exten = s,n,Hangup
exten = s-BUSY,1,Progress()
exten = s-BUSY,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI" & "${CHANNEL(dahdi_type)}" = "analog"]?Answer())
exten = s-BUSY,n,Set(PROMPT_TONE=${IF($["${UCMDB_EXISTS(PROMPT_TONE/USER_BUSY)}" = "1"]?${DB_RESULT}:user-busy)})
exten = s-BUSY,n,Playback(silence/1&${PROMPT_TONE},noanswer) 
exten = s-BUSY,n,Hangup
exten = s-NOANSWER,1,Progress()
exten = s-NOANSWER,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI" & "${CHANNEL(dahdi_type)}" = "analog"]?Answer())
exten = s-NOANSWER,n,Set(PROMPT_TONE=${IF($["${UCMDB_EXISTS(PROMPT_TONE/NO_ANSWER)}" = "1"]?${DB_RESULT}:no-answer)})
exten = s-NOANSWER,n,Playback(silence/1&${PROMPT_TONE},noanswer) 
exten = s-NOANSWER,n,Hangup
exten = s-UNREACHABLE,1,Progress()
exten = s-UNREACHABLE,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI" & "${CHANNEL(dahdi_type)}" = "analog"]?Answer())
exten = s-UNREACHABLE,n,Set(PROMPT_TONE=${IF($["${UCMDB_EXISTS(PROMPT_TONE/OUT_OF_SERVICE)}" = "1"]?${DB_RESULT}:out-of-service)})
exten = s-UNREACHABLE,n,Playback(silence/1&${PROMPT_TONE},noanswer) 
exten = s-UNREACHABLE,n,Hangup
exten = s-FAILED,1,Progress()
exten = s-FAILED,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI" & "${CHANNEL(dahdi_type)}" = "analog"]?Answer())
exten = s-FAILED,n,Set(PROMPT_TONE=${IF($["${UCMDB_EXISTS(PROMPT_TONE/GENERAL_FAILED)}" = "1"]?${DB_RESULT}:general-failed)})
exten = s-FAILED,n,Playback(silence/1&${PROMPT_TONE},noanswer) 
exten = s-FAILED,n,Hangup

[macro-hangupcall]
exten = s,1,Hangup

[macro-agent-add]
exten = s,1,Wait(1)
exten = s,n,GotoIf($[ "${FROM_TRUNK}" == "yes" ]?invalid)
exten = s,n,GotoIf($[ "${SCA_PRIV_CALLER}" == "yes" ]?nopermission)
exten = s,n,Macro(user-callerid,SKIPTTL)
exten = s,n(a5),Set(CALLBACKNUM=${AAUSER})
exten = s,n,ExecIf($["${CALLBACKNUM}" = ""]?Set(CALLBACKNUM=${CALLERID(number)}))
exten = s,n,GotoIf($["${CALLBACKNUM}" = ""]?a3)
exten = s,n(a7),GotoIf($["${CALLBACKNUM}" = "${ARG1}"]?invalid)
exten = s,n,ExecIf($["${QREGEX}" != ""]?GotoIf($["${REGEX("${QREGEX}" ${CALLBACKNUM})}" = "0"]?invalid))
exten = s,n,ExecIf($["${ARG2}" != ""]?Authenticate(${ARG2}))
exten = s,n,Set(DIALNUM=${CALLBACKNUM})
exten = s,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI"]?Set(DIALNUM=${CHANNEL(dahdi_channel)}))
exten = s,n(a9),AddQueueMember(${ARG1},${CHANNEL(channeltype)}/${DIALNUM})
exten = s,n,ExecIf($[ "${AQMSTATUS}" == "MEMBERFULL" ]?Playback(agent-login-limit))
exten = s,n,GotoIf($[ "${AQMSTATUS}" == "MEMBERFULL" ]?a11)
exten = s,n,UserEvent(Agentlogin,Agent: ${CALLBACKNUM})
exten = s,n,Wait(1)
exten = s,n,Playback(agent-loginok&with&extension)
exten = s,n,SayDigits(${CALLBACKNUM})
exten = s,n(a11),Hangup
exten = s,n,MacroExit()
exten = s,n(invalid),Playback(pbx-invalid)
exten = s,n,Goto(a11)
exten = s,n(nopermission),Playback(you-have-no-permission&goodbye) 
exten = s,n,Goto(a11)


[macro-agent-del]
exten = s,1,Wait(1)
exten = s,n,GotoIf($[ "${SCA_PRIV_CALLER}" == "yes" ]?notinqueue)
exten = s,n,Macro(user-callerid,SKIPTTL)
exten = s,n(a5),Set(CALLBACKNUM=${AAUSER})
exten = s,n,ExecIf($["${CALLBACKNUM}" = ""]?Set(CALLBACKNUM=${CALLERID(number)}))
exten = s,n,GotoIf($["${CALLBACKNUM}" = ""]?a3)
exten = s,n,Set(DIALNUM=${CALLBACKNUM})
exten = s,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI"]?Set(DIALNUM=${CHANNEL(dahdi_channel)}))
exten = s,n(a7),RemoveQueueMember(${ARG1},${CHANNEL(channeltype)}/${DIALNUM})
exten = s,n,UserEvent(RefreshQueue)
exten = s,n,Wait(1)
exten = s,n,GotoIf($["${RQMSTATUS}" = "NOTDYNAMIC"]?static)
exten = s,n,GotoIf($["${RQMSTATUS}" = "NOTINQUEUE"]?notinqueue)
exten = s,n,Playback(agent-loggedoff)
exten = s,n,Hangup
exten = s,n(notinqueue),Playback(agent-not-exist)
exten = s,n,Hangup
exten = s,n(static),Playback(static-agent-cant-logout)
exten = s,n,Hangup

[macro-agent-logoff]
exten = s,1,Wait(1)
exten = s,n,GotoIf($[ "${SCA_PRIV_CALLER}" == "yes" ]?notinqueue)  
exten = s,n,Macro(user-callerid,SKIPTTL)
exten = s,n(a5),Set(CALLBACKNUM=${AAUSER})
exten = s,n,ExecIf($["${CALLBACKNUM}" = ""]?Set(CALLBACKNUM=${CALLERID(number)}))
exten = s,n,GotoIf($["${CALLBACKNUM}" = ""]?a3)
exten = s,n,Set(DIALNUM=${CALLBACKNUM})
exten = s,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI"]?Set(DIALNUM=${CHANNEL(dahdi_channel)}))
exten = s,n(a7),LogoffQueueMember(${ARG1},${CHANNEL(channeltype)}/${DIALNUM})
exten = s,n,UserEvent(RefreshQueue)
exten = s,n,Wait(1)
exten = s,n,GotoIf($["${RQMSTATUS}" = "NOTDYNAMIC"]?static)
exten = s,n,GotoIf($["${RQMSTATUS}" = "NOTINQUEUE"]?notinqueue)
exten = s,n,Playback(agent-loggedoff)
exten = s,n,Hangup
exten = s,n(notinqueue),Playback(agent-not-exist)
exten = s,n,Hangup
exten = s,n(static),Playback(static-agent-cant-logout)
exten = s,n,Hangup

[macro-check-permission]
exten = s,1,Set(OUT_PERMISSION=${UCMDB(AAUSER/${AAUSER}/PERMISSION)})
exten = s,n,ExecIf($["${FROM_CALLBACK}" = "yes" || "${FROM_PARK}" == "yes"]?Set(OUT_PERMISSION=internal-local-national-international))
exten = s,n,ExecIf($[$["${DISA_PERMISSION}" != ""] && $["${CUT(CHANNEL(name),@,2):0:18}" != "from-internal-xfer"]]?Set(OUT_PERMISSION=${DISA_PERMISSION}))
exten = s,n,ExecIf($["${CF_USER}" != ""]?Set(OUT_PERMISSION=${UCMDB(AAUSER/${CF_USER}/PERMISSION)}))
;exten = s,n,ExecIf($[$["${GROUPRINGOUT}" != ""] & $["${GROUPTOEXTERNAL}" != "yes"]]?Set(OUT_PERMISSION=${UCMDB(AAUSER/${AAUSER}/PERMISSION)}))
exten = s,n,ExecIf($["${GROUPRINGOUT}" != ""]?Set(OUT_PERMISSION=internal-local-national-international))
exten = s,n,ExecIf($["${DID_DEST}" == "external_number"]?Set(OUT_PERMISSION=internal-local-national-international))
exten = s,n,Noop(DO_FORWARD=${DO_FORWARD})
exten = s,n,GotoIf($["${DO_FORWARD}" != ""]?pcft:nopcft)
exten = s,n(pcft),Set(DO_FORWARDEXT1=${CUT(DO_FORWARD,,1)})
exten = s,n,Set(DO_FORWARDEXT2=${CUT(DO_FORWARDEXT1,/,2)})
exten = s,n,Set(OUT_PERMISSION=${UCMDB(AAUSER/${DO_FORWARDEXT2}/PERMISSION)})
exten = s,n(nopcft),Noop(BLINDTRANSFER=${BLINDTRANSFER})
exten = s,n,GotoIf($["${BLINDTRANSFER}" != ""]?blt:noblt)
exten = s,n(blt),Set(BLINDEXT1=${CUT(BLINDTRANSFER,,1)})
exten = s,n,Set(BLINDEXT2=${CUT(BLINDEXT1,/,2)})
exten = s,n,ExecIf($["${CF_USER}" != ""]?Set(OUT_PERMISSION=${UCMDB(AAUSER/${CF_USER}/PERMISSION)}))
exten = s,n,Set(OUT_PERMISSION=${UCMDB(AAUSER/${BLINDEXT2}/PERMISSION)})
exten = s,n(noblt),ExecIf($["${FOLLOWME_USER}" != ""]?Set(OUT_PERMISSION=${UCMDB(AAUSER/${FOLLOWME_USER}/PERMISSION)}))
exten = s,n,ExecIf($["${FROM-EXTEN}" != "" && "${EN_BOTH}" == "yes" ]?Set(OUT_PERMISSION=${UCMDB(AAUSER/${ARG1}/PERMISSION)}))
exten = s,n,GotoIf($["${CONF_ROOM}" == "" && "${MCB_CONF_HEADER}" == ""]?noconf)
exten = s,n,ExecIf($["${CONF_MENU_CHAN}" != ""]?Set(CONF_INVITER=${CONF_MENU_CHAN}))
exten = s,n,ExecIf($["${ORIG_CHANNEL}" != ""]?Set(CONF_INVITER=${ORIG_CHANNEL}))
exten = s,n,GotoIf($["${CONF_INVITER}" == "" || "${SHARED(CONF_USER_BY_TRUNK,${CONF_INVITER})}" == "1"]?noconf)
exten = s,n,Set(CONF_INVITER=${CUT(CONF_INVITER,@,1)})
exten = s,n,Set(CONF_INVITER=${CUT(CONF_INVITER,/,2)})
exten = s,n,Set(CONF_INVITER=${CUT(CONF_INVITER,-,1)})
exten = s,n,ExecIf($["${CONF_INVITER}" != ""]?Set(TMP_OUT_PERMISSION=${UCMDB(AAUSER/${CONF_INVITER}/PERMISSION)}))
exten = s,n,ExecIf($["${TMP_OUT_PERMISSION}" != ""]?Set(OUT_PERMISSION=${TMP_OUT_PERMISSION}))
exten = s,n(noconf),Noop(CONF_ROOM=${CONF_ROOM})
exten = s,n,ExecIf($["${OUT_PERMISSION}" = ""]?Set(OUT_PERMISSION=${DEF_PERMISSION}))
exten = s,n,ExecIf($["${SIGNAL_AUTO_TEST}" = "yes"]?Set(OUT_PERMISSION=internal-local-national-international))
exten = s,n,Set(PERMI_COUNT=${FIELDQTY(OUT_PERMISSION,-)})
exten = s,n,Set(i=1)
exten = s,n,While($[${i} <= ${PERMI_COUNT}])
exten = s,n,Set(tmp=${CUT(OUT_PERMISSION,,${i})})
exten = s,n,Set(PERMI_MATCH=${IF($[${tmp} = ${ARG2}]?true:false)})
exten = s,n,Set(i=$[${i} + 1])
exten = s,n,GotoIf($[${PERMI_MATCH} = true]?break:continue)
exten = s,n(break),ExitWhile()
exten = s,n(continue),ContinueWhile()
exten = s,n,EndWhile

exten = s,n,GotoIf($[${ARG3} = ALLOW_ALL]?check_per:check_no)
exten = s,n(check_per),GotoIf($[${PERMI_MATCH} = false]?nopermission,1)
exten = s,n(check_no),GotoIf($[${PERMI_MATCH} = true]?macroexit,1)

;exten = s,n,GotoIf($[${ARG3} = ALLOW_ALL]?macroexit,1)
exten = s,n,GotoIf($[${ARG2} = none]?macroexit,1)
exten = s,n,AGI(match_callerid.py,${ARG3},${AAUSER})
exten = s,n,GotoIf($[${MATCH_CALLERID_RES} = 0]?nopermission,1)

exten = nopermission,1,Log(WARNING, "Denied Because no Permission for user ${AAUSER}, ${ARG2} is Required")
exten = nopermission,n,ExecIf($[ "${IVRCONTEXT}" != "" && "${ringboth_checkper}" != "yes" ]?Set(CDR(action_type)=FAILED${CDR(action_type)}))
exten = nopermission,n,ExecIf($["${CDR(action_type)}"="TRANSFER"]?Set(CDR(special_action_type)=NOPM_${CDR(action_type)}))
exten = nopermission,n,GotoIf($[ "${IVRCONTEXT}" != "" && "${ringboth_checkper}" != "yes" ]?${IVRCONTEXT},i,1)
exten = nopermission,n,GotoIf($["${GROUPTOEXTERNAL}" == "yes"]?macro-followme,s,vm)
exten = nopermission,n,ExecIf($["${FROM-EXTEN}" != "" && "${EN_BOTH}" == "yes"]?Set(BOTHDENIED=yes):Set(BOTHDENIED=no))
exten = nopermission,n,ExecIf($["${FROM-EXTEN}" != "" && "${EN_BOTH}" == "yes"]?MacroExit())
exten = nopermission,n,ExecIf($["${GROUPRINGOUT}" != ""]?Set(GROUPRINGOUT="no"))
exten = nopermission,n,ExecIf($[$["${GROUPRINGOUT}" != ""] & $["${GROUPTOEXTERNAL}" != "yes"]]?MacroExit())
exten = nopermission,n,Progress()
exten = nopermission,n,Set(PROMPT_TONE=${IF($["${UCMDB_EXISTS(PROMPT_TONE/NO_PERMISSION)}" = "1"]?${DB_RESULT}:no-permission)})
exten = nopermission,n,Playback(silence/1&${PROMPT_TONE},noanswer))
exten = nopermission,n,Macro(hangupcall)

exten = macroexit,1,MacroExit()
[sub-pincheck]
exten = s,1,Set(outrt_passwd=${ARG3})
exten = s,n,Set(PINCHECKACTIONTYPE=${CDR(action_type):0:15})
exten = s,n,GotoIf($[ "${PINCHECKACTIONTYPE}" == "VIDEOCONFERENCE" ]?exit)
exten = s,n,GotoIf($["${is_admin}" = "yes"]?exit)
exten = s,n,GotoIf($["${SIGNAL_AUTO_TEST}" = "yes"]?exit)
exten = s,n,GotoIf($["${MCM_PEER_TRUNKS}" = "yes"]?exit)
exten = s,n,Noop(cf_number=${CF_USER})
exten = s,n,Set(CF_NUMBER=${CF_USER})
exten = s,n,Set(BLINDEXT1=${CUT(BLINDTRANSFER,,1)})
exten = s,n,Set(BLINDEXT2=${CUT(BLINDEXT1,/,2)})
exten = s,n,Set(MATCHNUMBER=${AAUSER})
exten = s,n,ExecIf($["${CF_NUMBER}" != ""]?Set(MATCHNUMBER=${CF_NUMBER}))
exten = s,n,ExecIf($["${BLINDEXT2}" != ""]?Set(MATCHNUMBER=${BLINDEXT2}))
exten = s,n,Set(user_outrt_passwd=${UCMDB(AAUSER/${MATCHNUMBER}/user_outrt_passwd)})
exten = s,n,GotoIf($["${SPYEXTEN}" == ""]?:exit)
exten = s,n,ExecIf($["${user_outrt_passwd}" != ""]?Set(outrt_passwd=${user_outrt_passwd}))
exten = s,n,GotoIf($["${UCMDB(AAUSER/${MATCHNUMBER}/bypass_outrt_auth)}" == "bytime"]?:nobytime)
exten = s,n,Set(MATCHTIME=)
exten = s,n,Macro(holidaytime-system,${UCMDB(AAUSER/${MATCHNUMBER}/SKIPAUTHTIMETYPE)},${MATCHNUMBER})
exten = s,n,GotoIf($["${MATCHTIME}" == "1"]?exit)
exten = s,n(nobytime),GotoIF($[$[$["${FROM_CALLBACK}" == "yes"] && $["${FROM_IVR}" != "yes"] | $["${FROM_DISA}" == "yes"]]]?exit)
exten = s,n,GotoIf( $[$["${callfile}" != ""] && $["${UCMDB(SCHEDULE/${callfile}/SKIPAUTH)}" == "yes"]]?exit)
exten = s,n,Set(schedule_id=${DB(SCHEDULE/${MATCHNUMBER}/ScheduleID)})
exten = s,n,Set(schedule_step=${DB(SCHEDULE/${schedule_id}/STEP)})
exten = s,n,GotoIf($[$["${schedule_step}" != ""] && $["${UCMDB(SCHEDULE/${schedule_id}/SKIPAUTH)}" == "yes"] && $["${WEBCALL}" != ""]]?exit)
exten = s,n,ExecIf($[$["${schedule_step}" != ""] && $["${UCMDB(SCHEDULE/${schedule_id}/SKIPAUTH)}" == "no"] && $["${outrt_passwd}" != ""] ]?Macro(hangupcall))
exten = s,n,GotoIf($[  $["${outrt_passwd}" != ""] & $[$["${UCMDB(AAUSER/${MATCHNUMBER}/bypass_outrt_auth)}" != "yes"] | $[$["${WEBCALL}" == ""] & $["${CONF_USER_INVITE}" == "yes"]]]    | $["${IN_FOLLOWME}" == "yes"] ]?:exit)
exten = s,n,GotoIF($[$["${IN_FOLLOWME}" == "yes"] & $[$["${ARG3}" == ""] | $["${FOLLOWME_SKIP_AUTH}" == "yes"]]]?exit)
exten = s,n,ExecIf($["${CF_USER}" != "" | "${BLINDTRANSFER}" != ""]?Macro(hangupcall))
exten = s,n,GotoIf($["${VQ_CALLBACK_CALLER}" == "yes"]?exit)
exten = s,n,Set(TIMEOUT(response)=10)
exten = s,n,GotoIf($[ $["${outrt_passwd}" != ""] && $["${WEBCALL}" == ""] && $["${CONF_USER_INVITE}" == "yes"] ]?:auth)
exten = s,n,Set(CONFUSEREXT1=${CUT(CONF_MENU_CHAN,-,1)})
exten = s,n,Set(CONFUSEREXT2=${CUT(CONFUSEREXT1,/,2)})
exten = s,n,GotoIf($["${UCMDB(AAUSER/${CONFUSEREXT2}/bypass_outrt_auth)}" == "bytime"]?:notime)
exten = s,n,Set(MATCHTIME=)
exten = s,n,Macro(holidaytime-system,${UCMDB(AAUSER/${CONFUSEREXT2}/SKIPAUTHTIMETYPE)},${CONFUSEREXT2})
exten = s,n,GotoIf($["${MATCHTIME}" == "1"]?exit)
exten = s,n(notime),GotoIf($["${UCMDB(AAUSER/${CONFUSEREXT2}/bypass_outrt_auth)}" == "yes"]?exit)
exten = s,n,Set(CDR(special_action_type)=CONF_INV_FAIL)
exten = s,n,Hangup 
;exten = s,n,ExecIf($[ $["${outrt_passwd}" != ""] && $["${WEBCALL}" == ""] && $["${CONF_USER_INVITE}" == "yes"] ]?Hangup)
exten = s,n(auth),ExecIf($[$["${IVR_SUPPORT}" = "no"] | $["${IN_FOLLOWME}" == "yes"] | $["${callfile}" != ""]]?Macro(hangupcall))
exten = s,n,Authenticate(${outrt_passwd},)
exten = s,n,ResetCDR()
exten = s,n(exit),Set(MATCHTIME=)
exten = s,n,Return()

[sub-pinsetcheck]
exten = s,1,Log(NOTICE,"PINSETID = ${PINSETID}")
exten = s,n,Set(PINCHECKACTIONTYPE=${CDR(action_type):0:15})
exten = s,n,GotoIf($[ "${PINCHECKACTIONTYPE}" == "VIDEOCONFERENCE" ]?exit)
exten = s,n,GotoIf($["${MCM_PEER_TRUNKS}" = "yes"]?exit)
exten = s,n,GotoIf($["${VQ_CALLBACK_CALLER}" == "yes"]?exit)
exten = s,n,GotoIf($[$["${IN_FOLLOWME}" == "yes"] & $["${FOLLOWME_SKIP_AUTH}" == "yes"]]?exit)
exten = s,n,GotoIf($[$[$["${FROM_CALLBACK}" == "yes"] & $["${FROM_IVR}" != "yes"] | $["${FROM_DISA}" == "yes"]]]?exit)
exten = s,n,GotoIf($[$["${callfile}" != ""] && $["${UCMDB(SCHEDULE/${callfile}/SKIPAUTH)}" == "yes"]]?exit)
;exten = s,n,ExecIf($["${CF_USER}" != ""]?Macro(hangupcall))
exten = s,n,Noop(${CF_USER})
exten = s,n,Set(CF_NUMBER=${CF_USER})
exten = s,n,Set(BLINDEXT1=${CUT(BLINDTRANSFER,,1)})
exten = s,n,Set(BLINDEXT2=${CUT(BLINDEXT1,/,2)})
exten = s,n,Set(MATCHNUMBER=${AAUSER})
exten = s,n,ExecIf($["${CF_NUMBER}" != ""]?Set(MATCHNUMBER=${CF_NUMBER}))
exten = s,n,ExecIf($["${CF_NUMBER}" != ""]?Set(MATCHCFNUMBER=${CF_NUMBER}))
exten = s,n,ExecIf($["${BLINDEXT2}" != ""]?Set(MATCHNUMBER=${BLINDEXT2}))
exten = s,n,ExecIf($["${BLINDEXT2}" != ""]?Set(MATCHCFNUMBER=${BLINDEXT2}))
exten = s,n,GotoIf($["${MATCHNUMBER}" != "" && "${MATCHCFNUMBER}" != "" && "${UCMDB(AAUSER/${MATCHNUMBER}/bypass_outrt_auth)}" == "yes" && $[ $["${CONF_USER_INVITE}" != "yes"] || $[ $["${WEBCALL}" != ""] && $["${CONF_USER_INVITE}" == "yes" ]  ] ]   ]?exit)
exten = s,n,GotoIf($["${MATCHNUMBER}" != "" && "${MATCHCFNUMBER}" != "" && "${UCMDB(AAUSER/${MATCHNUMBER}/bypass_outrt_auth)}" == "bytime"]?cf_bytime)
exten = s,n,ExecIf($["${MATCHNUMBER}" != "" && "${MATCHCFNUMBER}" != "" && "${UCMDB(AAUSER/${MATCHNUMBER}/bypass_outrt_auth)}" == "no" && $["${CF_NUMBER}" != "" || "${BLINDEXT2}" != ""] ]?Macro(hangupcall))
exten = s,n,Goto(sub-pinsetcheck,s,normal)
exten = s,n(cf_bytime),Set(MATCHTIME=)
exten = s,n,ExecIf($["${CF_NUMBER}" != ""]?Macro(holidaytime-system,${UCMDB(AAUSER/${CF_USER}/SKIPAUTHTIMETYPE)},${MATCHNUMBER}):Macro(holidaytime-system,${UCMDB(AAUSER/${MATCHNUMBER}/SKIPAUTHTIMETYPE)},${MATCHNUMBER}))
exten = s,n,GotoIf($["${MATCHTIME}" == "1"]?exit)
exten = s,n,ExecIf($["${MATCHTIME}" == "1"]?Return():Macro(hangupcall))

exten = s,n(normal),Set(MATCHNUMBER=${AAUSER})
exten = s,n,GotoIf($["${UCMDB(AAUSER/${MATCHNUMBER}/bypass_outrt_auth)}" == "no"]?auth)
exten = s,n,GotoIf($["${UCMDB(AAUSER/${MATCHNUMBER}/bypass_outrt_auth)}" == "yes" && $[ $["${CONF_USER_INVITE}" != "yes"] || $[ $["${WEBCALL}" != ""] && $["${CONF_USER_INVITE}" == "yes" ]  ] ] ]?exit)
exten = s,n,GotoIf($["${UCMDB(AAUSER/${MATCHNUMBER}/bypass_outrt_auth)}" == "bytime"]?bytime)
exten = s,n(bytime),Set(MATCHTIME=)
exten = s,n,Macro(holidaytime-system,${UCMDB(AAUSER/${MATCHNUMBER}/SKIPAUTHTIMETYPE)},${MATCHNUMBER})
exten = s,n,GotoIf($["${MATCHTIME}" == "1"]?exit:auth)

exten = s,n(auth),Set(PINSET_AUTH_OPTIONS=d)
exten = s,n,Set(user_outrt_passwd=${UCMDB(AAUSER/${MATCHNUMBER}/user_outrt_passwd)})
exten = s,n,GotoIf($[ "${user_outrt_passwd}" == "" ]?pinset:passwd)
exten = s,n(pinset),Set(record_in_cdr=${UCMDB(PIN_SET/${PINSETID}/RECORD_IN_CDR)})
exten = s,n,ExecIf($["${record_in_cdr}" == "yes"]?Set(PINSET_AUTH_OPTIONS=${PINSET_AUTH_OPTIONS}a))
exten = s,n,ExecIf($[$["${IVR_SUPPORT}" = "no"] | $["${IN_FOLLOWME}" == "yes"] | $["${callfile}" != ""]]?Macro(hangupcall))
exten = s,n,GotoIf($[ $["${PINSETID}" != ""] & $["${WEBCALL}" == ""] & $["${CONF_USER_INVITE}" == "yes"] ]?:spyexten)
exten = s,n,Set(CONFUSEREXT1=${CUT(CONF_MENU_CHAN,-,1)})
exten = s,n,Set(CONFUSEREXT2=${CUT(CONFUSEREXT1,/,2)})
exten = s,n,GotoIf($["${UCMDB(AAUSER/${CONFUSEREXT2}/bypass_outrt_auth)}" == "bytime"]?:noconftime)
exten = s,n,Set(MATCHTIME=)
exten = s,n,Macro(holidaytime-system,${UCMDB(AAUSER/${CONFUSEREXT2}/SKIPAUTHTIMETYPE)},${CONFUSEREXT2})
exten = s,n,GotoIf($["${MATCHTIME}" == "1"]?exit)
exten = s,n(noconftime),GotoIf($["${UCMDB(AAUSER/${CONFUSEREXT2}/bypass_outrt_auth)}" == "yes"]?exit)
exten = s,n,Hangup 
;exten = s,n,ExecIf($[ $["${PINSETID}" != ""] & $["${WEBCALL}" == ""] & $["${CONF_USER_INVITE}" == "yes"] ]?Hangup)
exten = s,n(spyexten),GotoIf($[ "${SPYEXTEN}" != "" ]?exit)
exten = s,n,Authenticate(/PIN_SET/${PINSETID},${PINSET_AUTH_OPTIONS})
exten = s,n,Log(NOTICE,ACCOUNT CODE = ${CHANNEL(accountcode)})
exten = s,n,ResetCDR()
exten = s,n,Goto(sub-pinsetcheck,s,exit)
exten = s,n(passwd),GotoIf($[ $["${outrt_passwd}" != ""] && $["${WEBCALL}" == ""] && $["${CONF_USER_INVITE}" == "yes"] ]?:authconf)
exten = s,n,Set(CONFUSEREXT1=${CUT(CONF_MENU_CHAN,-,1)})
exten = s,n,Set(CONFUSEREXT2=${CUT(CONFUSEREXT1,/,2)})
exten = s,n,GotoIf($["${UCMDB(AAUSER/${CONFUSEREXT2}/bypass_outrt_auth)}" == "bytime"]?:notime)
exten = s,n,Set(MATCHTIME=)
exten = s,n,Macro(holidaytime-system,${UCMDB(AAUSER/${CONFUSEREXT2}/SKIPAUTHTIMETYPE)},${CONFUSEREXT2})
exten = s,n,GotoIf($["${MATCHTIME}" == "1"]?exit)
exten = s,n(notime),GotoIf($["${UCMDB(AAUSER/${CONFUSEREXT2}/bypass_outrt_auth)}" == "yes"]?exit)
exten = s,n,Hangup 
;exten = s,n(passwd),ExecIf($[ $["${user_outrt_passwd}" != ""] & $["${WEBCALL}" == ""] & $["${CONF_USER_INVITE}" == "yes"] ]?Hangup)
exten = s,n(authconf),GotoIf($[ "${SPYEXTEN}" != "" ]?exit)
exten = s,n,Authenticate(${user_outrt_passwd},)
exten = s,n,ResetCDR()
exten = s,n(exit),Set(MATCHTIME=)
exten = s,n,Return()

[macro-dialout-trunk]
exten = s,1,Set(DIAL_TRUNK=${ARG1})
exten = s,n,Set(DIAL_NUMBER=${ARG2})
exten = s,n,ExecIf($["${COUNTRY}"!="yes"]?Macro(check-country-code,${DIAL_NUMBER}))
exten = s,n,Set(CDR(outbound_trunk_index)=${DIAL_TRUNK})
exten = s,n,Set(__TRANSPORT_TYPE=trunk)
exten = s,n,GotoIf($["x${OUT_DISABLE_${DIAL_TRUNK}}" = "xon"]?disabletrunk,1)
exten = s,n,Set(DIAL_NUMBER=${ARG2})
exten = s,n,ExecIf($["x${DISA}" == "x"]?Set(DIAL_TRUNK_OPTIONS=${TRUNK_OPTIONS}${ARG4}):Set(DIAL_TRUNK_OPTIONS=${ARG4}))
exten = s,n,ExecIf($["${IS_SFU}" == "yes"]?Set(DIAL_TRUNK_OPTIONS=))
exten = s,n,Set(OUTBOUND_GROUP=OUT_${DIAL_TRUNK})
exten = s,n,GotoIf($["${OUT_MAXCHANS_${DIAL_TRUNK}}foo" = "foo"]?nomax)
exten = s,n,GotoIf($[ ${GROUP_COUNT(OUT_${DIAL_TRUNK})} >= ${OUT_MAXCHANS_${DIAL_TRUNK}} ]?chanfull)
exten = s,n(nomax),GotoIf($["${INTRACOMPANYROUTE}" = "yes"]?skipoutcid)
exten = s,n,Set(ori_callid=${CALLERID(all)})
exten = s,n,Set(ori_cid_num=${CALLERID(num)})
exten = s,n,Macro(outbound-callerid,${DIAL_TRUNK})
exten = s,n,Set(FROM_USER=${UCMDB(TRUNK/SIP_${DIAL_TRUNK}/FROM_USER)})
exten = s,n,ExecIf($["${FROM_USER}" == ""]?Set(__CID_NUM=${CALLERID(num)}):Set(__CID_NUM=${FROM_USER}))
;exten = s,n,Set(__CID_NUM=${CALLERID(num)})
exten = s,n,Set(__CID_NAME=${CALLERID(name)})
exten = s,n(skipoutcid),ExecIf($["${PREFIX_TRUNK_${DIAL_TRUNK}}" != ""]?AGI(fixlocalprefix))
exten = s,n,Set(OUTNUM=${OUT_PREFIX_${DIAL_TRUNK}}${DIAL_NUMBER})
exten = s,n,Set(custom=${CUT(OUT_${DIAL_TRUNK},:,1)})
exten = s,n,ExecIf($["${MOHCLASS}"!="default" & "${MOHCLASS}"!="" & "${FORCE_CONFIRM}"="" ]?Set(DIAL_TRUNK_OPTIONS=M(setmusic^${MOHCLASS})${DIAL_TRUNK_OPTIONS}))
exten = s,n(gocall),Macro(dialout-trunk-predial-hook,)
exten = s,n,GotoIf($["${PREDIAL_HOOK_RET}" = "BYPASS"]?bypass,1)
exten = s,n,GotoIf($["${custom}" = "AMP"]?customtrunk)
;exten = s,n,ExecIf($[$["${FROM_IVR}" != ""] & $["${PROTOCOL}" != "MFC/R2" & "${PROTOCOL}" != "PRI" & "${PROTOCOL}" != "EM" & "${PROTOCOL}" != "EM_W"] ]?Set(DIAL_TRUNK_OPTIONS=${DIAL_TRUNK_OPTIONS}m(rbt)));delete by zhywang 2015-1-10
exten = s,n,ExecIf($["${PROTOCOL}" = "EM" | "${PROTOCOL}" = "EM_W"]?Progress())
exten = s,n,ExecIf($["${ARG3}" != ""]?Set(DIAL_TRUNK_OPTIONS=${DIAL_TRUNK_OPTIONS}))
exten = s,n,ExecIf($[ $["${FROM_CALLBACK}" == "yes"]  && $["${AAUSER}" == "" || "${AAUSER}" == "s"]  ]?Set(AAUSER=CallBack))
exten = s,n,ExecIf($[ "${HAVE_RECORD}" = "1" | "${TRUNK_REC}" = "yes"]?Macro(record-check,${AAUSER},${DIAL_TRUNK},${AAUSER}-${TRUNKPUTNUMBER})
;exten = s,n,Macro(set-call-options,${DIAL_TRUNK_OPTIONS})
exten = s,n,Set(CALL_OPTIONS=${DIAL_TRUNK_OPTIONS})
exten = s,n,Set(TMP_CALL_OPTIONS=${CALL_OPTIONS})
exten = s,n,ExecIf($[$["${AUTO_RECORDING}" = "ON"] & $["${RECORD_PROMPT}" = "yes"]]?Set(CALL_OPTIONS=${CALL_OPTIONS}A(dialog-being-recorded)))
exten = s,n,ExecIf($["${CDR(action_type)}" = "CALLBACK"]?Set(CALL_OPTIONS=${TMP_CALL_OPTIONS}))
exten = s,n,ExecIf($["${MCB_CONF_HEADER}" != ""]?Set(__DIALOUT_CHANNEL_PARENT=${CHANNEL})
exten = s,n,ExecIf($["${MCB_CONF_HEADER}" != ""]?Set(CALL_OPTIONS=gG(mcb-handling,1)${CALL_OPTIONS}))
exten = s,n,ExecIf($["${MCB_CONF_HEADER}" != ""]?Set(__MCB_CONTACT=${ori_cid_num}):Set(__MCB_CONTACT=)
exten = s,n,ExecIf($["${CONF_ROOM}" != ""]?Set(SHARED(CONF_USER_BY_TRUNK,${CHANNEL:0:-1}1)=1))
exten = s,n,Macro(fax-gateway,${OUTNUM})
exten = s,n,Log(NOTICE,"The recording file name : ${MIXFILENAME}")
exten = s,n,Log(NOTICE,"Whether open auto recording or not :${MIXAUTORECORDING}")
exten = s,n,ExecIf($["${MIXAUTORECORDING}" == "ON"]?Set(CALL_OPTIONS=${CALL_OPTIONS}M(record-check,StartMonitor)))
exten = s,n,ExecIf($["${CUT(OUT_${DIAL_TRUNK},/,1)}" = "PJSIP"]?Set(TRUNK_PRE_NAME=${CUT(OUT_${DIAL_TRUNK},/,1)}/${OUTNUM}@${CUT(OUT_${DIAL_TRUNK},/,2)}):Set(TRUNK_PRE_NAME=${OUT_${DIAL_TRUNK}}/${OUTNUM}))
exten = s,n,Set(CALL_OPTIONS=${CALL_OPTIONS}b(callee-handler^s^1))
exten = s,n,ExecIf($[$["${CUT(CHANNEL(name),@,2):0:18}" == "from-internal-xfer"] && $["${TRUNK_${DIAL_TRUNK}_TYPE}" == "register"]]?Set(_XFER_CALLERID=${CALLERID(all)}))
exten = s,n,ExecIf($["${FOLLOWME_RING_TIMROUT}" != ""]?Set(CALL_OUTRT=${FOLLOWME_RING_TIMROUT}):Set(CALL_RT=300))
exten = s,n,ExecIf($["${CUT(CHANNEL,/,1)}" == "Local" & "${CUT(CHANNEL,\;,2)}" == "2" & "${FROM_CALLBACK}" != "yes" & "${fax_sending}" != "yes" & "${CONF_INVITE}" != "yes" & "${CDR(action_type)}" != "EMERGENCYNOTIFY" & "${CDR(action_type)}" != "TRANSFER" & "${CDR(special_action_type)}" != "COUNTRY_CODE/VQ_CALLBACK"]?NoCDR())
exten = s,n,Set(RETRY=0)
exten = s,n,GotoIf($["${TEMP_CF}" == "${CALL_FORWARD}"]?dial)
exten = s,n,Set(_TEMP_CF=${CALL_FORWARD})
exten = s,n,ExecIf($["${CF_ALL}" != ""]?Set(_CF_ALL=${CALL_FORWARD}@${CF_ALL}))
exten = s,n,ExecIf($["${CF_ALL}" == ""]?Set(_CF_ALL=${CALL_FORWARD}))
exten = s,n(dial),Set(__DYNAMIC_FEATURES=seamless_transfer)
exten = s,n,Set(__TRANSPARENTSDP=no)
exten = s,n(retry_dial),Dial(${TRUNK_PRE_NAME},${CALL_OUTRT},${CALL_OPTIONS})
exten = s,n,GotoIf($[ $["${callfile}" != ""] && $["${DIALSTATUS}" == "NOANSWER"] && $[${RETRY} < 2] ]?retry,1)
exten = s,n,ExecIf($[$["${DIALSTATUS}" == "BUSY" | "${DIALSTATUS}" == "NOANSWER" | "${DIALSTATUS}" == "CANCEL"] & "${WEBRTC_DEFAULT_DEST}" == "yes"]?Return())
exten = s,n,ExecIf($[${FAILOVER_NUM}<1 || $["${CHANNEL(hangupsipcode)}"="486" & "${ENABLE_486_FAILOVER}"!="yes"]]?NoCDR())
exten = s,n,ExecIf($["${CHANNEL(hangupsipcode)}" != "0"]?MacroExit())
exten = s,n,Goto(s-${DIALSTATUS},1))
exten = s,n(customtrunk),Set(pre_num=${CUT(OUT_${DIAL_TRUNK},$,1)})
exten = s,n,Set(the_num=${CUT(OUT_${DIAL_TRUNK},$,2)})
exten = s,n,Set(post_num=${CUT(OUT_${DIAL_TRUNK},$,3)})
exten = s,n,GotoIf($["${the_num}" = "OUTNUM"]?outnum:skipoutnum)
exten = s,n(outnum),Set(the_num=${OUTNUM})
exten = s,n,Macro(fax-gateway,${OUTNUM})
exten = s,n(skipoutnum),Set(CALL_OPTIONS=${CALL_OPTIONS}b(callee-handler^s^1))
exten = s,n(skipoutnum),Dial(${pre_num:4}${the_num}${post_num},${CALL_OUTRT},${DIAL_TRUNK_OPTIONS})
exten = s,n,ExecIf($[$["${DIALSTATUS}" == "BUSY" | "${DIALSTATUS}" == "NOANSWER" | "${DIALSTATUS}" == "CANCEL"] & "${WEBRTC_DEFAULT_DEST}" == "yes"]?Return())
exten = s,n,ExecIf($[${FAILOVER_NUM}<1]?NoCDR())
exten = s,n,ExecIf($["${CHANNEL(hangupsipcode)}" != "0"]?MacroExit())
exten = s,n,Goto(s-${DIALSTATUS},1)
exten = s,n(chanfull),Log(WARNING, "max channels used up")
exten = s-BUSY,1,ExecIf($["${CHANNEL(hangupsipcode)}" == "403"]?MacroExit())
exten = s-BUSY,n,Set(CALLERID(all)=${ori_callid})
exten = s-BUSY,n,Log(WARNING, "Dial failed due to trunk reporting BUSY - giving up")
;exten = s-BUSY,n,Playtones(busy)
;exten = s-BUSY,n,Busy(20)
exten = s-NOANSWER,1,Log(WARNING, "Dial failed due to trunk reporting NOANSWER - giving up")
exten = s-NOANSWER,n,Playtones(congestion)
exten = s-NOANSWER,n,Congestion(20)
exten = s-CANCEL,1,Log(WARNING, "Dial failed due to trunk reporting CANCEL - giving up")
exten = s-CANCEL,n,Playtones(congestion)
exten = s-CANCEL,n,Congestion(20)
exten = s-CHANUNAVAIL,1,GotoIf($["${CHANNEL(hangupsipcode)}" == "480"]?h,1)
exten = s-CHANUNAVAIL,n,Set(CALLERID(all)=${ori_callid})
exten = s-CHANUNAVAIL,n,Log(WARNING, "TRUNK Dial failed due to ${DIALSTATUS} (hangupcause: ${HANGUPCAUSE}) - failing through to other trunks")
exten = _s-.,1,Set(CALLERID(all)=${ori_callid})
exten = _s-.,2,Log(WARNING, "TRUNK Dial failed due to ${DIALSTATUS} - failing through to other trunks")
exten = disabletrunk,1,Log(WARNING, "TRUNK: ${OUT_${DIAL_TRUNK}} DISABLED - falling through to next trunk")
exten = bypass,1,Log(WARNING, "TRUNK: ${OUT_${DIAL_TRUNK}} BYPASSING because dialout-trunk-predial-hook")
exten = mcb-handling,1,Goto(one)
exten = mcb-handling,n,Goto(two)
exten = mcb-handling,n(one),Log(NOTICE, "MCB Dial-out: Local leg waiting for bridge")
exten = mcb-handling,n,Wait(5)
exten = mcb-handling,n,Goto(h,1)
exten = mcb-handling,n(two),Set(MCB_REMOTE_CONFID=${MCB_RESPONSE()})
exten = mcb-handling,n,Set(SHARED(MCB_REMOTE_CONFID,${MCB_CREATE_CHAN})=${MCB_REMOTE_CONFID})
exten = mcb-handling,n,Set(SHARED(MCB_REMOTE_CHANNEL,${MCB_CREATE_CHAN})=${CHANNEL})
exten = mcb-handling,n,Bridge(${DIALOUT_CHANNEL_PARENT}, "E")
exten = retry,1,Set(RETRY=${INC(RETRY)})
exten = retry,n,ExecIf($["${RETRY}" == "1"]?Set(postfix=(second call)))
exten = retry,n,ExecIf($["${RETRY}" == "2"]?Set(postfix=(final call)))
exten = retry,n,Set(CALLERID(name)=Scheduled Conference${postfix})
exten = retry,n,Set(__CID_NAME=${CALLERID(name)})
exten = retry,n,Set(CDR(outbound_trunk_index)=${DIAL_TRUNK})
exten = retry,n,ExecIf($["${CDR(app_callee)}"=""]?Set(CDR(app_callee)=${CUT(CUT(CHANNEL(name),@,1),/,2)}))
exten = retry,n,Wait(10)
exten = retry,n,Goto(s,dial)
exten = h,1,Macro(hangupcall,)

[macro-dialout-general]
exten = s,1,Macro(user-callerid,SKIPTTL,)
exten = s,n,ExecIf($["${ARG11}"!="yes"]?Macro(check-country-code,${ARG10}))
exten = s,n,ExecIf($[$["${IN_FOLLOWME}" == "yes" | "${CF_USER}" != "" | "${is_admin}" == "yes"] & "${ARG9}" == "yes"]?Set(FOLLOWME_MATCH_CALLER_ID=Yes):Set(FOLLOWME_MATCH_CALLER_ID=No))
exten = s,n,ExecIf($["${FOLLOWME_MATCH_CALLER_ID}" == "Yes"]?Set(HAS_MATCH_CALLERID=))
exten = s,n,ExecIf($["${FOLLOWME_MATCH_CALLER_ID}" == "Yes"]?Goto(callback-outbound-allroutes,${ARG7},1))
exten = s,n,Set(FOLLOMEMATCHCALLERID=${FOLLOWME_MATCH_CALLER_ID})
exten = s,n,ExecIf($["${LOCAL_OUTSIDE}" == "Local"]?Set(FOLLOW_ME=yes):Set(FOLLOW_ME=no))
exten = s,n,Set(FOLLOWME=${FOLLOW_ME})
exten = s,n,Set(_NODEST=)
exten = s,n,GotoIf($["${is_admin}" = "yes"]?dialout)
exten = s,n,MacroIf($["${PINSETID}" == "" & "${VQ_CALLBACK_CALLER}" != "yes"]?check-permission,${AAUSER},${ARG4},${ARG5})
exten = s,n,Set(PASSWORD=${ARG2})
exten = s,n,Set(ARG3=${PASSWORD})
exten = s,n,ExecIf($["${PASSWORD}" != "" ]?Set(__TRANSPARENTSDP=no)}))
exten = s,n,ExecIf($["${fax_sending}" == "yes" & "${is_admin}" != "yes" & "${PINSETID}" != ""]?Macro(hangupcall))
exten = s,n,GosubIf($["${PINSETID}" == ""]?sub-pincheck,s,1:sub-pinsetcheck,s,1)
exten = s,n,Set(_PROTOCOL=${ARG8})
;exten = s,n(dialout),Macro(dialout-trunk,${AGR1},${EXTEN:},${PASSWORD},)
exten = s,n,Set(TRUNKPUTNUMBER=${ARG7})
exten = s,n,Set(TOUCH_MIXMONITOR=${AAUSER}-${ARG7})
exten = s,n(dialout),Macro(outbound-${ARG6},${ARG7})
exten = s,n,Macro(outisbusy,)

[macro-user-callerid]
exten = s,1,ExecIf($["${fax_sending}" == "yes" & "${is_admin}" != "yes"]?Set(_AAUSER=${CALLERID}):Set(_AAUSER=${IF($["foo${AAUSER}" = "foo" | "${BLINDTRANSFER}" != "" | "${CONF_INVITE}" = "yes"]?${IF($["foo${ORG_CALLER_ID_NUM}" = "foo"]?${CALLERID(number)}:${ORG_CALLER_ID_NUM})}:${AAUSER})}))
exten = s,n,ExecIf($[$["${CID_FIRST}"!=""]&$["${CDR(action_type)}"="TRANSFER"]]?Set(CDR(app_caller)=${CID_FIRST}))
exten = s,n,ExecIf($["${CHANNEL(name):0:5}"!="Local"]?Set(__CID_FIRST="${CALLERID(name)}"<${CALLERID(number)}>))
exten = s,n,GotoIf($["${CDR(special_action_type)}"!="schedule_paging"]?noschedule)
exten = s,n,Set(CALLERID=${PAGING_EXTENSION})
exten = s,n,Set(_AAUSER=${PAGING_EXTENSION})
exten = s,n,Set(_FIRST_CALLERID="Schedule Paging/Intercom" <${PAGING_EXTENSION}>)
exten = s,n(noschedule),ExecIf($["${FIRST_CALLERID}" == ""]?Set(_FIRST_CALLERID=${CALLERID(all)}))
exten = s,n,ExecIf($["${REC_AAUSER}" == ""]?Set(_REC_AAUSER=${AAUSER}))
exten = s,n,ExecIf($["${BLINDTRANSFER}" != ""]?Set(CDR(app_caller)=${AAUSER}))
exten = s,n,ExecIF($["${ANONYMOUS}" != "anonymous"]?Set(__ANONYMOUS=${CHANNEL(name):6:9}))
exten = s,n,Set(TMP_CF_NUM=${CF_USER})
exten = s,n,Set(TMP_CF_NAME=${UCMDB(AAUSER/${CF_USER}/CIDNAME)})
exten = s,n,ExecIf($["${CF_REASON}" != ""]?Set(_CALL_FORWARD=${TMP_CF_NUM},${TMP_CF_NAME},${CF_REASON}))
exten = s,n,ExecIf($["${BLINDTRANSFER}" != ""]?Set(FROM-EXTEN=))
exten = s,n,ExecIf($["${JITTERBUFFER_ENABLE}" = "yes" && "${CONF_ROOM}" = ""]?Set(JITTERBUFFER(${JITTERBUFFER_TYPE})=${JITTERBUFFER_PARAM}))
exten = s,n,ExecIf($["${JITTERBUFFER_ENABLE}" = "yes" && "${CONF_ROOM}" != "" && "${CHANNEL(channeltype)}" != "Local"]?Set(JITTERBUFFER(neteq_${JITTERBUFFER_TYPE})=${JITTERBUFFER_PARAM}))
exten = s,n,ExecIf($["${JITTERBUFFER_ENABLE}" = "yes" && "${CONF_ROOM}" != "" && "${CHANNEL(channeltype)}" == "Local"]?Set(JITTERBUFFER(${JITTERBUFFER_TYPE})=${JITTERBUFFER_PARAM}))
exten = s,n,ExecIf($["${JITTERBUFFER_ENABLE}" = "no" && "${CONF_ROOM}" != "" && "${CHANNEL(channeltype)}" != "Local"]?Set(JITTERBUFFER(neteq)=${JITTERBUFFER_PARAM}))
exten = s,n,Set(TMPUSER=${CUT(CHANNEL(name),@,1)})
exten = s,n,Set(TMPUSER=${CUT(TMPUSER,/,2)})
exten = s,n,ExecIf($[ "${FROM_TRUNK}" == "yes" ]?Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = s,n,ExecIf($[$["${UCMDB(AAUSER/${AAUSER}/language)}" != ""]]?Set(CHANNEL(language)=${UCMDB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = s,n,ExecIf($["${IVR_LANGUAGE}" != ""]?Set(CHANNEL(language)=${IVR_LANGUAGE}))
exten = s,n,ExecIf($[$["${CHANNEL(channeltype)}" == "Local"] & $["${UCMDB(AAUSER/${TMPUSER}/language)}" != ""] & $["${CONF_ROOM}" == ""]]?Set(CHANNEL(language)=${UCMDB(AAUSER/${TMPUSER}/language)}))
exten = s,n,GotoIf($["${CHANNEL:0:5}" = "Local"]?report)
exten = s,n,ExecIf($["${REALCALLERIDNUM:1:2}" = ""]?Set(REALCALLERIDNUM=${CALLERID(number)}))
exten = s,n,Set(AAUSERCIDNAME=${UCMDB(AAUSER/${AAUSER}/CIDNAME)})
exten = s,n,ExecIf($["${CDR(special_action_type)}"="schedule_paging"]?Set(AAUSERCIDNAME=Schedule Paging/Intercom))
exten = s,n,ExecIf($["${FROM_TRUNK}" = "yes"]?Set(AAUSERCIDNAME=${CALLERID(name)}))
exten = s,n,ExecIf($["${UCMDB(AAUSER/${AAUSER}/LIMITIME)}" != ""]?Set(LIMITIME_MAX=${UCMDB(AAUSER/${AAUSER}/LIMITIME)}):Set(LIMITIME_MAX=${UCMDB(GENERNAL/LIMIT/TIMEMAX)}))
exten = s,n,Set(WARNING_TIME=${UCMDB(GENERNAL/LIMIT/WARNING)})
exten = s,n,Set(REPEAT_TIME=${UCMDB(GENERNAL/LIMIT/REPEAT)})
exten = s,n,Set(LIMITTIME_EXTENSION=L(${UCMDB(AAUSER/${AAUSER}/LIMITIME)}:${WARNING_TIME}:${REPEAT_TIME}))
exten = s,n,Set(LIMITTIME_GENERNAL=L(${UCMDB(GENERNAL/LIMIT/TIMEMAX)}:${WARNING_TIME}:${REPEAT_TIME}))
exten = s,n,ExecIf($["${UCMDB(AAUSER/${AAUSER}/LIMITIME)}" == "0" | "${UCMDB(AAUSER/${AAUSER}/LIMITIME)}" == ""]?Set(LIMITTIME_EXTENSION=))
exten = s,n,ExecIf($["${UCMDB(GENERNAL/LIMIT/TIMEMAX)}" == "0" | "${UCMDB(GENERNAL/LIMIT/TIMEMAX)}" == ""]?Set(LIMITTIME_GENERNAL=))
exten = s,n,ExecIf($[${LIMITIME_MAX} < ${UCMDB(GENERNAL/LIMIT/WARNING)}]?Set(WARNING_TIME=))
exten = s,n,ExecIf($[${LIMITIME_MAX} < ${UCMDB(GENERNAL/LIMIT/WARNING)}]?Set(REPEAT_TIME=))
exten = s,n,ExecIf($["${FROM_TRUNK}" != "yes"]?Set(EXTENSION_LIMIT=L(${LIMITIME_MAX}:${WARNING_TIME}:${REPEAT_TIME})))
exten = s,n,ExecIf($["${LIMITIME_MAX}" == "" | "${LIMITIME_MAX}" == "0"]?Set(EXTENSION_LIMIT=))
exten = s,n,ExecIf($["${UCMDB(AAUSER/${AAUSER}/LIMITIME)}" == "0"]?Set(EXTENSION_LIMIT=))

exten = s,n,GotoIf($["x${AAUSERCIDNAME:1:2}" = "x"]?report)
exten = s,n,Set(AAUSERCID=${IF($["${UCMDB_EXISTS(AAUSER/${AAUSER}/CIDNUM)}" = "1"]?${DB_RESULT}:${AAUSER})})
exten = s,n,Set(CALLERID(all)="${AAUSERCIDNAME}" <${AAUSERCID}>)
exten = s,n,Set(CALLERID(num)=${AAUSERCID})
;exten = s,n,ExecIf($["${UCMDB(AAUSER/${AAUSER}/language)}" != ""]?Set(CHANNEL(language)=${UCMDB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
;exten = s,n,ExecIf($["${IVR_LANGUAGE}" != ""]?Set(CHANNEL(language)=${IVR_LANGUAGE}))
exten = s,n(report), ExecIf($["${FROM_TRUNK}" == ""]?Set(OUTBOUNDCID=${UCMDB(AAUSER/${AAUSER}/OUTBOUNDCID)}))
exten = s,n,ExecIf($["${CDR(special_action_type)}"="schedule_paging"]?Set(OUTBOUNDCID="Schedule Paging/Intercom" <${PAGING_EXTENSION}>))
exten = s,n,ExecIf($["${CUT(FIRST_CALLERID,<,1):1:-2)}"="Call Listen" & ${SPYEXTEN}!=""]?Set(OUTBOUNDCID=${FIRST_CALLERID}))
exten = s,n,ExecIf($["${OUTBOUNDCID}" != ""]?Set(CALLERID(all)=${OUTBOUNDCID}))
exten = s,n,GotoIf($[ "${ARG1}" = "SKIPTTL" ]?continue)
exten = s,n,Set(__TTL=${IF($["foo${TTL}" = "foo"]?64:$[ ${TTL} - 1 ])})
exten = s,n,GotoIf($[ ${TTL} > 0 ]?continue)
exten = s,n,Wait(2)
exten = s,n,Answer
exten = s,n,Wait(2)
exten = s,n,Playback(im-sorry&an-error-has-occured&with&call-forwarding)
exten = s,n,Macro(hangupcall,)
exten = s,n,Congestion(20)
exten = s,n(continue),Macro(proc-setcid,set,)
exten = s,n,ExecIf($["${REPLACE_CIDNAME}" != ""]?Set(CALLERID(name)=${REPLACE_CIDNAME}))
exten = s,n,ExecIf($["${CALLERID(name)}" == "" && "${CALLERID(number)}" == "" && "${PAGE_CALLERID}" != ""]?Set(CALLERID(all)=${PAGE_CALLERID}))
exten = s,n,ExecIf($["${CALLERID(name)}" == "" && "${CALLERID(number)}" == ""]?Set(CALLERID(all)="Anonymous" <anonymous>))
exten = s,n,ExecIf($["${CALLERID(name)}" == "" && "${ORIG_CALLER_NAME}" != ""]?Set(CALLERID(name)=${ORIG_CALLER_NAME}))
exten = s,n,GotoIf($["${CALLERID(name)}" != "" && "${CALLERID(number)}" == ""]?:notice)
exten = s,n,Set(CALLERID(number)=anonymous)
exten = s,n,ExecIf($["${REC_AAUSER}" == ""]?Set(_REC_AAUSER=anonymous))
exten = s,n(notice),Log(NOTICE, "Using CallerID ${CALLERID(all)}")
exten = s,n,ExecIf($["${CHANNEL(session)}" = ""]?Set(CHANNEL(session)=${CALLERID(number)}))
exten = h,1,Macro(hangupcall,)

[macro-outbound-callerid]
exten = s,1,GotoIf($["${OUTKEEPORGCID_${ARG1}}" = "yes" & "${FROM_TRUNK}" = "yes" & "${CALLERID(all)}" != ""]?outkeeporigcid,1)
exten = s,n,Set(EMERGENCY_TRUNK_TYPE=${TRUNK_${ARG1}_TYPE})
exten = s,n,GotoIf($["${EMERGENCY_TRUNK_TYPE}"!="register" && "${EMERGENCY_TRUNK_TYPE}"!="peer" && "${PROTOCOL}" != "PRI"]?emg)
exten = s,n,ExecIf($["${CALLERID(number)}"!=""]?Set(REG_CALLERNUM=${CALLERID(number)}))
exten = s,n,ExecIf($["${CALLERID(name)}"!="" || "${CALLERID(number)}"!=""]?Set(REG_CALELRNAME=${CALLERID(name)}))
exten = s,n,ExecIf($["${CDR(app_callee)}"!=""]?Set(REG_CALLEENUM=${CDR(app_callee)}))
exten = s,n(emg),ExecIf($[ "${FAILOVER}" == "yes" ]?Set(CALLERID(all)=${FIRST_CALLERID}))
exten = s,n,ExecIf($["${CALLINGPRES_SV}" != ""]?Set(CALLERPRES()=${CALLINGPRES_SV}))
exten = s,n,ExecIf($["${FROM_TRUNK}" = "yes"]?Set(_ORIG_CID=${CALLERID(number)}))
exten = s,n,ExecIf($["${REALCALLERIDNUM:1:2}" = ""]?Set(REALCALLERIDNUM=${CALLERID(number)}))
exten = s,n,ExecIf($["${USEROUTCID}" != ""]?Set(USEROUTCID=))
exten = s,n,ExecIf($["${JITTERBUFFER_ENABLE}" = "yes"]?Set(JITTERBUFFER(${JITTERBUFFER_TYPE})=${JITTERBUFFER_PARAM}))
exten = s,n,ExecIF($["${ANONYMOUS}" != "anonymous"]?Set(__ANONYMOUS=${CHANNEL(name):6:9}))
exten = s,n,ExecIF($["${GROUP_NUM_OF_THE_TRUNK}" = ""]?Set(_DOD=${UCMDB(TRUNK_${ARG1}/DOD/${AAUSER})}):Set(_DOD=${UCMDB(TRUNK_${GROUP_NUM_OF_THE_TRUNK}/DOD/${AAUSER})}))
exten = s,n,ExecIf($[ "${LDAP_PRE}" != "" ]?Set(_DOD=${UCMDB(TRUNK_${ARG1}/DOD/${LDAP_PRE:3:}${AAUSER})}))
exten = s,n,ExecIf($[ "${LDAP_PRE}" != "" && "${GROUP_NUM_OF_THE_TRUNK}" != "" ]?Set(_DOD=${UCMDB(TRUNK_${GROUP_NUM_OF_THE_TRUNK}/DOD/${LDAP_PRE:3:}${AAUSER})}))
exten = s,n,ExecIF($["${GROUP_NUM_OF_THE_TRUNK}" = ""]?Set(TMP_CF_NUM=${UCMDB(TRUNK_${ARG1}/DOD/${CF_USER})}):Set(TMP_CF_NUM=${UCMDB(TRUNK_${GROUP_NUM_OF_THE_TRUNK}/DOD/${CF_USER})}))
exten = s,n,Set(TMP_CF_DOD=${TMP_CF_NUM})
exten = s,n,Set(TMP_CF_NAME=${UCMDB(AAUSER/${CF_USER}/CIDNAME)})
exten = s,n(start),GotoIf($[ $["${REALCALLERIDNUM}" = ""] | $["${KEEPCID}" != "TRUE"] | $["${OUTKEEPCID_${ARG1}}" = "yes"] ]?normcid)
exten = s,n,Set(USEROUTCID=${REALCALLERIDNUM})
exten = s,n(normcid),GotoIf($["${OUTKEEPCID_${ARG1}}" = "yes"]?bypass)
exten = s,n,Set(USEROUTCID=${UCMDB(AAUSER/${AAUSER}/OUTBOUNDCID)})
exten = s,n,ExecIf($["${DOD}" != ""]?Set(USEROUTCID=${DOD}))
exten = s,n,ExecIf($["${TMP_CF_NUM}" = ""]?Set(TMP_CF_NUM=${UCMDB(AAUSER/${CF_USER}/OUTBOUNDCID)}))
exten = s,n(bypass),Set(TRUNKOUTCID=${OUT_CID_${ARG1}})
exten = s,n(globalcid),Set(REG_CALLERNUM=${CALLERID(number)})
exten = s,n,Set(REG_CALELRNAME=${CALLERID(name)})
exten = s,n,Set(REG_CALLEENUM=${CDR(app_callee)})
exten = s,n,ExecIf($["${REPLACE_CIDNAME}"!="" & "${REG_CALLERNUM}"!="" & "${REG_CALELRNAME}"!=""]?Set(USEROUTCID=${REG_CALELRNAME}<${REG_CALLERNUM}>))
exten = s,n,EXecIf($["${GLOBAL_OUTBOUNDCID:1:2}" != ""]?Set(CALLERID(number)=${GLOBAL_OUTBOUNDCID}))
exten = s,n,ExecIf($["${GLOBAL_OUTBOUNDCIDNAME:1:2}" != "" && "${DOD}" == ""]?Set(CALLERID(name)=${GLOBAL_OUTBOUNDCIDNAME}))
exten = s,n,ExecIf($["${UCMDB(AAUSER/${AAUSER}/CIDNAME)}" != "" && "${DOD}" == "" && "${REPLACE_CIDNAME}" == ""]?Set(CALLERID(name)=${UCMDB(AAUSER/${AAUSER}/CIDNAME)}))
exten = s,n,ExecIf($["${EMERGENCY_TRUNK_TYPE}"!="" & "${SPYEXTEN}"!="" & ${CUT(FIRST_CALLERID,<,1):1:-2)}="Call Listen" & "${USEROUTCID}!=""]?Set(REG_CALLERNUM=${CUT(USEROUTCID,<,2):0:-1}))
exten = s,n,ExecIf($["${EMERGENCY_TRUNK_TYPE}"!="" & "${SPYEXTEN}"!="" & ${CUT(FIRST_CALLERID,<,1):1:-2)}="Call Listen"]?Set(CALLERID(name)=Call Listen))
exten = s,n(trunkcid),ExecIf($[$["${TRUNKOUTCID:1:2}" != ""] && $["${PROTOCOL:0:2}" != "EM"]]?Set(CALLERID(all)=${TRUNKOUTCID}))
exten = s,n,Set(TMP_TRUNKCIDNAM=${CUT(TRUNKOUTCID,<,1)})
exten = s,n,ExecIf($[$["${TMP_TRUNKCIDNAM}" == "" && "${TRUNKOUTCID}" != ""]]?Set(CALLERID(all)=${CALLERID(name)} ${TRUNKOUTCID}))
exten = s,n,ExecIf($["${TRUNKOUTCID:1:2}" != ""]?Set(TMP_CF_NUM=${TRUNKOUTCID}))
exten = s,n,GotoIf($["${CUT(TMP_CF_NUM,<,2)}" = ""]?cfnum)
exten = s,n,Set(TMP_CF_NAME=${CUT(TMP_CF_NUM,<,1)})
exten = s,n,Set(TMP_CF_NUM=${CUT(TMP_CF_NUM,<,2)})
exten = s,n,Set(TMP_CF_NUM=${TMP_CF_NUM:0:-1})
exten = s,n(cfnum),ExecIf($["${TMP_CF_NUM}" = ""]?Set(TMP_CF_NUM=${GLOBAL_OUTBOUNDCID}))
exten = s,n,ExecIf($["${TMP_CF_NUM}" = "${GLOBAL_OUTBOUNDCID}"]?Set(TMP_CF_NAME=${GLOBAL_OUTBOUNDCIDNAME}))
exten = s,n,ExecIf($["${TMP_CF_NUM}" = ""]?Set(TMP_CF_NUM=${EXTTOCALL}))
exten = s,n,ExecIf($["${CF_REASON}" != ""]?Set(_CALL_FORWARD=${TMP_CF_NUM},${TMP_CF_NAME},${CF_REASON}))
;exten = s,n(usercid),ExecIf($["${USEROUTCID:1:2}" != ""]?Set(CALLERID(all)=${USEROUTCID}))
exten = s,n(usercid),GotoIf($["${USEROUTCID:1:2}" != ""]?usercid_sub:hidecid)
exten = s,n(usercid_sub),ExecIf($[${REGEX("<.*>" "${USEROUTCID}")} = 0]?Set(CALLERID(number)=${USEROUTCID}):Set(CALLERID(all)=${USEROUTCID}))
exten = s,n(hidecid),ExecIf($["${CALLERID(name)}"="hidden"]?Set(CALLERPRES()=prohib_passed_screen))
exten = s,n,ExecIF($["${UCMDB(AAUSER/${CF_USER}/USE_CALLEE_DOD_ON_FWD_RB)}" == "yes" & "${TMP_CF_DOD}" != ""]?Set(CALLERID(all)=<${TMP_CF_DOD}>))
exten = s,n,ExecIf($[${REGEX("<.*>" "${TMP_CF_DOD}")} != 0 & "${UCMDB(AAUSER/${CF_USER}/USE_CALLEE_DOD_ON_FWD_RB)}" == "yes" & "${TMP_CF_DOD}" != ""]?Set(CALLERID(all)=${TMP_CF_DOD}))
exten = s,n,ExecIF($["${GROUP_NUM_OF_THE_TRUNK}" = ""]?Set(TMP_FM_DOD=${UCMDB(TRUNK_${ARG1}/DOD/${FMEXT})}):Set(TMP_FM_DOD=${UCMDB(TRUNK_${GROUP_NUM_OF_THE_TRUNK}/DOD/${FMEXT})}))
exten = s,n,ExecIF($[${REGEX("<.*>" ${TMP_FM_DOD})} != 0 & "${UCMDB(AAUSER/${FMEXT}/USE_CALLEE_DOD_ON_FM)}" == "yes" & "${TMP_FM_DOD}" != ""]?Set(CALLERID(all)=${TMP_FM_DOD}))
exten = s,n,ExecIF($[${REGEX("<.*>" ${TMP_FM_DOD})} = 0 & "${UCMDB(AAUSER/${FMEXT}/USE_CALLEE_DOD_ON_FM)}" == "yes" & "${TMP_FM_DOD}" != ""]?Set(CALLERID(all)=<${TMP_FM_DOD}>))
exten = outkeeporigcid,1,Set(TMP_CF_DOD=${UCMDB(TRUNK_${ARG1}/DOD/${CF_USER})})
exten = outkeeporigcid,n,Set(TMP_FM_DOD=${UCMDB(TRUNK_${ARG1}/DOD/${FMEXT})})
exten = outkeeporigcid,n,Set(_ORIG_CID=${CALLERID(number)})
exten = outkeeporigcid,n,Set(_DOD=${UCMDB(TRUNK_${ARG1}/DOD/${AAUSER})})
exten = outkeeporigcid,n,ExecIF($["${UCMDB(AAUSER/${CF_USER}/USE_CALLEE_DOD_ON_FWD_RB)}" == "yes" & "${TMP_CF_DOD}" != ""]?Set(CALLERID(all)=<${TMP_CF_DOD}>))
exten = outkeeporigcid,n,ExecIF($[${REGEX("<.*>" "${TMP_CF_DOD}")} != 0 & "${UCMDB(AAUSER/${CF_USER}/USE_CALLEE_DOD_ON_FWD_RB)}" == "yes" & "${TMP_CF_DOD}" != ""]?Set(CALLERID(all)=${TMP_CF_DOD}))
exten = outkeeporigcid,n,ExecIF($[${REGEX("<.*>" ${TMP_FM_DOD})} != 0 & "${UCMDB(AAUSER/${FMEXT}/USE_CALLEE_DOD_ON_FM)}" == "yes" & "${TMP_FM_DOD}" != ""]?Set(CALLERID(all)=${TMP_FM_DOD}))
exten = outkeeporigcid,n,ExecIF($[${REGEX("<.*>" ${TMP_FM_DOD})} = 0 & "${UCMDB(AAUSER/${FMEXT}/USE_CALLEE_DOD_ON_FM)}" == "yes" & "${TMP_FM_DOD}" != ""]?Set(CALLERID(all)=<${TMP_FM_DOD}>))

[macro-vm]
exten = s,1,Macro(get-vmcontext,${ARG1})
exten = s,n,Macro(proc-setcid,set,)
exten = s,n,ExecIf($[ "${CONF_INVITE}" = "yes" || ("${CHANNEL(channeltype)}" == "PJSIP" && ${LEN(${PJSIP_HEADER(read,X-Grandstream-Mcb-Req)})} > 0) ]?Return())
exten = s,n,ExecIf($["${AAUSER}" == ""]?Set(_AAUSER=${IF($["foo${ORG_CALLER_ID_NUM}" = "foo"]?${CALLERID(number)}:${ORG_CALLER_ID_NUM})})})
exten = s,n,ExecIf($["${UCMDB(AAUSER/${AAUSER}/language)}" != ""]?Set(CHANNEL(language)=${UCMDB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = s,n,ExecIf($[ "${IVR_LANGUAGE}" != "" ]?Set(CHANNEL(language)=${IVR_LANGUAGE}))
exten = s,n,Set(__TRANSPARENTSDP=no)
exten = s,n,Goto(s-${ARG2},1)
exten = s-BUSY,1,Log(NOTICE, "BUSY voicemail")
exten = s-BUSY,n,Macro(get-vmcontext,${ARG1})
exten = s-BUSY,n,Set(CDR(action_type)=VM)
exten = s-BUSY,n,Set(CDR(__app_callee)=${ARG1})
exten = s-BUSY,n,VoiceMail(${ARG1}@${VMCONTEXT},b)
exten = s-BUSY,n,Goto(exit-${VMSTATUS},1)
exten = s-NOMESSAGE,1,Log(NOTICE, "NOMESSAGE (beeb only) voicemail")
exten = s-NOMESSAGE,n,Macro(get-vmcontext,${ARG1})
exten = s-NOMESSAGE,n,VoiceMail(${ARG1}@${VMCONTEXT},s)
exten = s-NOMESSAGE,n,Goto(exit-${VMSTATUS},1)
exten = s-DIRECTDIAL,1,Log(NOTICE, "DIRECTDIAL voicemail")
exten = s-DIRECTDIAL,n,Macro(get-vmcontext,${ARG1})
exten = s-DIRECTDIAL,n,VoiceMail(${ARG1}@${VMCONTEXT},u)
exten = s-DIRECTDIAL,n,Goto(exit-${VMSTATUS},1)
exten = _s-.,1,Macro(get-vmcontext,${ARG1})
exten = _s-.,n,Set(CDR(action_type)=VM)
exten = _s-.,n,Set(CDR(__app_callee)=${ARG1})
exten = _s-.,n,ExecIf($["${filepath}" != "" & "${EXTEN}" == "s-CHANUNAVAIL"]?MacroExit())
exten = _s-.,n,VoiceMail(${ARG1}@${VMCONTEXT},u)
exten = _s-.,n,Goto(exit-${VMSTATUS},1)
exten = exit-FAILED,1,GotoIf($["${ARG3}" = "RETURN"]?exit-RETURN,1)
exten = exit-FAILED,n,ExecIf($["${NEEDCDR}" == "yes"]?:NoCDR())
exten = exit-FAILED,n,Hangup
exten = exit-SUCCESS,1,GotoIf($["${ARG3}" = "RETURN"]?exit-RETURN,1)
exten = exit-SUCCESS,n,Hangup
exten = exit-USEREXIT,1,GotoIf($["${ARG3}" = "RETURN"]?exit-RETURN,1)
exten = exit-USEREXIT,n,Hangup
exten = exit-RETURN,1,Log(Notice, "Returning From Voicemail because macro")
exten = t,1,Hangup

[macro-get-vmcontext]
exten = s,1,Set(VMCONTEXT=${UCMDB(AAUSER/${ARG1}/voicemail)})
exten = s,2,GotoIf($["foo${VMCONTEXT}" = "foo"]?200)
exten = s,200,Set(VMCONTEXT=default)

[macro-findme-follow]
exten = s,1,Set(__FMEXT=${ARG1})
exten = s,n,Set(__FMCIDNUM=${CALLERID(num)})
exten = s,n,Set(__FMCIDNAME=${CALLERID(name)})
exten = s,n,Set(CDR(action_type)=FOLLOWME[${FMEXT}])
exten = s,n,Set(CDR(dst_need)=TRUE)
exten = s,n,Followme(${FMEXT},${FOLLOWMEOPTIONS}${TRUNK_OPTIONS})

[macro-followme]
exten = s,1,Macro(user-callerid)
exten = s,n,Set(FM_ENABLE=${ARG1})
exten = s,n,Set(CALLEXTEN=${ARG2})
exten = s,n,Set(TMP_ARG3=${ARG3})
exten = s,n,Set(ARG3=)
exten = s,n,GotoIf($["${IN_FOLLOWME}" = "yes" | "${RECORD_VMENU}"="ON" | "${CONF_ROOM}" != "" | "${SPYEXTEN}" != "" | "${callfile}" != "" | "${IS_SFU}" == "yes"]?disable)
exten = s,n,GotoIf($["${FM_ENABLE}" = "yes"]?enable:disable)
exten = s,n(enable),Set(CALL_RT=${RINGTIME})
exten = s,n,Macro(set-cdr-variables)
exten = s,n,Set(USER_RT=${UCMDB(AAUSER/${CALLEXTEN}/RT)})
exten = s,n,ExecIf($[$["${USER_RT}" != ""]]?Set(CALL_RT=${USER_RT}))
exten = s,n,Set(_FOLLOWME_USER=${CALLEXTEN})
exten = s,n,ExecIf($[ "${HAVE_RECORD}" = "1" | "${TRUNK_REC}" = "yes"]?Macro(record-check,${AAUSER}-${CALLEXTEN},)
exten = s,n,Macro(dial,${CALLEXTEN},${CALL_RT})
exten = s,n,ExecIf($["${DIALSTATUS}" == "ANSWER"]?Hangup)
exten = s,n,Set(__IN_FOLLOWME=yes)
exten = s,n,Set(__TRANSPARENTSDP=no)
exten = s,n,Set(_FOLLOWME_SKIP_AUTH=${TMP_ARG3})
exten = s,n,GotoIf($["${UCMDB(AAUSER/${CALLEXTEN}/bypass_outrt_auth)}" == "bytime"]?:nobytime)
exten = s,n,Set(MATCHTIME=)
exten = s,n,Macro(holidaytime-system,${UCMDB(AAUSER/${CALLEXTEN}/SKIPAUTHTIMETYPE)},${CALLEXTEN})
exten = s,n,ExecIf($["${MATCHTIME}" == "1"]?Set(_FOLLOWME_SKIP_AUTH=yes))
exten = s,n(nobytime),NOop(${FOLLOWME_SKIP_AUTH})
exten = s,n,Macro(findme-follow,${CALLEXTEN})
exten = s,n,Macro(followme-dest,${CALLEXTEN})
exten = s,n(vm),Macro(vm,${CALLEXTEN},${DIALSTATUS},${IVR_RETVM})
exten = s,n,Macro(hangupcall)
exten = s,n(disable),Goto(ext-local,${CALLEXTEN},1)
exten = h,1,Macro(hangupcall)

[macro-queue-general]
exten = s,1,Macro(user-callerid,)
exten = s,n,Set(FROM-QUEUE=yes)
exten = s,n,Set(__FORWARD_CONTEXT=call-forward)
exten = s,n,Set(DISA=)
exten = s,n,Set(__TRANSPARENTSDP=no)
exten = s,n,Set(__IN_QUEUE=yes)
exten = s,n,Set(__QUEUE_NAME=${UCMDB(QUEUE/${ARG1}/NAME)})
exten = s,n,Set(Q_TIME_OUT=${ARG3})
exten = s,n,ExecIf($["${JITTERBUFFER_ENABLE}" = "yes"]?Set(Q_GOSUB=sub-queue-jitterbuffer))
exten = s,n,Set(ARG3=)
exten = s,n,ExecIf($[ "${HAVE_RECORD}" = "1" | "${TRUNK_REC}" = "yes"]?Macro(record-check,${AAUSER}-${ARG1},)
exten = s,n,Set(PJSIP_HEADER(remove,Alert-Info)=)
exten = s,n,ExecIf($["${DID_ALERTINFO}" != "" & "${DID_ALERT_SCHEMA}" == "uri"]?Set(PJSIP_HEADER(add,Alert-Info)=<http://127.0.0.1/${DID_ALERTINFO}>))
exten = s,n,ExecIf($["${DID_ALERTINFO}" != "" & "${DID_ALERT_SCHEMA}" == "info"]?Set(PJSIP_HEADER(add,Alert-Info)=<http://127.0.0.1>\;info=${DID_ALERTINFO}))
exten = s,n,GotoIf($["${SPYEXTEN}" != "" | "${WAKEUP}" = "WAKEUP"]?jump)
exten = s,n,Set(CDR(app_callee)=${ARG1})
exten = s,n,Answer
exten = s,n(jump),Set(__NODEST=)
exten = s,n,Set(MONITOR_FILENAME=/app/asterisk/var/spool/asterisk/queue/${STRFTIME(${EPOCH},,%Y-%m)}/q${ARG1}-${CDR(src)}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${UNIQUEID})
;exten = s,n,Set(MONITOR_FILENAME=/app/asterisk/var/spool/asterisk/queue/q${ARG1}-${CDR(src)}-${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}-${UNIQUEID})
exten = s,n,ExecIf($["${CDR(action_type)}" == "CALLFORWARD"]?Set(CDR(action_type)=${CDR(action_type)}/QUEUE[${ARG1}]):Set(CDR(action_type)=QUEUE[${ARG1}]))
exten = s,n,ExecIf($["${UCMDB(QUEUE/${ARG1}/MEMBERS)}" == "yes" || "${DB(Queue/PersistentMembers/${ARG1})}" != ""]?ForkCDR(are))
exten = s,n,Set(CDR(action_type)=QUEUE[${ARG1}])
exten = s,n,ExecIf($["${REPLACE_CIDNAME}" != ""]?Set(CALLERID(name)=${REPLACE_CIDNAME}))
exten = s,n,Set(CDR(RECORD_FILES)=NO_FILE)
exten = s,n,Set(__DYNAMIC_FEATURES=seamless_transfer)
exten = s,n,ExecIf($["${WEBRTC_DEFAULT_DEST}" == "yes"]?Queue(${ARG1},n,,,${Q_TIME_OUT},,,${Q_GOSUB}):Queue(${ARG1},${ARG2},,,${Q_TIME_OUT},,,${Q_GOSUB}))

[sub-queue-jitterbuffer]
exten = s,1,ExecIf($["${JITTERBUFFER_ENABLE}" = "yes"]?Set(JITTERBUFFER(${JITTERBUFFER_TYPE})=${JITTERBUFFER_PARAM}))

[macro-dial-huntgroup]
;exten = s,1,AGI(get_ring_group_members.py, ${ARG1})
exten = s,1,Set(STRATEGY=${UCMDB(GROUP/${ARG1}/STRATEGY)})
exten = s,n,Set(GTIMER=${UCMDB(GROUP/${ARG1}/TIMER)})
exten = s,n,Set(RINGGROUP_MOH=${UCMDB(GROUP/${ARG1}/RINGGROUP_MOH)})
exten = s,n,Set(TOUCH_MONITOR=${CALLERID(num)}-${ARG1})
exten = s,n,Set(TOUCH_MIXMONITOR=${CALLERID(num)}-${ARG1})
exten = s,n,Set(ENABLE_FORWARD=${ARG3})
exten = s,n,Set(__IN_RINGGROUP=yes)
exten = s,n,Set(__GROUP_NAME=${UCMDB(GROUP/${ARG1}/NAME)})
exten = s,n,Set(__TRANSPARENTSDP=no)
exten = s,n,Set(__FORWARD_CONTEXT=call-forward)
exten = s,n,ExecIf($[ "${HAVE_RECORD}" = "1" | "${TRUNK_REC}" = "yes" ]?Macro(record-check,${REC_AAUSER}-${ARG1},))
exten = s,n,ExecIf($["${AUTO_RECORDING}" == "ON"]?Set(__RINGGROUP_REC=yes))
exten = s,n,Set(CUSTOM_PROMPT=${ARG2})
exten = s,n,ExecIf($["${CUSTOM_PROMPT}" != ""]?Progress())
exten = s,n,ExecIf($["${TRUNK_PROTOCAL}" == "Analog"]?ExecIf($["${CUSTOM_PROMPT}" != ""]?Playback(${CUSTOM_PROMPT})):ExecIf($["${CUSTOM_PROMPT}" != ""]?Playback(${CUSTOM_PROMPT},noanswer)))
exten = s,n,ExecIf($["${CALLERID(ANI-num-valid)}" = "1"]?Set(TOUCH_MONITOR=${CALLERID(ANI-num)}-${ARG1}))
exten = s,n,ExecIf($["${CALLERID(ANI-num-valid)}" = "1"]?Set(TOUCH_MIXMONITOR=${CALLERID(ANI-num)}-${ARG1}))
exten = s,n,ExecIf($["${CF_ALL}" != ""]?Set(_CF_ALL=${CALL_FORWARD}@${CF_ALL}))
exten = s,n,ExecIf($["${CF_ALL}" == ""]?Set(_CF_ALL=${CALL_FORWARD}))
exten = s,n,GotoIf($[${STRATEGY}=ORDER]?order,1:simulta,1)
exten = order,1,Set(i=1)
exten = order,n,While($[${i} <= ${NUM}])
exten = order,n,Set(CUR_MEMBER=${CUT(MEMBERS,,${i})})
exten = order,n,ExecIf($["${PJSIP_DIAL_CONTACTS(${CUR_MEMBER})}" != ""]?Set(DIAL_MEMBER=${PJSIP_DIAL_CONTACTS(${CUR_MEMBER})}):Set(DIAL_MEMBER=${UCMDB(AAUSER/${CUR_MEMBER}/DIAL)})
exten = order,n,GotoIf($["${DIAL_MEMBER}" == ""]?next)
exten = order,n,Noop(${DEVICE_STATE(${UCMDB(AAUSER/${CUR_MEMBER}/DIAL)})})
exten = order,n,Set(DEVICE_ST=${DEVICE_STATE(${UCMDB(AAUSER/${CUR_MEMBER}/DIAL)})})
exten = order,n,Set(DEVICE_NAME=${UCMDB(AAUSER/${CUR_MEMBER}/DIAL)})
exten = order,n,ExecIf($["${DEVICE_ST}" != ""]?Set(DIALSTATUS="CHANUNAVAIL")
exten = order,n,GotoIf( $["${DEVICE_NAME:0:3}" == "IAX"  & "${DEVICE_ST}" != "UNKNOWN"]?next)
exten = order,n,GotoIf( $["${DEVICE_NAME:0:5}" == "PJSIP" & "${DEVICE_ST}" != "NOT_INUSE"]?next)
exten = order,n,GotoIf( $["${DEVICE_NAME:0:5}" == "DAHDI" & "${DEVICE_ST}" != "NOT_INUSE"]?next)
exten = order,n,Macro(set-call-options,${ENABLE_FORWARD})
exten = order,n,ExecIf($["${FROM_IVR}" != ""]?Set(CALL_OPTIONS=${CALL_OPTIONS}m(rbt)))
exten = order,n,ExecIf($["${RINGGROUP_MOH}" != ""]?Set(CALL_OPTIONS=${CALL_OPTIONS}m(${RINGGROUP_MOH})))
exten = order,n,ExecIf($["${RINGGROUP_MOH}" != "" & "${TRUNK_PROTOCAL}" == "Analog" & "${CUSTOM_PROMPT}" == ""]?Answer())
exten = order,n,Macro(fax-gateway,${CUR_MEMBER})
exten = order,n,Log(NOTICE,"The recording file name : ${MIXFILENAME}")
exten = order,n,Log(NOTICE,"Whether open auto recording or not :${MIXAUTORECORDING}")
exten = order,n,ExecIf($["${MIXAUTORECORDING}" == "ON"]?Set(CALL_OPTIONS=${CALL_OPTIONS}M(record-check,StartMonitor)))
exten = order,n,ExecIf($["${RINGGROUP_REC}" == "yes"]?Set(CDR(record_files)=${MIXFILENAME}.${MIXMON_FORMAT}@))
exten = order,n,Set(CALL_OPTIONS=${CALL_OPTIONS}b(callee-handler^s^1)${EXTENSION_LIMIT})
exten = order,n,Set(__DYNAMIC_FEATURES=seamless_transfer)
exten = order,n,Set(DIAL_CONTACTS=${PJSIP_MISSED_CALL_CONTACTS(${CUR_MEMBER})})
exten = order,n,ExecIf($["${DIAL_CONTACTS}" != "" && "${MISSED_CONTACTS}" != ""]?Set(MISSED_CONTACTS=${MISSED_CONTACTS}&${DIAL_CONTACTS}))                                     
exten = order,n,ExecIf($["${DIAL_CONTACTS}" != "" && "${MISSED_CONTACTS}" == ""]?Set(MISSED_CONTACTS=${DIAL_CONTACTS}))                                                        
exten = order,n,Dial(${DIAL_MEMBER},${GTIMER},${CALL_OPTIONS})
exten = order,n(next),Set(i=$[${i} + 1])
exten = order,n,EndWhile()
exten = order,n,Set(GROUPRINGOUT=yes)
exten = order,n,Set(ii=1)
exten = order,n,While($[${ii} <= ${NUM_LDAP}])
exten = order,n,Set(CUR_MEMBER=${CUT(MEMBERS_LDAP,,${ii})})
exten = order,n,Set(GROUPRINGOUT=yes)
exten = order,n,Set(RINGBOTH_CALLERID=)
exten = order,n,Set(TMPCALLERID=${CALLERID(number)})
exten = order,n,Set(CALLERID(number)=${ARG1})
exten = order,n,Gosub(ringboth_outroute,${CUR_MEMBER},1,${ARG1})
exten = order,n,Set(CALLERID(number)=${TMPCALLERID})
exten = order,n,GotoIf($["${RBPASSWD}" != ""]?next_ldap)
exten = order,n,GotoIf($["${NOMATCHOUT}" == "yes"]?next_ldap)
exten = order,n,GotoIf($["${GROUPRINGOUT}" == "no"]?next_ldap)
exten = order,n,ExecIf($["${OUTKEEPCID_${EXTERNAL_TRUNKINDEX}}" == "yes"]?Set(RINGBOTH_CALLERID=${OUT_CID_${EXTERNAL_TRUNKINDEX}}))
exten = order,n,ExecIf($["${CUT(OUT_${EXTERNAL_TRUNKINDEX},/,1)}" = "PJSIP"]?Set(DIAL_MEMBER=${CUT(OUT_${EXTERNAL_TRUNKINDEX},/,1)}/${EXTERNAL_NUMBER}@${CUT(OUT_${EXTERNAL_TRUNKINDEX},/,2)}):Set(DIAL_MEMBER=${OUT_${EXTERNAL_TRUNKINDEX}}/${EXTERNAL_NUMBER}))
;exten = order,n,Set(DIAL_MEMBER=${OUT_${EXTERNAL_TRUNKINDEX}}/${EXTERNAL_NUMBER})
exten = order,n,GotoIf($["${DIAL_MEMBER}" == ""]?next_ldap)
exten = order,n,Macro(set-call-options,${ENABLE_FORWARD})
exten = order,n,ExecIf($["${FROM_IVR}" != ""]?Set(CALL_OPTIONS=${CALL_OPTIONS}m(rbt)))
exten = order,n,ExecIf($["${RINGGROUP_MOH}" != ""]?Set(CALL_OPTIONS=${CALL_OPTIONS}m(${RINGGROUP_MOH})))
exten = order,n,ExecIf($["${RINGGROUP_MOH}" != "" & "${TRUNK_PROTOCAL}" == "Analog" & "${CUSTOM_PROMPT}" == ""]?Answer())
exten = order,n,Macro(fax-gateway,${CUR_MEMBER})
exten = order,n,Log(NOTICE,"The recording file name : ${MIXFILENAME}")
exten = order,n,Log(NOTICE,"Whether open auto recording or not :${MIXAUTORECORDING}")
exten = order,n,ExecIf($["${MIXAUTORECORDING}" == "ON"]?Set(CALL_OPTIONS=${CALL_OPTIONS}M(record-check,StartMonitor)))
exten = order,n,ExecIf($["${EXTERNAL_TRUNKIPRO}" == "EM" | "${EXTERNAL_TRUNKIPRO}" == "EM_W"]?Progress())
exten = order,n,ExecIf($["${RINGGROUP_REC}" == "yes"]?Set(CDR(record_files)=${MIXFILENAME}.${MIXMON_FORMAT}@))
exten = order,n,Set(CALL_OPTIONS=${CALL_OPTIONS}b(callee-handler^s^1)${EXTENSION_LIMIT})
exten = order,n,Set(__DYNAMIC_FEATURES=seamless_transfer)
exten = order,n,Set(DIAL_CONTACTS=${PJSIP_MISSED_CALL_CONTACTS(${CUR_MEMBER})})
exten = order,n,ExecIf($["${DIAL_CONTACTS}" != "" && "${MISSED_CONTACTS}" != ""]?Set(MISSED_CONTACTS=${MISSED_CONTACTS}&${DIAL_CONTACTS}))
exten = order,n,ExecIf($["${DIAL_CONTACTS}" != "" && "${MISSED_CONTACTS}" == ""]?Set(MISSED_CONTACTS=${DIAL_CONTACTS}))
exten = order,n,Dial(${DIAL_MEMBER},${GTIMER},${CALL_OPTIONS})
exten = order,n(next_ldap),Set(ii=$[${ii} + 1])
exten = order,n,EndWhile()
exten = simulta,1,Set(i=1)
exten = simulta,n,While($[${i} <= ${NUM}])
exten = simulta,n,Set(CUR_MEMBER=${CUT(MEMBERS,,${i})})
exten = simulta,n,Set(GROUP_CALLEE=${GROUP_CALLEE}&${CUR_MEMBER})
exten = simulta,n,ExecIf($["${PJSIP_DIAL_CONTACTS(${CUR_MEMBER})}" != ""]?Set(DIAL_MEMBER=${PJSIP_DIAL_CONTACTS(${CUR_MEMBER})}):Set(DIAL_MEMBER=${UCMDB(AAUSER/${CUR_MEMBER}/DIAL)}))
exten = simulta,n,Set(DIAL_CONTACTS=${PJSIP_MISSED_CALL_CONTACTS(${CUR_MEMBER})}) 
exten = simulta,n,ExecIf($["${DIAL_CONTACTS}" != "" && "${MISSED_CONTACTS}" != ""]?Set(MISSED_CONTACTS=${MISSED_CONTACTS}&${DIAL_CONTACTS}))
exten = simulta,n,ExecIf($["${DIAL_CONTACTS}" != "" && "${MISSED_CONTACTS}" == ""]?Set(MISSED_CONTACTS=${DIAL_CONTACTS}))
exten = simulta,n,GotoIf($[${i}=1]?header:node)
exten = simulta,n(header),Set(DIAL_STR=${DIAL_MEMBER})
exten = simulta,n,Set(i=$[${i} + 1])
exten = simulta,n,ContinueWhile()
exten = simulta,n(node),ExecIf($["${DIAL_MEMBER}" != ""]?Set(DIAL_STR=${DIAL_STR}&${DIAL_MEMBER}))
exten = simulta,n,Set(i=$[${i} + 1])
exten = simulta,n,EndWhile()
exten = simulta,n,ExecIF($[${NUM} == 0]?Set(DIAL_STR=""))
exten = simulta,n,Set(GROUPRINGOUT=yes)
exten = simulta,n,Set(ii=1)
exten = simulta,n,While($[${ii} <= ${NUM_LDAP}])
exten = simulta,n,Set(NOMATCHOUT=no)
exten = simulta,n,Set(CUR_MEMBER=${CUT(MEMBERS_LDAP,,${ii})})
exten = simulta,n,Set(GROUP_CALLEE=${GROUP_CALLEE}&${CUR_MEMBER})
exten = simulta,n,Set(GROUPRINGOUT=yes)
exten = simulta,n,Set(TMPCALLERID=${CALLERID(number)})
exten = simulta,n,Set(CALLERID(number)=${ARG1})
exten = simulta,n,Gosub(ringboth_outroute,${CUR_MEMBER},1,${ARG1})
exten = simulta,n,Set(CALLERID(number)=${TMPCALLERID})
exten = simulta,n,GotoIf($["${NOMATCHOUT}" == "yes" | "${GROUPRINGOUT}" == "no" | "${RBPASSWD}" != ""]?noallow:allow)
exten = simulta,n(noallow),Set(ii=$[${ii} + 1])
exten = simulta,n,ContinueWhile()
exten = simulta,n(allow),ExecIf($["${CUT(OUT_${EXTERNAL_TRUNKINDEX},/,1)}" = "PJSIP"]?Set(DIAL_MEMBER=${CUT(OUT_${EXTERNAL_TRUNKINDEX},/,1)}/${EXTERNAL_NUMBER}@${CUT(OUT_${EXTERNAL_TRUNKINDEX},/,2)}):Set(DIAL_MEMBER=${OUT_${EXTERNAL_TRUNKINDEX}}/${EXTERNAL_NUMBER}))
;exten = simulta,n(allow),Set(DIAL_MEMBER=${OUT_${EXTERNAL_TRUNKINDEX}}/${EXTERNAL_NUMBER})
exten = simulta,n,GotoIf($["${DIAL_STR}" == ""]?header_ldap:node_ldap)
exten = simulta,n(header_ldap),Set(DIAL_STR=${DIAL_MEMBER})
exten = simulta,n,Set(ii=$[${ii} + 1])
exten = simulta,n,ContinueWhile()
exten = simulta,n(node_ldap),ExecIf($["${DIAL_MEMBER}" != ""]?Set(DIAL_STR=${DIAL_STR}&${DIAL_MEMBER}))
exten = simulta,n,Set(ii=$[${ii} + 1])
exten = simulta,n,EndWhile()
exten = simulta,n,Macro(set-call-options,${ENABLE_FORWARD})
exten = simulta,n,ExecIf($["${FROM_IVR}" != ""]?Set(CALL_OPTIONS=${CALL_OPTIONS}m(rbt)))
exten = simulta,n,ExecIf($["${RINGGROUP_MOH}" != ""]?Set(CALL_OPTIONS=${CALL_OPTIONS}m(${RINGGROUP_MOH})))
exten = simulta,n,ExecIf($["${RINGGROUP_MOH}" != "" & "${TRUNK_PROTOCAL}" == "Analog" & "${CUSTOM_PROMPT}" == ""]?Answer())
exten = simulta,n,ExecIf($["${EXTERNAL_TRUNKIPRO}" == "EM" | "${EXTERNAL_TRUNKIPRO}" == "EM_W"]?Progress())
exten = simulta,n,Log(NOTICE,"The recording file name : ${MIXFILENAME}")
exten = simulta,n,Log(NOTICE,"Whether open auto recording or not :${MIXAUTORECORDING}")
exten = simulta,n,Set(CALL_OPTIONS=${CALL_OPTIONS}b(callee-handler^s^1)${EXTENSION_LIMIT})
exten = simulta,n,ExecIf($["${MIXAUTORECORDING}" == "ON"]?Set(CALL_OPTIONS=${CALL_OPTIONS}M(record-check,StartMonitor)))
exten = simulta,n,Noop(${DIAL_STR:0:1})
exten = simulta,n,ExecIf($[ "${DIAL_STR:0:1}" == "&"]?Set(DIAL_STR=${DIAL_STR:1:}))
exten = simulta,n,Set(__DYNAMIC_FEATURES=seamless_transfer)
exten = simulta,n,ExecIf($["${DIAL_STR}" != ""]?Dial(${DIAL_STR},${GTIMER},${CALL_OPTIONS}))
;exten = simulta,n,Dial(${DIAL_STR},${GTIMER},${CALL_OPTIONS})

[macro-agent-pause]
exten = s,1,Answer
exten = s,n,Wait(1)
exten = s,n,GotoIf($[ "${SCA_PRIV_CALLER}" == "yes" ]?noexist)  
exten = s,n,Macro(user-callerid,SKIPTTL,)
exten = s,n,Set(CALLBACKNUM=${AAUSER})
exten = s,n,Set(queuemember=${CHANNEL(channeltype)}/${CALLBACKNUM})
exten = s,n,Set(dahdichan=${CHANNEL(dahdi_channel)})
exten = s,n,Noop(${dahdichan})
exten = s,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI"]?Set(queuemember=${CHANNEL(channeltype)}/${dahdichan}))
exten = s,n,Noop(${queuemember})
exten = s,n,PauseQueueMember(,${queuemember})
exten = s,n,GotoIf($["${PQMSTATUS}" == "PAUSED"]?agentfound)
exten = s,n(noexist),Playback(agent-does-not-exist)
exten = s,n,Goto(hangup)
exten = s,n(agentfound),UserEvent(RefreshQueue)
exten = s,n,Playback(extension)
exten = s,n,SayDigits(${CALLBACKNUM})
exten = s,n,Playback(dictate/paused)
exten = s,n(hangup),Hangup

[macro-agent-unpause]
exten = s,1,Answer
exten = s,n,GotoIf($[ "${SCA_PRIV_CALLER}" == "yes" ]?noexist)  
exten = s,n,Wait(1)
exten = s,n,Macro(user-callerid,SKIPTTL,)
exten = s,n,Set(CALLBACKNUM=${AAUSER})
exten = s,n,Set(queuemember=${CHANNEL(channeltype)}/${CALLBACKNUM})
exten = s,n,Set(dahdichan=${CHANNEL(dahdi_channel)})
exten = s,n,Noop(${dahdichan})
exten = s,n,ExecIf($["${CHANNEL(channeltype)}" = "DAHDI"]?Set(queuemember=${CHANNEL(channeltype)}/${dahdichan}))
exten = s,n,Noop(${queuemember})
exten = s,n,UnpauseQueueMember(,${queuemember})
exten = s,n,GotoIf($["${UPQMSTATUS}" == "UNPAUSED"]?agentfound)
exten = s,n(noexist),Playback(agent-does-not-exist)
exten = s,n,Goto(hangup)
exten = s,n(agentfound),UserEvent(RefreshQueue)
exten = s,n,Playback(extension)
exten = s,n,SayDigits(${CALLBACKNUM})
exten = s,n,Playback(dictate/unpaused)
exten = s,n(hangup),Hangup

[macro-app-blacklist-add]
exten = s,1,Set(CDR(app_callee)=${ARG1})
exten = s,n,Answer
exten = s,n,Wait(1)
exten = s,n,Set(NumLoops=0)
exten = s,n,ExecIf($["${DISA_CHANNEL_LANGUAGE}" != ""]?Set(CHANNEL(language)=${DISA_CHANNEL_LANGUAGE}))
exten = s,n(start),Set(TIMEOUT(digit)=5)
exten = s,n,Set(TIMEOUT(response)=60)
exten = s,n,Read(blacknr,enter-num-blacklist&then-press-pound,,,,)
exten = s,n,GotoIf($[$[${LEN(${blacknr})} <= 32] && $[${LEN(${blacknr})} >= 2]]?:invalid)
exten = s,n,SayDigits(${blacknr})
exten = s,n,Log(NOTICE, "Waiting for input blacklist number")
exten = s,n,Read(var,if-correct-press&digits/1,1,,,60)
exten = s,n,GotoIf($[ "${READSTATUS}" == "OK"]?:problem)
exten = s,n,GotoIf($[ "${var}" == "1"]?:invalid)
exten = s,n,GotoIf(${ISNULL(${blacknr})}?invalid)
exten = s,n,Set(UCMDB(blacklist/${blacknr})=1)
exten = s,n,AGI(agi_execute_sql.py,"insert into inbound_blacklist('number') values('${blacknr}')")
exten = s,n,Playback(num-was-successfully&added)
exten = s,n,Wait(1)
exten = s,n,Hangup
exten = s,n(problem),Playback(sorry-youre-having-problems&goodbye)
exten = s,n,Hangup
exten = s,n(invalid),Macro(app-blacklist-add-invalid,${EXTEN},1)

[macro-app-blacklist-add-invalid]
exten = s,1,Set(NumLoops=$[${NumLoops} + 1])
exten = s,n,Playback(pm-invalid-option)
exten = s,n,GotoIf($[${NumLoops} < 3]?:bye)
exten = s,n,Goto(macro-app-blacklist-add,${EXTEN},start)
exten = s,n(bye),Playback(goodbye)
exten = s,n,Hangup

[macro-app-blacklist-remove]
exten = s,1,Set(CDR(app_callee)=${ARG1})
exten = s,n,Answer
exten = s,n,Wait(1)
exten = s,n,Set(NumLoops=0)
exten = s,n,ExecIf($["${DISA_CHANNEL_LANGUAGE}" != ""]?Set(CHANNEL(language)=${DISA_CHANNEL_LANGUAGE}))
exten = s,n(start),Set(TIMEOUT(digit)=5)
exten = s,n,Set(TIMEOUT(response)=60)
exten = s,n,Read(blacknr,entr-num-rmv-blklist&then-press-pound,,,,)
exten = s,n,GotoIf($[$[${LEN(${blacknr})} <= 32] && $[${LEN(${blacknr})} >= 2]]?:invalid)
exten = s,n,SayDigits(${blacknr})
exten = s,n,Log(NOTICE, "Waiting for input number be removed")
exten = s,n,Read(var,if-correct-press&digits/1,1,,,60)
exten = s,n,GotoIf($[ "${READSTATUS}" == "OK"]?:problem)
exten = s,n,GotoIf($[ "${var}" == "1"]?:invalid)
exten = s,n,GotoIf(${ISNULL(${blacknr})}?invalid)
exten = s,n,Log(NOTICE, "Deleting:blacklist/${blacknr} ${UCMDB_DELETE(blacklist/${blacknr})}")
exten = s,n,UCMDBdel(blacklist/${blacknr})
exten = s,n,AGI(agi_execute_sql.py,"delete from  inbound_blacklist where number = '${blacknr}'")
exten = s,n,Playback(num-was-successfully&removed)
exten = s,n,Wait(1)
exten = s,n,Hangup
exten = s,n(problem),Playback(sorry-youre-having-problems&goodbye)
exten = s,n,Hangup
exten = s,n(invalid),Macro(app-blacklist-remove-invalid,${EXTEN},1)

[macro-app-blacklist-remove-invalid]
exten = s,1,Set(NumLoops=$[${NumLoops} + 1])
exten = s,n,Playback(pm-invalid-option)
exten = s,n,GotoIf($[${NumLoops} < 3]?:bye)
exten = s,n,Goto(macro-app-blacklist-remove,${EXTEN},start)
exten = s,n(bye),Playback(goodbye)
exten = s,n,Hangup

[mcb-connect]
exten = _X.,1,Set(MCB_REMOTE=${CUT(EXTEN,-,1)})
exten = _X.,n,Set(MCB_LOCAL=${CUT(EXTEN,-,2)})
exten = _X.,n,Set(CALLERID(all)=Multi-conference Bridge <${MCB_REMOTE}>)
exten = _X.,n,Set(CHANNEL(language)=${GLOBAL_LANGUAGE})
exten = _X.,n,Set(MCB_ADDED=0)
exten = _X.,n,Set(CONF_LOCK=${TRYLOCK(LOCK_CONF_STATUS)})
exten = _X.,n,While($[${CONF_LOCK} < 1])
exten = _X.,n,Set(CONF_LOCK=${TRYLOCK(LOCK_CONF_STATUS)})
exten = _X.,n,EndWhile
exten = _X.,n,ExecIf($["${DB(CONF_STATUS/${MCB_LOCAL}/SIZE)}" = ""]?Set(ARRAY(DB(CONF_STATUS/${MCB_LOCAL}/SIZE),DB(CONF_STATUS/${MCB_LOCAL}/ADMINS),DB(CONF_STATUS/${MCB_LOCAL}/USERS),DB(CONF_STATUS/${MCB_LOCAL}/MCBS))=0,0,0,0))
exten = _X.,n,ExecIf($["${DB(CONF_STATUS/GLOBAL/SIZE)}" = ""]?Set(DB(CONF_STATUS/GLOBAL/SIZE)=0))
exten = _X.,n,ExecIf($[${DB(CONF_STATUS/GLOBAL/SIZE)} < 0]?Set(DB(CONF_STATUS/GLOBAL/SIZE)=0))
exten = _X.,n,GotoIf($[${DB(CONF_STATUS/GLOBAL/SIZE)} >= ${GLOBAL(CONF_SIZE_LIMIT)}]?full,1)
;exten = _X.,n,Set(DB(CONF_STATUS/${MCB_LOCAL}/MCBS)=$[${DB(CONF_STATUS/${MCB_LOCAL}/MCBS)}+1])
;exten = _X.,n,Set(DB(CONF_STATUS/${MCB_LOCAL}/SIZE)=$[${DB(CONF_STATUS/${MCB_LOCAL}/SIZE)}+1])
;exten = _X.,n,Set(DB(CONF_STATUS/GLOBAL/SIZE)=$[${DB(CONF_STATUS/GLOBAL/SIZE)}+1])
exten = _X.,n,Set(ARRAY(DB(CONF_STATUS/${MCB_LOCAL}/MCBS),DB(CONF_STATUS/${MCB_LOCAL}/SIZE),DB(CONF_STATUS/GLOBAL/SIZE),CONF_SIZE_INCREASED)=$[${DB(CONF_STATUS/${MCB_LOCAL}/MCBS)}+1],$[${DB(CONF_STATUS/${MCB_LOCAL}/SIZE)}+1],$[${DB(CONF_STATUS/GLOBAL/SIZE)}+1],1)
exten = _X.,n,Set(CONF_LOCK=${UNLOCK(LOCK_CONF_STATUS)})
exten = _X.,n,Set(MCB_ADDED=1)
exten = _X.,n,While($["${SHARED(MCB_AUTHED)}" = ""])
exten = _X.,n,Wait(1)
exten = _X.,n,EndWhile
exten = _X.,n,ExecIf($[${SHARED(MCB_AUTHED)} < 1]?h,Macro(hangupcall,))
;exten = _X.,n,Meetme(${MCB_LOCAL},Hh)
exten = _X.,n,ExecIf($["${SHARED(MCB_TYPE)}" != ""]?Set(CONFBRIDGE(user,mcb_type)=${SHARED(MCB_TYPE)}))
exten = _X.,n,ExecIf($["${SHARED(MCB_REMOTE_CONF_ID)}" != ""]?Set(CONFBRIDGE(user,mcb_remote_conf_id)=${SHARED(MCB_REMOTE_CONF_ID)}))
exten = _X.,n,Set(CONFBRIDGE(user,marked_as_mcb)=yes)
exten = _X.,n,Set(CONFBRIDGE(user,marked_as_mcb_idle_kick)=yes)
exten = _X.,n,ExecIf($["${CALLERID(name)}" = ""]?Set(CALLERID(name)=Multi-conference Bridge))
exten = _X.,n,Set(schedule_id=${DB(SCHEDULE/${MCB_LOCAL}/ScheduleID)})
exten = _X.,n,Set(schedule_record=${DB(SCHEDULE/${schedule_id}/RECORD)})
exten = _X.,n,ExecIf($["${schedule_record}" = "" && "${UCMDB(AAUSER/${MCB_LOCAL}/RECORD)}" = "yes"]?Set(CONFBRIDGE(bridge,record_conference)=yes))
exten = _X.,n,ExecIf($["${schedule_record}" = "yes"]?Set(CONFBRIDGE(bridge,record_conference)=yes))
exten = _X.,n,Set(CONFBRIDGE(bridge,record_file_append)=no)
exten = _X.,n,Set(CONFBRIDGE(bridge,language)=${GLOBAL_LANGUAGE})
exten = _X.,n,Set(CONFBRIDGE(bridge,one_person_warning)=120000)
exten = _X.,n,Set(CONFBRIDGE(bridge,one_person_warning_interval)=120000)
exten = _X.,n,ConfBridge(${MCB_LOCAL})
exten = full,1,Set(CONF_LOCK=${UNLOCK(LOCK_CONF_STATUS)})
exten = full,n,Set(SHARED(MCB_LOCAL_FULL,${CUT(CHANNEL,\;,1)}${SPRINTF(%c,59)}2)=1)
exten = full,n,Macro(hangupcall,)
exten = h,1,NoOp(MCB_AUTHED = ${SHARED(MCB_AUTHED)})
exten = h,n,NoOp(MCB_ADDED = ${MCB_ADDED})
exten = h,n(check_authed),GotoIf($["${SHARED(MCB_AUTHED)}" != "1"]?check_added)
exten = h,n,Set(I=1)
exten = h,n,Set(MCB_LOCK=${TRYLOCK(LOCK_MCB_${MCB_LOCAL})})
exten = h,n,While($[${MCB_LOCK} < 1])
exten = h,n,Set(MCB_LOCK=${TRYLOCK(LOCK_MCB_${MCB_LOCAL})})
exten = h,n,EndWhile
exten = h,n,Set(MCB_DB_REMOTE_CONFIDS=${DB(MCB/${MCB_LOCAL}/REMOTE_CONFIDS)})
exten = h,n,Set(MCB_DB_REMOTE_CHANNELS=${DB(MCB/${MCB_LOCAL}/REMOTE_CHANNELS)})
exten = h,n,Set(MCB_DB_PARENT_CHANNELS=${DB(MCB/${MCB_LOCAL}/PARENT_CHANNELS)})
exten = h,n,Set(MCB_DB_TYPES=${DB(MCB/${MCB_LOCAL}/TYPES)})
exten = h,n(loop),Set(TOKEN=${CUT(MCB_DB_REMOTE_CHANNELS,\,,${I})})
exten = h,n,Set(PARENT_CHANNEL=${CUT(MCB_DB_PARENT_CHANNELS,\,,${I})})
exten = h,n,Set(MCB_TYPE=${CUT(MCB_DB_TYPES,\,,${I})})
exten = h,n,GotoIf($["${TOKEN}" = ""]?bad_record)
exten = h,n,GotoIf($["${TOKEN}" = "${CHANNEL}" | "${CUT(PARENT_CHANNEL,\;,1)}" = "${CUT(CHANNEL,\;,1)}"]?good_record)
exten = h,n,Set(I=$[${I}+1])
exten = h,n,Goto(loop)
exten = h,n(bad_record),Log(NOTICE, "MCB connect: Could not find record of sucessful MCB")
exten = h,n,Set(MCB_LOCK=${UNLOCK(LOCK_MCB_${MCB_LOCAL})})
exten = h,n,Goto(check_added)
exten = h,n(good_record),Set(MCB_DB_NEW_REMOTE_CONFIDS=${CUT(MCB_DB_REMOTE_CONFIDS,\,,-$[${I}-1]&$[${I}+1]-)})
exten = h,n,Set(MCB_REMOTE_CONFID=${CUT(MCB_DB_REMOTE_CONFIDS,\,,${I})})
exten = h,n,Set(MCB_DB_NEW_REMOTE_CHANNELS=${CUT(MCB_DB_REMOTE_CHANNELS,\,,-$[${I}-1]&$[${I}+1]-)})
exten = h,n,Set(MCB_DB_NEW_PARENT_CHANNELS=${CUT(MCB_DB_PARENT_CHANNELS,\,,-$[${I}-1]&$[${I}+1]-)})
exten = h,n,Set(MCB_DB_NEW_TYPES=${CUT(MCB_DB_TYPES,\,,-$[${I}-1]&$[${I}+1]-)})
exten = h,n(update_record),Set(DB(MCB/${MCB_LOCAL}/REMOTE_CONFIDS)=${MCB_DB_NEW_REMOTE_CONFIDS})
exten = h,n,Set(DB(MCB/${MCB_LOCAL}/REMOTE_CHANNELS)=${MCB_DB_NEW_REMOTE_CHANNELS})
exten = h,n,Set(DB(MCB/${MCB_LOCAL}/PARENT_CHANNELS)=${MCB_DB_NEW_PARENT_CHANNELS})
exten = h,n,Set(DB(MCB/${MCB_LOCAL}/TYPES)=${MCB_DB_NEW_TYPES})
exten = h,n,ExecIf($[${LEN(${CHANNEL})} >= 11 & "${CHANNEL:0:11}" = "PJSIP/trunk"]?Set(MCB_EXTERNAL=1):Set(MCB_EXTERNAL=0))
exten = h,n,Set(GS_TRANSPORT=${PJSIP_HEADER(read,X-Grandstream-Transport)})
exten = h,n,ExecIf($[ $["${GS_TRANSPORT}" = "trunk"] | $["${MCB_TYPE}" = "external"] ]?Set(MCB_EXTERNAL=1))
exten = h,n,ExecIf($["${MCB_EXTERNAL}" = "1"]?Set(ENDPOINT=${CUT(TOKEN,\-,1)}))
exten = h,n,ExecIf($["${MCB_EXTERNAL}" = "1"]?Set(ENDPOINT=${CUT(ENDPOINT,\/,2)}))
exten = h,n,ExecIf($["${MCB_EXTERNAL}" = "1"]?SIPUnsubscribeExtMCB(${DB(MCB/${MCB_LOCAL}/LOCAL_IDENTITY)},${MCB_REMOTE_CONFID},${ENDPOINT}))
exten = h,n,ExecIf($[ $["${MCB_EXTERNAL}" = "0"] & $["${MCB_CREATE_CHAN}" != ""] ]?SIPUnsubscribeMCB(${DB(MCB/${MCB_LOCAL}/LOCAL_IDENTITY)},${MCB_REMOTE_CONFID}))
exten = h,n,Set(MCB_LOCK=${UNLOCK(LOCK_MCB_${MCB_LOCAL})})
exten = h,n(check_added),GotoIf($[${MCB_ADDED} != 1 && ${CONF_SIZE_INCREASED} != 1]?hangup)
exten = h,n,Set(CONF_LOCK=${TRYLOCK(LOCK_CONF_STATUS)})
exten = h,n,While($[${CONF_LOCK} < 1])
exten = h,n,Set(CONF_LOCK=${TRYLOCK(LOCK_CONF_STATUS)})
exten = h,n,EndWhile
exten = h,n,Set(DB(CONF_STATUS/${MCB_LOCAL}/MCBS)=$[${DB(CONF_STATUS/${MCB_LOCAL}/MCBS)}-1])
exten = h,n,Set(DB(CONF_STATUS/${MCB_LOCAL}/SIZE)=$[${DB(CONF_STATUS/${MCB_LOCAL}/SIZE)}-1])
exten = h,n,Set(DB(CONF_STATUS/GLOBAL/SIZE)=$[${DB(CONF_STATUS/GLOBAL/SIZE)}-1])
exten = h,n,Set(CONF_LOCK=${UNLOCK(LOCK_CONF_STATUS)})
exten = h,n(hangup),Macro(hangupcall)

[mcb-create]
exten = _X.,1,Set(MCB_REMOTE=${CUT(EXTEN,-,1)})
exten = _X.,n,GotoIf($["${UCMDB(AAUSER/${MCB_REMOTE}/TYPE)}" = "user"]?h,hangup)
exten = _X.,n,Set(MCB_LOCAL=${CUT(EXTEN,-,2)})
exten = _X.,n,ExecIf($["${DB(CCM/${MCB_LOCAL}/INVITING)}" == "1"]?Set(__ORIG_CHANNEL=${DB(CCM/${MCB_LOCAL}/ORIG_CHANNEL)}))
exten = _X.,n,Set(MCB_PARENT_CHAN=${CUT(EXTEN,-,3-)})
exten = _X.,n,Set(SHARED(MCB_LOCAL_CONF)=${MCB_LOCAL})
exten = _X.,n,Set(SHARED(MCB_REMOTE_CONF)=${MCB_REMOTE})
exten = _X.,n,GotoIf($[${LEN(${MCB_PARENT_CHAN})} = 0]?webui)
exten = _X.,n,ExecIf($[${LEN(${MCB_PARENT_CHAN})} = 0]?Set(__WEBCALL=mac-create))
exten = _X.,n,ExecIf($[${LEN(${MCB_PARENT_CHAN})} = 0]?:Set(__CONF_USER_INVITE=yes))
exten = _X.,n,Set(MCB_PARENT_CHAN_TYPE=${MCB_PARENT_CHAN:0:1})
exten = _X.,n,GotoIf($["${MCB_PARENT_CHAN_TYPE}" = "P"]?parent_sip)
exten = _X.,n,GotoIf($["${MCB_PARENT_CHAN_TYPE}" = "L"]?parent_local)
exten = _X.,n,GotoIf($["${MCB_PARENT_CHAN_TYPE}" = "D"]?parent_dahdi)
exten = _X.,n,Log(NOTICE, "MCB create: Unsupported channel tech type")
exten = _X.,n,Goto(h,hangup)
exten = _X.,n(parent_sip),Set(MCB_PARENT_CHAN=PJSIP/${MCB_PARENT_CHAN:1})
exten = _X.,n,Goto(parent_pass)
exten = _X.,n(parent_local),Set(MCB_PARENT_CHAN=Local/${CUT(MCB_PARENT_CHAN,-,1):1}@from-internal-${CUT(MCB_PARENT_CHAN,-,2)})
exten = _X.,n,Goto(parent_pass)
exten = _X.,n(parent_dahdi),Set(MCB_PARENT_CHAN=DAHDI/${MCB_PARENT_CHAN:1})
exten = _X.,n(parent_pass),Set(MCB_PASS=${IMPORT(${MCB_PARENT_CHAN},MCB_PASS)})
exten = _X.,n,Set(MCB_PASS_HASH=${SHA1(${MCB_PASS})})
exten = _X.,n,ExecIf($["${MCB_PASS_HASH}" = ""]?Set(MCB_PASS_HASH=da39a3ee5e6b4b0d3255bfef95601890afd80709))
exten = _X.,n,Goto(set_auth)
exten = _X.,n(webui),Set(MCB_PASS_HASH=${MCB_HASH})
exten = _X.,n,GotoIf($["${MCB_PASS_HASH}" != ""]?set_auth)
exten = _X.,n,Set(MCB_PASS_HASH=${DB(CCM/${MCB_LOCAL}/INVITE_DATA)})
exten = _X.,n,Set(DB(CCM/${MCB_LOCAL}/INVITE_DATA)=)
exten = _X.,n,Set(DB(CCM/${MCB_LOCAL}/INVITING)=)
exten = _X.,n(set_auth),ExecIf($["${DB(MCB/${MCB_LOCAL}/LOCAL_IDENTITY)}" = ""]?Set(DB(MCB/${MCB_LOCAL}/LOCAL_IDENTITY)=${SHA1(${MCB_LOCAL}${EPOCH}${RAND(10,99)})}))
exten = _X.,n,Set(__MCB_CONF_HEADER=${DB(MCB/${MCB_LOCAL}/LOCAL_IDENTITY)}${MCB_PASS_HASH})
;exten = _X.,n,SipAddHeader(X-Grandstream-Mcb-Req: ${MCB_CONF_HEADER})
exten = _X.,n,Set(CALLERID(all)=Multi-conference Bridge <${MCB_LOCAL}>)
exten = _X.,n,ExecIf($["${CHANNEL(session)}" = ""]?Set(CHANNEL(session)=${CALLERID(number)}))
exten = _X.,n,Set(__MCB_CREATE_CHAN=${CHANNEL})
exten = _x.,n,Set(__IVR_SUPPORT=no)
exten = _X.,n,Set(__CONF_MENU_CHAN=${MCB_PARENT_CHAN})
exten = _X.,n,Set(CDR(dst_need)=TRUE)
exten = _X.,n,Set(CDR(app_callee)=${MCB_REMOTE})
exten = _X.,n,Set(CDR(action_type)=CONFERENCE[${MCB_REMOTE}])
exten = _X.,n,Set(PHONECONFINVITE=${CUT(MCB_PARENT_CHAN,-,1)})
exten = _X.,n,Set(__PHONECONFINVITE=${CUT(PHONECONFINVITE,/,2)})
exten = _X.,n(dial),Dial(local/${MCB_REMOTE}@from-internal,,)
exten = mcb-add-record,1,Log(NOTICE, "MCB create: Remote conference ID ${SHARED(MCB_REMOTE_CONFID)}")
exten = mcb-add-record,n,Log(NOTICE, "MCB create: Remote conference channel ${SHARED(MCB_REMOTE_CHANNEL)}")
exten = mcb-add-record,n,Log(NOTICE, "MCB create: Local leg full is ${SHARED(MCB_LOCAL_FULL)}")
exten = mcb-add-record,n,GotoIf($["${DIALSTATUS}" != "ANSWER"]?dial_failed_answer)
exten = mcb-add-record,n,Set(MCB_SHARED_CHAN=${CHANNEL})
exten = mcb-add-record,n(mcb_joined),GotoIf($["${SHARED(MCB_REMOTE_CONFID,${MCB_SHARED_CHAN})}" = ""]?dial_failed_id)
exten = mcb-add-record,n,GotoIf($["${SHARED(MCB_LOCAL_FULL,${MCB_SHARED_CHAN})}" = "1"]?local_full)
exten = mcb-add-record,n,Set(I=1)
exten = mcb-add-record,n,Set(MCB_LOCK=${TRYLOCK(LOCK_MCB_${MCB_LOCAL})})
exten = mcb-add-record,n,While($[${MCB_LOCK} < 1])
exten = mcb-add-record,n,Set(MCB_LOCK=${TRYLOCK(LOCK_MCB_${MCB_LOCAL})})
exten = mcb-add-record,n,EndWhile
exten = mcb-add-record,n,Set(MCB_DB_REMOTE_CONFIDS=${DB(MCB/${MCB_LOCAL}/REMOTE_CONFIDS)})
exten = mcb-add-record,n,Set(MCB_DB_REMOTE_CHANNELS=${DB(MCB/${MCB_LOCAL}/REMOTE_CHANNELS)})
exten = mcb-add-record,n,Set(MCB_DB_PARENT_CHANNELS=${DB(MCB/${MCB_LOCAL}/PARENT_CHANNELS)})
exten = mcb-add-record,n,Set(MCB_DB_TYPES=${DB(MCB/${MCB_LOCAL}/TYPES)})
exten = mcb-add-record,n(loop),Set(TOKEN=${CUT(MCB_DB_REMOTE_CONFIDS,\,,${I})})
exten = mcb-add-record,n,GotoIf($["${TOKEN}" = ""]?add_record)
exten = mcb-add-record,n,GotoIf($["${TOKEN}" = "${SHARED(MCB_REMOTE_CONFID)}"]?bad_record)
exten = mcb-add-record,n,Set(I=$[${I}+1])
exten = mcb-add-record,n,Goto(loop)
exten = mcb-add-record,n(add_record),Set(DB(MCB/${MCB_LOCAL}/REMOTE_CONFIDS)=${MCB_DB_REMOTE_CONFIDS}${SHARED(MCB_REMOTE_CONFID,${MCB_SHARED_CHAN})},)
exten = mcb-add-record,n,Set(DB(MCB/${MCB_LOCAL}/REMOTE_CHANNELS)=${MCB_DB_REMOTE_CHANNELS}${SHARED(MCB_REMOTE_CHANNEL,${MCB_SHARED_CHAN})},)
exten = mcb-add-record,n,Set(DB(MCB/${MCB_LOCAL}/PARENT_CHANNELS)=${MCB_DB_PARENT_CHANNELS}${MCB_SHARED_CHAN},)
exten = mcb-add-record,n,Set(SHARED(MCB_AUTHED,${SHARED(MCB_REMOTE_CHANNEL,${MCB_SHARED_CHAN})})=1)
;exten = mcb-add-record,n,Set(MCB_LOCK=${UNLOCK(LOCK_MCB_${MCB_LOCAL})})
exten = mcb-add-record,n,ExecIf($[${LEN(${SHARED(MCB_REMOTE_CHANNEL,${MCB_SHARED_CHAN})})} >= 11 & "${SHARED(MCB_REMOTE_CHANNEL,${MCB_SHARED_CHAN}):0:11}" = "PJSIP/trunk"]?Set(MCB_EXTERNAL=1):Set(MCB_EXTERNAL=0))
exten = mcb-add-record,n,ExecIf($["${MCB_EXTERNAL}" = "1"]?Set(ENDPOINT=${CUT(SHARED(MCB_REMOTE_CHANNEL,${MCB_SHARED_CHAN}),\-,1)}))
exten = mcb-add-record,n,ExecIf($["${MCB_EXTERNAL}" = "1"]?Set(ENDPOINT=${CUT(ENDPOINT,\/,2)}))
exten = mcb-add-record,n,ExecIf($[ $["${MCB_CREATE_CHAN}" != ""] & $["${MCB_EXTERNAL}" = "1"] ]?SIPSubscribeExtMCB(${MCB_LOCAL},${DB(MCB/${MCB_LOCAL}/LOCAL_IDENTITY)},${MCB_REMOTE},${SHARED(MCB_REMOTE_CONFID,${MCB_SHARED_CHAN})},${SHARED(MCB_REMOTE_CHANNEL,${MCB_SHARED_CHAN})},${ENDPOINT},outgoing))
exten = mcb-add-record,n,ExecIf($[ $["${MCB_CREATE_CHAN}" != ""] & $["${MCB_EXTERNAL}" = "0"] ]?SIPSubscribeMCB(${MCB_LOCAL},${DB(MCB/${MCB_LOCAL}/LOCAL_IDENTITY)},${MCB_REMOTE},${SHARED(MCB_REMOTE_CONFID)})
exten = mcb-add-record,n,Set(MCB_TYPE=)
exten = mcb-add-record,n,ExecIf($[ $["${MCB_CREATE_CHAN}" != ""] & $["${MCB_EXTERNAL}" = "1"] ]?Set(MCB_TYPE=external))
exten = mcb-add-record,n,ExecIf($[ $["${MCB_CREATE_CHAN}" != ""] & $["${MCB_EXTERNAL}" = "0"] ]?Set(MCB_TYPE=local))
exten = mcb-add-record,n,Set(DB(MCB/${MCB_LOCAL}/TYPES)=${MCB_DB_TYPES}${MCB_TYPE},)
exten = mcb-add-record,n,Set(SHARED(MCB_TYPE,${MCB_CREATE_CHAN:0:-1}1)=${MCB_TYPE})
exten = mcb-add-record,n,Set(SHARED(MCB_REMOTE_CONF_ID,${MCB_CREATE_CHAN:0:-1}1)=${SHARED(MCB_REMOTE_CONFID,${MCB_SHARED_CHAN})})
exten = mcb-add-record,n,Set(SHARED(MCB_AUTHED,${MCB_CHAN})=1)
exten = mcb-add-record,n,Set(SHARED(MCB_AUTHED,${MCB_CREATE_CHAN:0:-1}1)=1)
exten = mcb-add-record,n,Goto(hangup)
exten = mcb-add-record,n(local_full),Log(NOTICE, "MCB create: Failure, Local conference reported full")
exten = mcb-add-record,n,Set(SHARED(MCB_AUTHED,${SHARED(MCB_REMOTE_CHANNEL,${MCB_SHARED_CHAN})})=0)
exten = mcb-add-record,n,Set(SHARED(MCB_AUTHED,${MCB_CHAN})=0)
exten = mcb-add-record,n,Set(SHARED(MCB_AUTHED,${MCB_CREATE_CHAN:0:-1}1)=0)
exten = mcb-add-record,n,Goto(hangup)
exten = mcb-add-record,n(dial_failed_id),Log(NOTICE, "MCB create: Failure, no remote conference ID")
exten = mcb-add-record,n,Set(SHARED(MCB_AUTHED,${SHARED(MCB_REMOTE_CHANNEL,${MCB_SHARED_CHAN})})=0)
exten = mcb-add-record,n,Set(SHARED(MCB_AUTHED,${MCB_CHAN})=0)
exten = mcb-add-record,n,Set(SHARED(MCB_AUTHED,${MCB_CREATE_CHAN:0:-1}1)=0)
exten = mcb-add-record,n,Goto(hangup)
exten = mcb-add-record,n(dial_failed_answer),Log(NOTICE, "MCB create: Failure, request rejected")
exten = mcb-add-record,n,Set(SHARED(MCB_AUTHED,${SHARED(MCB_REMOTE_CHANNEL,${MCB_SHARED_CHAN})})=0)
exten = mcb-add-record,n,Set(SHARED(MCB_AUTHED,${MCB_CHAN})=0)
exten = mcb-add-record,n,Set(SHARED(MCB_AUTHED,${MCB_CREATE_CHAN:0:-1}1)=0)
exten = mcb-add-record,n,Goto(hangup)
exten = mcb-add-record,n(bad_record),Log(NOTICE, "MCB create: Failure, found duplicate conference ID")
exten = mcb-add-record,n,Set(SHARED(MCB_AUTHED,${SHARED(MCB_REMOTE_CHANNEL,${MCB_SHARED_CHAN})})=0)
exten = mcb-add-record,n,Set(SHARED(MCB_AUTHED,${MCB_CHAN})=0)
exten = mcb-add-record,n,Set(SHARED(MCB_AUTHED,${MCB_CREATE_CHAN:0:-1}1)=0)
;exten = mcb-add-record,n(hangup),Macro(hangupcall)
exten = mcb-add-record,n(hangup),Log(NOTICE, "[WL] Temporally used as hangup sign")
exten = mcb-add-record,n,Set(MCB_LOCK=${UNLOCK(LOCK_MCB_${MCB_LOCAL})})
exten = mcb-ready,1,Log(NOTICE, "MCB create: MCB LOCAL ${SHARED(MCB_LOCAL_CONF,${MCB_CREATE_CHAN})}")
exten = mcb-ready,n,Log(NOTICE, "MCB create: Remote conference ID ${SHARED(MCB_REMOTE_CONFID,${MCB_CREATE_CHAN})}")
exten = mcb-ready,n,Log(NOTICE, "MCB create: Remote conference channel ${SHARED(MCB_REMOTE_CHANNEL,${MCB_CREATE_CHAN})}")
exten = mcb-ready,n,Log(NOTICE, "MCB create: Local leg full is ${SHARED(MCB_LOCAL_FULL,${MCB_CREATE_CHAN})}")
exten = mcb-ready,n,ExecIf($[ $[${LEN(${MCB_CREATE_CHAN})} != 0] & $["${CHANNEL}" = "${SHARED(MCB_REMOTE_CHANNEL,${MCB_CREATE_CHAN})}"] ]?Set(MCB_CHAN=${CUT(MCB_CREATE_CHAN,\;,1)}${SPRINTF(%c,59)}1):Set(MCB_CHAN=""))
exten = mcb-ready,n,ExecIf($[${LEN(${MCB_CHAN})} != 0]?Set(MCB_SHARED_CHAN=${MCB_CREATE_CHAN}))
exten = mcb-ready,n,ExecIf($[${LEN(${MCB_CHAN})} != 0]?Set(MCB_LOCAL=${SHARED(MCB_LOCAL_CONF,${MCB_CREATE_CHAN})))
exten = mcb-ready,n,ExecIf($[${LEN(${MCB_CHAN})} != 0]?Set(MCB_REMOTE=${SHARED(MCB_REMOTE_CONF,${MCB_CREATE_CHAN})))
exten = mcb-ready,n,ExecIf($[${LEN(${MCB_CHAN})} != 0]?Set(DB(MCB/${MCB_LOCAL}/MCB_REMOTE_ID)=${SHARED(MCB_REMOTE_CONFID,${MCB_CREATE_CHAN})}))
exten = mcb-ready,n,ExecIf($[${LEN(${MCB_CHAN})} != 0]?Goto(mcb-add-record,mcb_joined))

[sub-schedule-conference]
exten = s,1,GotoIf($["${ARG2}" == "call"]?call,1:kick,1)
exten = call,1,Set(schedule_id=${DB(SCHEDULE/${ARG1}/ScheduleID)})
exten = call,n,Log(NOTICE,Schedule Confno = ${ARG1} is_admin = ${schedule_is_admin})
exten = call,n,GotoIf($["${WEBCALL}" == "Conference invitation"]?call-invite,1)
exten = call,n,GotoIf($["${callfile}" != ""]?callfile,1:not-callfile,1)

exten = kick,1,Log(NOTICE,the conference is scheduled ,you can not enter into)
exten = kick,n,Playback(schedule-conference-lock)

exten = callfile,1,Log(NOTICE,this is a scheduled conference,press 1 to enter into or press 2 to hangup)
exten = callfile,n,Background(schedule-conference-found)
exten = callfile,n,WaitExten(2)
exten = callfile,n,Background(schedule-conference-found)
exten = callfile,n,WaitExten(2)
exten = callfile,n,Background(schedule-conference-found)
exten = callfile,n,WaitExten(2)
exten = callfile,n,Macro(hangupcall,)
exten = 1,1,Set(schedule_first_invite=yes)
exten = 1,n,Return()
exten = 2,1,Log(NOTICE,The call will be hang up)
exten = i,1,Goto(callfile,1)


exten = call-invite,1,Log(NOTICE,This is a member invited by the web!)
exten = call-invite,n,Set(callfile=${schedule_id})
exten = call-invite,n,Return()

exten = not-callfile,1,Set(callfile=${schedule_id})
exten = not-callfile,n,Return()


[macro-schedule-conference-count]
exten = s,1,Log(NOTICE,ARG1 = ${ARG1},ARG2 = ${ARG2})
;exten = s,n,Goto(${ARG2},1)
;exten = plus,1,Set(DB(SCHEDULE/${ARG1}/COUNT)=$[${DB(SCHEDULE/${ARG1}/COUNT)}+1])
;exten = minus,1,Set(DB(SCHEDULE/${ARG1}/COUNT)=$[${DB(SCHEDULE/${ARG1}/COUNT)}-1])
;exten = minus,n,Set(hasminus=yes)
;exten = minus,n,GotoIf($["${DB(SCHEDULE/${ARG1}/COUNT)}" == "0"]?clear,1)
;exten = clear,1,Set(room=${DB(SCHEDULE/${ARG1}/ROOM)})
;exten = clear,n,DBdel(SCHEDULE/${room}/ScheduleID)
;exten = clear,n,DBdel(SCHEDULE/${ARG1}/COUNT)
;exten = clear,n,DBdel(SCHEDULE/${ARG1}/ROOM)
;exten = clear,n,DBdel(SCHEDULE/${ARG1}/STEP)


[sub-dial-conference]
exten = s,1,Set(ARRAY(L_ARG1,L_ARG2,L_ARG3,L_ARG4,L_ARG5)=${ARG1},${ARG2},${ARG3},${ARG4},${ARG5},))
exten = s,n,Set(NOCDR=${L_ARG5})
exten = s,n,Set(__NOTSAVEOUTDATA=yes)
exten = s,n,Set(__CONF_ROOM=${L_ARG1})
exten = s,n,Macro(user-callerid,)
exten = s,n,GotoIf($[ $["${CONF_USER_INVITE}" == "yes"] && $["${HAS_JOIN}" != "invited"] && $["${MCB_CREATE_CHAN}" == ""] ]?invalid)
exten = s,n,Set(CONFBRIDGE(user,template)=default_user)
;Begin for Schedule Conference
exten = s,n,Set(schedule_id=${DB(SCHEDULE/${L_ARG1}/ScheduleID)})
exten = s,n,Set(schedule_step=${DB(SCHEDULE/${schedule_id}/STEP)})
exten = s,n,ExecIf($[ $[$["${schedule_step}" == "call"] || $["${schedule_step}" == "kick"]] && $["${EXIT_CONF}" == ""] ]?Gosub(sub-schedule-conference,s,1(${L_ARG1},${schedule_step})))
;End for Schedule Conference
exten = s,n,Set(GS_TRANSPORT=${PJSIP_HEADER(read,X-Grandstream-Transport)})
exten = s,n,ExecIf($["${GS_TRANSPORT}" != "trunk"]?SIPSetConfFocus(${L_ARG1}))
exten = s,n,SIPSetCallType(Conference)
exten = s,n,SIPSetContactUser(${L_ARG1})
exten = s,n,Set(CONNECTEDLINE(all)=UCM Conference <${CONF_ROOM}>)
exten = s,n,Set(CONTACT=${PJSIP_HEADER(read,Contact)})
exten = s,n,Set(CONTACT_NUM=${CUT(CONTACT,@,1)})
exten = s,n,Set(CONTACT_NUM=${CUT(CONTACT_NUM,:,2)})
exten = s,n(checkMcb),Log(NOTICE, "Check if call is a multi-conference bridge...")
exten = s,n,ExecIf($[ $[${LEN(${MCB_CONF_HEADER})} = 0] & $[${LEN(${PJSIP_HEADER(read,X-Grandstream-Mcb-Req)})} = 0] ]?Set(MCB_USINGMCB=0):Set(MCB_USINGMCB=1))
exten = s,n,ExecIf($[ $[${LEN(${CHANNEL})} >= 11] & $["${CHANNEL:0:11}" = "PJSIP/trunk"] ]?Set(MCB_EXTERNAL=1):Set(MCB_EXTERNAL=0))
exten = s,n,ExecIf($["${GS_TRANSPORT}" = "trunk"]?Set(MCB_EXTERNAL=1))
exten = s,n,GotoIf($["${NOCDR}" = ""]?resetted)
exten = s,n,ResetCDR()
exten = s,n,NoCDR()
exten = s,n(resetted),ExecIf($["${MCB_USINGMCB}" = "0"]?Answer())
exten = s,n(checkMcb),Log(NOTICE, "Check if call is a multi-conference bridge...")
exten = s,n,GotoIf($["${HAS_JOIN}" = "yes"]?joined)
exten = s,n,ExecIf($["${HAS_JOIN}" = "invited"]?Set(__CONF_OPTIONS=${L_ARG2}))
exten = s,n,GotoIf($["${HAS_JOIN}" = "invited"]?invited)
exten = s,n,Set(__CONF_ROOM=${L_ARG1})
exten = s,n,Set(__ORI_OPTIONS=${L_ARG2})
exten = s,n,Set(__NODEST=${L_ARG1})
exten = s,n(handleMcb),GotoIf($["${MCB_USINGMCB}" = "0"]?nonMcb)
exten = s,n,Log(NOTICE, "MCB conference: Handle MCB request")
exten = s,n,Set(MCB_ADDED=0)
exten = s,n,Set(SHARED(MCB_AUTHED)=0)
exten = s,n(split_hashes),ExecIf($[${LEN(${MCB_CONF_HEADER})} != 0]?Set(MCB_RX_PWD=${MCB_CONF_HEADER:40}))
exten = s,n,ExecIf($[${LEN(${MCB_CONF_HEADER})} != 0]?Set(MCB_REMOTE_CONFID=${MCB_CONF_HEADER:0:40}))
exten = s,n,ExecIf($[${LEN(${PJSIP_HEADER(read,X-Grandstream-Mcb-Req)})} != 0]?Set(MCB_RX_PWD=${PJSIP_HEADER(read,X-Grandstream-Mcb-Req):40}))
exten = s,n,ExecIf($[${LEN(${PJSIP_HEADER(read,X-Grandstream-Mcb-Req)})} != 0]?Set(MCB_REMOTE_CONFID=${PJSIP_HEADER(read,X-Grandstream-Mcb-Req):0:40}))
exten = s,n,GotoIf($[ $[${LEN(${MCB_RX_PWD})} = 0] & $[${LEN(${MCB_REMOTE_CONFID})} = 0] ]?exit)
exten = s,n,Set(MCB_PASS_HASH=${SHA1(${L_ARG3})})
exten = s,n,ExecIf($["${MCB_PASS_HASH}" = ""]?Set(MCB_PASS_HASH=da39a3ee5e6b4b0d3255bfef95601890afd80709))
exten = s,n,ExecIf($["${UCMDB(AAUSER/${CONF_ROOM}/PUBLIC)}" = "yes"]?Set(MCB_PASS_HASH=da39a3ee5e6b4b0d3255bfef95601890afd80709))
exten = s,n,GotoIf($["${MCB_RX_PWD}" != "${MCB_PASS_HASH}"]?bad)
exten = s,n(setPwdForMcb),Set(CONFPWD=${L_ARG3})
exten = s,n,Log(NOTICE, "MCB conference: Check for duplicate multi-conference bridge...")
exten = s,n,Set(I=1)
exten = s,n,Set(MCB_LOCK=${TRYLOCK(LOCK_MCB_${CONF_ROOM})})
exten = s,n,While($[${MCB_LOCK} < 1])
exten = s,n,Set(MCB_LOCK=${TRYLOCK(LOCK_MCB_${CONF_ROOM})})
exten = s,n,EndWhile
exten = s,n,Set(MCB_DB_REMOTE_CONFIDS=${DB(MCB/${CONF_ROOM}/REMOTE_CONFIDS)})
exten = s,n,Set(MCB_DB_REMOTE_CHANNELS=${DB(MCB/${CONF_ROOM}/REMOTE_CHANNELS)})
exten = s,n(loop),Set(TOKEN=${CUT(MCB_DB_REMOTE_CONFIDS,\,,${I})})
exten = s,n,GotoIf($["${TOKEN}" = ""]?add_record)
exten = s,n,GotoIf($["${TOKEN}" = "${MCB_REMOTE_CONFID}"]?mcb_invalid)
exten = s,n,Set(I=$[${I}+1])
exten = s,n,Goto(loop)
exten = s,n(add_record),Set(DB(MCB/${CONF_ROOM}/REMOTE_CONFIDS)=${MCB_DB_REMOTE_CONFIDS}${MCB_REMOTE_CONFID},)
exten = s,n,Set(DB(MCB/${CONF_ROOM}/REMOTE_CHANNELS)=${MCB_DB_REMOTE_CHANNELS}${CHANNEL},)
exten = s,n,Set(SHARED(MCB_AUTHED)=1)
exten = s,n,Set(MCB_LOCK=${UNLOCK(LOCK_MCB_${CONF_ROOM})})
exten = s,n,Set(MCB_LOCAL=${CONF_ROOM})
exten = s,n,ExecIf($["${DB(MCB/${CONF_ROOM}/LOCAL_IDENTITY)}" = ""]?Set(DB(MCB/${CONF_ROOM}/LOCAL_IDENTITY)=${SHA1(${CONF_ROOM}${EPOCH}${RAND(10,99)})}))
exten = s,n,SIPSetMcbResp(${DB(MCB/${CONF_ROOM}/LOCAL_IDENTITY)})
exten = s,n,ExecIf($["${MCB_CREATE_CHAN}" != ""]?Set(SHARED(MCB_REMOTE_CONFID,${MCB_CREATE_CHAN})=${DB(MCB/${CONF_ROOM}/LOCAL_IDENTITY)}))
exten = s,n,ExecIf($["${MCB_CREATE_CHAN}" != ""]?Set(SHARED(MCB_REMOTE_CHANNEL,${MCB_CREATE_CHAN})=${MCB_CREATE_CHAN:0:-1}1))
exten = s,n,Goto(good)
exten = s,n(nonMcb),GotoIf($[ $["${ORI_OPTIONS:6:1}" = "1"] || $["${schedule_first_invite}" == "yes"] ]?good)
exten = s,n,Set(hastry=0)
exten = s,n,Read(CONFPWD,conference-password-mono,,,,5)
exten = s,n,Set(CONFPWD=${FILTER(0-9,${CONFPWD})})
exten = s,n(check),Log(NOTICE, "Authentication password of conference room...")
exten = s,n,Set(hastry=$[${hastry} +1])
exten = s,n,GotoIf($[ $["${CONFPWD}" = "${L_ARG3}"] | $["${CONFPWD}" = "${L_ARG4}"] ]?good:bad)
exten = s,n(good),Log(NOTICE, "Now,Check user is conference Participant or Administrator")
;exten = s,n,ExecIf($["${CONFPWD}" = "${L_ARG4}"]?set(__CONF_OPTIONS=XaA${ORI_OPTIONS}))
exten = s,n,SIPCEIJoined(${CONF_ROOM})
;exten = s,n,Set(CONFBRIDGE(user,dsp_drop_silence)=yes)
exten = s,n,ExecIf($[ $[ $[${LEN(${L_ARG4})} != 0] && $["${CONFPWD}" = "${L_ARG4}"] ] || $["${schedule_is_admin}" = "yes"] ]?Set(isAdmin=1):Set(isAdmin=0))
exten = s,n,ExecIf($["${isAdmin}" = "1"]?Set(CONFBRIDGE(user,admin)=yes))
exten = s,n,ExecIf($["${isAdmin}" = "1"]?Set(CONFBRIDGE(user,marked)=yes))
exten = s,n,ExecIf($["${isAdmin}" = "1"]?Set(IS_ADMINISTRATOR=yes):Set(IS_ADMINISTRATOR=no))
exten = s,n,ExecIf($["${isAdmin}" = "1"]?Set(__CONF_OPTIONS=${ORI_OPTIONS}))
exten = s,n,ExecIf($["${CONFPWD}" = ""]?Set(__CONF_OPTIONS=${ORI_OPTIONS}))
exten = s,n,ExecIf($["${CONFPWD}" = "${L_ARG3}"]?Set(__CONF_OPTIONS=${ORI_OPTIONS}))
exten = s,n,ExecIf($["${MCB_USINGMCB}" = "1"]?Set(__CONF_OPTIONS=${ORI_OPTIONS:0:1})) ;only set record flag
exten = s,n,ExecIf($["${MCB_USINGMCB}" = "1"]?Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = s,n(invited),ExecIf($[$["${HAS_JOIN}" = "invited"] || $["${callfile}" != ""]]?Set(CONFBRIDGE(user,invited)=yes))
exten = s,n,Set(CONF_LOCK=${TRYLOCK(LOCK_CONF_STATUS)})
exten = s,n,While($[${CONF_LOCK} < 1])
exten = s,n,Set(CONF_LOCK=${TRYLOCK(LOCK_CONF_STATUS)})
exten = s,n,EndWhile
exten = s,n,ExecIf($["${DB(CONF_STATUS/${CONF_ROOM}/SIZE)}" = ""]?Set(ARRAY(DB(CONF_STATUS/${CONF_ROOM}/SIZE),DB(CONF_STATUS/${CONF_ROOM}/ADMINS),DB(CONF_STATUS/${CONF_ROOM}/USERS),DB(CONF_STATUS/${CONF_ROOM}/MCBS))=0,0,0,0))
exten = s,n,ExecIf($["${DB(CONF_STATUS/GLOBAL/SIZE)}" = ""]?Set(DB(CONF_STATUS/GLOBAL/SIZE)=0))
exten = s,n,ExecIf($[${DB(CONF_STATUS/GLOBAL/SIZE)} < 0]?Set(DB(CONF_STATUS/GLOBAL/SIZE)=0))
exten = s,n,GotoIf($[${DB(CONF_STATUS/GLOBAL/SIZE)} >= ${GLOBAL(CONF_SIZE_LIMIT)}]?full)
exten = s,n,ExecIf($["${CONFPWD}" = "${L_ARG4}"]?Set(USER_TYPE=ADMINS))
exten = s,n,ExecIf($["${CONFPWD}" = ""]?Set(USER_TYPE=USERS))
exten = s,n,ExecIf($["${CONFPWD}" = "${L_ARG3}"]?Set(USER_TYPE=USERS))
exten = s,n,ExecIf($["${MCB_USINGMCB}" = "1"]?Set(USER_TYPE=MCBS))
;exten = s,n,Set(DB(CONF_STATUS/${CONF_ROOM}/${USER_TYPE})=$[${DB(CONF_STATUS/${CONF_ROOM}/${USER_TYPE})}+1])
;exten = s,n,Set(DB(CONF_STATUS/${CONF_ROOM}/SIZE)=$[${DB(CONF_STATUS/${CONF_ROOM}/SIZE)}+1])
;exten = s,n,Set(DB(CONF_STATUS/GLOBAL/SIZE)=$[${DB(CONF_STATUS/GLOBAL/SIZE)}+1])
exten = s,n,Set(ARRAY(DB(CONF_STATUS/${CONF_ROOM}/${USER_TYPE}),DB(CONF_STATUS/${CONF_ROOM}/SIZE),DB(CONF_STATUS/GLOBAL/SIZE),CONF_SIZE_INCREASED)=$[${DB(CONF_STATUS/${CONF_ROOM}/${USER_TYPE})}+1],$[${DB(CONF_STATUS/${CONF_ROOM}/SIZE)}+1],$[${DB(CONF_STATUS/GLOBAL/SIZE)}+1],1)
exten = s,n,Set(CONF_LOCK=${UNLOCK(LOCK_CONF_STATUS)})
exten = s,n,ExecIf($["${MCB_USINGMCB}" = "1"]?Set(MCB_ADDED=1))
exten = s,n,ExecIf($["${MCB_USINGMCB}" = "1"]?Set(CONFBRIDGE(user,marked_as_mcb)=yes))
exten = s,n,ExecIf($["${MCB_USINGMCB}" = "1"]?Answer()) ;Only answer a MCB if all is successful
exten = s,n,Set(CONFRECORD=${UCMDB(AAUSER/${L_ARG1}/RECORD)})
;exten = s,n,ExecIf($[$["${CONFRECORD}" = "yes"] & $["${RECORD_PROMPT}" = "yes"]]?playback(dialog-being-recorded)) ;Deleted by zhywang for bug 36270 2014-12-30. The prompt tone will be played in app_meetme.c according to the value of "RECORD_PROMPT".
exten = s,n,ExecIf($["${MCB_USINGMCB}" = "1"]?Set(ENDPOINT=${CUT(CHANNEL,\-,1)}))
exten = s,n,ExecIf($["${MCB_USINGMCB}" = "1"]?Set(ENDPOINT=${CUT(ENDPOINT,\/,2)}))
exten = s,n,ExecIf($[ $["${MCB_CREATE_CHAN}" = ""] & $["${MCB_USINGMCB}" = "1"] & $["${FROM_EXTEN}" != ""] ]?SIPSubscribeExtMCB(${FROM_EXTEN},${DB(MCB/${CONF_ROOM}/LOCAL_IDENTITY)},${CONTACT_NUM},${MCB_REMOTE_CONFID},${CHANNEL},${ENDPOINT},incoming))
exten = s,n,ExecIf($[ $["${MCB_CREATE_CHAN}" = ""] & $["${MCB_USINGMCB}" = "1"] & $["${FROM_EXTEN}" = ""] ]?SIPSubscribeExtMCB(${CONF_ROOM},${DB(MCB/${CONF_ROOM}/LOCAL_IDENTITY)},${CONTACT_NUM},${MCB_REMOTE_CONFID},${CHANNEL},${ENDPOINT},incoming))
;exten = s,n,ExecIf($["${MCB_CREATE_CHAN}" = "" & "${MCB_USINGMCB}" = "1"]?SIPSubscribeExtMCB(${CONF_ROOM},${DB(MCB/${CONF_ROOM}/LOCAL_IDENTITY)},${CALLERID(num)},${MCB_REMOTE_CONFID},${CHANNEL},${ENDPOINT},incoming))
exten = s,n,ExecIf($["${MCB_CREATE_CHAN}" != ""]?SIPSubscribeMCB(${CONF_ROOM},${DB(MCB/${CONF_ROOM}/LOCAL_IDENTITY)},${CALLERID(num)},${MCB_REMOTE_CONFID})) ;Internal MCB
exten = s,n,ExecIf($["${MCB_USINGMCB}" = "1"]?Wait(5)) ;Allow time for MCB originator to add MCB so audio will not be missed
;exten = s,n,Meetme(${CONF_ROOM},${CONF_OPTIONS})
exten = s,n(joined),ExecIf($["${HAS_JOIN}" = "yes"]?Set(CONFBRIDGE(user,joined)=yes))
exten = s,n,Set(__HAS_JOIN=yes)
exten = s,n,ExecIf($["${CONF_OPTIONS:0:1}" = "1"]?Set(CONFBRIDGE(bridge,record_conference)=yes)) ;Record Conference
exten = s,n,Set(CONFBRIDGE(bridge,record_file_append)=no)
exten = s,n,Set(CONFBRIDGE(bridge,language)=${GLOBAL_LANGUAGE})
exten = s,n,Set(CONFBRIDGE(bridge,one_person_warning)=120000)
exten = s,n,Set(CONFBRIDGE(bridge,one_person_warning_interval)=120000)
exten = s,n,ExecIf($["${CONF_OPTIONS:2:1}" = "1"]?Set(CONFBRIDGE(user,quiet)=yes))               ;Quiet Mode
exten = s,n,ExecIf($["${CONF_OPTIONS:3:1}" = "1"]?Set(CONFBRIDGE(user,wait_marked)=yes))         ;Wait For Admin
exten = s,n,ExecIf($["${CONF_OPTIONS:4:1}" = "1"]?Set(CONFBRIDGE(user,announce_join_leave)=yes)) ;Announce Callers
exten = s,n,ExecIf($["${CONF_OPTIONS:7:1}" = "1"]?Set(CONFBRIDGE(user,music_on_hold_when_empty)=yes)) ;MOH
exten = s,n,ExecIf($["${CONF_OPTIONS:7:1}" = "1"]?Set(CONFBRIDGE(user,music_on_hold_class)=${CONF_OPTIONS:9:-1}))
exten = s,n,ExecIf($[ $["${MCB_USINGMCB}" = "1"] & $["${MCB_EXTERNAL}" = "0"] ]?Set(CONFBRIDGE(user,mcb_create_chan_in_use)=yes))
exten = s,n,ExecIf($[ $["${MCB_USINGMCB}" = "1"] & $["${MCB_EXTERNAL}" = "0"] ]?Set(CONFBRIDGE(user,mcb_create_chan)=${MCB_CREATE_CHAN}))
exten = s,n,ExecIf($[ $["${MCB_USINGMCB}" = "1"] & $["${MCB_EXTERNAL}" = "0"] ]?Set(CONFBRIDGE(user,mcb_type)=local))
exten = s,n,ExecIf($[ $["${MCB_USINGMCB}" = "1"] & $["${MCB_EXTERNAL}" = "1"] ]?Set(CONFBRIDGE(user,mcb_type)=external))
exten = s,n,ExecIf($["${MCB_USINGMCB}" = "1"]?Set(CONFBRIDGE(user,mcb_remote_conf_id)=${MCB_REMOTE_CONFID}))
exten = s,n,ExecIf($["${MCB_USINGMCB}" = "1"]?Set(CONFBRIDGE(user,talk_detection_events)=no))
exten = s,n,ExecIf($["${MCB_USINGMCB}" = "0"]?Set(CONFBRIDGE(user,mcb_type)=none))
;Enable Caller Menu  &  Enable User Invite
exten = s,n,ExecIf($["${IS_ADMINISTRATOR}" == ""]?Set(IS_ADMINISTRATOR=no))
exten = s,n,ExecIf($[ $[ "${IS_ADMINISTRATOR}" = "yes" ] | $[ "${CONF_OPTIONS:5:1}" = "1" ] ]?Set(CONFBRIDGE(user,can_invite)=yes))
exten = s,n,ExecIf($[ $[ "${CONF_OPTIONS:1:1}" = "1" ] & $[ "${IS_ADMINISTRATOR}" = "yes" ] ]?Set(confBridge_Menu=ucm_AdminCallerMenu_UserInviteMenu))
exten = s,n,ExecIf($[ $[ "${CONF_OPTIONS:1:1}" = "1" ] & $[ "${IS_ADMINISTRATOR}" = "no" ] & $[ "${CONF_OPTIONS:5:1}" = "1" ] ]?Set(confBridge_Menu=ucm_UserCallerMenu_UserInviteMenu))
exten = s,n,ExecIf($[ $[ "${CONF_OPTIONS:1:1}" = "1" ] & $[ "${IS_ADMINISTRATOR}" = "no" ] & $[ "${CONF_OPTIONS:5:1}" = "0" ] ]?Set(confBridge_Menu=ucm_UserCallerMenu))
exten = s,n,ExecIf($[ $[ "${CONF_OPTIONS:1:1}" = "0" ] & $[ $[ "${IS_ADMINISTRATOR}" = "yes" ] | $[ "${CONF_OPTIONS:5:1}" = "1" ] ] ]?Set(confBridge_Menu=ucm_UserInviteMenu))
exten = s,n,ConfBridge(${CONF_ROOM},,,${confBridge_Menu})
exten = s,n,Macro(hangupcall,)
;exten = s,n(joined),Meetme(${CONF_ROOM},${CONF_OPTIONS}J)
;exten = s,n,Macro(hangupcall,)
exten = s,n(full),Set(CONF_LOCK=${UNLOCK(LOCK_CONF_STATUS)})
exten = s,n,ExecIf($["${MCB_USINGMCB}" = "0"]?Playback(im-sorry&conf-full)) ;Do not Answer/Playback if MCB - prevent problems with Dial split channels
exten = s,n,SIPTerminatedNotify(${CONF_ROOM})
exten = s,n,Macro(hangupcall,)
exten = s,n(bad),Log(WARNING, "Authentication failured...")
exten = s,n,Wait(1)
exten = s,n,GotoIf($[${hastry} >= 3]?thankyou)
exten = s,n,GotoIf($["${MCB_USINGMCB}" = "1"]?hangup)
exten = s,n,Log(NOTICE, "sub-dial-conf: Asking for Password again...")
exten = s,n,Read(CONFPWD,auth-incorrect,,,,5)
exten = s,n,Set(CONFPWD=${FILTER(0-9,${CONFPWD})})
exten = s,n,Goto(check)
exten = s,n(thankyou),playback(sorry-cant-let-you-do-that&auth-thankyou)
exten = s,n,SIPTerminatedNotify(${CONF_ROOM})
exten = s,n(hangup),Macro(hangupcall,)
exten = s,n(mcb_invalid),Set(MCB_LOCK=${UNLOCK(LOCK_MCB_${CONF_ROOM})})
exten = s,n(invalid),ExecIf($["${CONF_MENU_CHAN}" != ""]?Set(ARRAY(SHARED(CONF_MENU_INVITE_RESULT,${CONF_MENU_CHAN}),EXIT)=failed,yes):Set(EXIT=yes))
exten = s,n,Macro(hangupcall,)
exten = h,1,GotoIf($["${MCB_USINGMCB}" = "1"]?mcb-connect,h,1)
exten = h,n,GotoIf($["${HAS_JOIN}" != "yes" && "${CONF_SIZE_INCREASED}" != "1"]?exit)
exten = h,n,GotoIf($["${EXIT}" == "yes" && "${CONF_SIZE_INCREASED}" != "1"]?exit)
exten = h,n,Set(CONF_LOCK=${TRYLOCK(LOCK_CONF_STATUS)})
exten = h,n,While($[${CONF_LOCK} < 1])
exten = h,n,Set(CONF_LOCK=${TRYLOCK(LOCK_CONF_STATUS)})
exten = h,n,EndWhile
exten = h,n,ExecIf($["${MCB_CREATE_CHAN}" != ""]?SIPUnsubscribeMCB(${DB(MCB/${CONF_ROOM}/LOCAL_IDENTITY)},${MCB_REMOTE_CONFID}))
exten = h,n,ExecIf($["${CONFPWD}" = "${L_ARG4}"]?Set(USER_TYPE=ADMINS))
exten = h,n,ExecIf($["${CONFPWD}" = ""]?Set(USER_TYPE=USERS))
exten = h,n,ExecIf($["${CONFPWD}" = "${L_ARG3}"]?Set(USER_TYPE=USERS))
exten = h,n,Set(DB(CONF_STATUS/${CONF_ROOM}/${USER_TYPE})=$[${DB(CONF_STATUS/${CONF_ROOM}/${USER_TYPE})}-1])
exten = h,n,Set(DB(CONF_STATUS/${CONF_ROOM}/SIZE)=$[${DB(CONF_STATUS/${CONF_ROOM}/SIZE)}-1])
exten = h,n,Set(DB(CONF_STATUS/GLOBAL/SIZE)=$[${DB(CONF_STATUS/GLOBAL/SIZE)}-1])
exten = h,n,Set(CONF_LOCK=${UNLOCK(LOCK_CONF_STATUS)})
exten = h,n(exit),Macro(hangupcall,)

[macro-outisbusy]
exten = s,1,Progress
exten = s,n,GotoIf($["${EMERGENCYROUTE}" = "yes"]?emergency,1)
exten = s,n,GotoIf($["${INTRACOMPANYROUTE}" = "yes"]?intracompany,1)
exten = s,n,GotoIf($["${CHANNEL(hangupsipcode)}" != "0"]?sipout,1)
exten = s,n,Set(PROMPT_TONE=${IF($["${UCMDB_EXISTS(PROMPT_TONE/TRUNK_BUSY)}" = "1"]?${DB_RESULT}:trunk-busy)})
exten = s,n,ExecIf($["${CHANNEL(hangupcause)}" == "30"]?Set(PROMPT_TONE=${IF($["${UCMDB_EXISTS(PROMPT_TONE/OUT_OF_SERVICE)}" = "1"]?${DB_RESULT}:out-of-service)})) 
exten = s,n,Playback(silence/1&${PROMPT_TONE},noanswer))
;exten = s,n,Playback(all-circuits-busy-now&pls-try-call-later, noanswer)
exten = s,n,GotoIf($["${CUT(CHANNEL(name),@,2):0:18}" == "from-internal-xfer"]?hangup)
exten = s,n,Congestion(20)
exten = s,n(hangup),Hangup
exten = sipout,1,Set(SIP_CODE=${CHANNEL(hangupsipcode)})
exten = sipout,n,Set(PROMPT_TONE=${IF($["${UCMDB_EXISTS(SIPTK/OUT_TONE/${SIP_CODE})}" = "1"]?${DB_RESULT}:sip-trunk-out-busy)})
exten = sipout,n,Playback(${PROMPT_TONE}, noanswer)
exten = intracompany,1,Playback(all-circuits-busy-now&pls-try-call-later, noanswer)
exten = intracompany,n,Congestion(20)
exten = intracompany,n,Hangup
exten = emergency,1,Playback(all-circuits-busy-now&pls-try-call-later)
exten = emergency,n,Congestion(20)
exten = emergency,n,Hangup

[macro-record-check]
exten = s,1,GotoIf($["${ARG1}" == "StartMonitor"]?StartMonitor,1)
exten = s,n,ExecIf($["${IS_SFU}" == "yes"]?MacroExit())
exten = s,n,ExecIf($["${CDR(action_type):0:15}" == "VIDEOCONFERENCE"]?MacroExit())
exten = s,n,ExecIf($["${RECORD_VMENU}" == "ON"]?MacroExit())
exten = s,n,Set(USER_LIST=${ARG1})
exten = s,n,ExecIf($["${ARG3}" != "" && "${ARG3}" != "i"]?Set(USER_LIST=${ARG3}))
exten = s,n,Set(TRUNK_IND=${ARG2})
exten = s,n,Set(REC_ENABLE=no)
exten = s,n,GotoIf($["${CONF_ROOM}" != ""]?final)
exten = s,n,ExecIf($[ "${AUTO_RECORDING}" == "ON" && "${FAILOVER}" == "yes"]?Set(TWICE_RECORD=yes))
exten = s,n,GotoIf($["${BLINDTRANSFER}" = ""]?check)
exten = s,n,Set(MIXAUTORECORDING=)
exten = s,n,Set(CDR(RECORD_FILES)=NO_FILE)
;exten = s,n,ResetCDR(w)
exten = s,n,Set(AUTO_RECORDING=)
exten = s,n,StopMixMonitor()
exten = s,n,GotoIf($[ "${CHANNEL(channeltype)}" == "PJSIP"  ]?:dahdi)
exten = s,n,Set(CHANNEL_NAME=${CHANNEL(name)})
exten = s,n,Noop(${CHANNEL_NAME:6:5})
exten = s,n,GotoIf($[ "${CHANNEL_NAME:6:5}" == "trunk"]?tr)
exten = s,n,Set(PJSIP_NUM_TMP=${CUT(CHANNEL(name),/,2)})
exten = s,n,Set(PJSIP_NUM=${CUT(PJSIP_NUM_TMP,,1)})
exten = s,n,Set(LIST_TMP=${CUT(USER_LIST,,2)})
exten = s,n,Set(USER_LIST=${PJSIP_NUM}-${LIST_TMP})
exten = s,n,GotoIf($[ "${CHANNEL(channeltype)}" == "PJSIP"  ]?check)
exten = s,n(dahdi),GotoIf($[ "${CHANNEL(channeltype)}" != "DAHDI"  ]?tr)
exten = s,n,Set(DAHDI_NUM_TMP=${CUT(CHANNEL(name),/,2)})
exten = s,n,Set(DAHDI_NUM=${CUT(DAHDI_NUM_TMP,,1)})
exten = s,n,ExecIf($[ "${UCMDB(TRUNK/DAHDI_${DAHDI_NUM}/AUTORECORD)}" == "yes" ]?Set(REC_ENABLE=yes))
exten = s,n,GotoIf($[ "${CHANNEL(channeltype)}"  == "DAHDI" ]?check)
exten = s,n(tr),Set(TRUNK_NUM_TMP=${CUT(CHANNEL(name),_,2)})
exten = s,n,Set(TRUNK_NUM=${CUT(TRUNK_NUM_TMP,,1)})
exten = s,n,ExecIf($[ "${UCMDB(TRUNK/SIP_${TRUNK_NUM}/AUTORECORD)}" == "yes" ]?Set(REC_ENABLE=yes))   
exten = s,n,ExecIf($[ "${UCMDB(TRUNK/IAX2_${TRUNK_NUM}/AUTORECORD)}" == "yes" ]?Set(REC_ENABLE=yes))
exten = s,n(check),Log(NOTICE, "Check auto record settings.")
exten = s,n,ExecIf($["${RINGGROUP_REC}" == "yes"]?Set(REC_ENABLE=yes))
exten = s,n,ExecIf($["${TRUNK_REC}" = "yes" & "${FAILOVER}" != "yes"]?Set(REC_ENABLE=yes))
exten = s,n,GotoIf($["${REC_ENABLE}" = "yes"]?final)
exten = s,n,ExecIf($["${OUT_AUTORECORD_${TRUNK_IND}}" = "yes"]?Set(REC_ENABLE=yes))
exten = s,n,ExecIf($["${REC_ENABLE}" = "yes"]?Set(_TRUNK_REC=yes))
exten = s,n,Set(IS_FAILOVER=${FAILOVER})
exten = s,n,Set(FAILOVER=no)
exten = s,n,GotoIf($["${OUT_AUTORECORD_${TRUNK_IND}}" = "yes"]?final)
exten = s,n,GotoIf($["${FROM_TRUNK}" = "yes"]?check_trunk:norext)
exten = s,n(check_trunk),Log(NOTICE, "inbound call from trunk.")
exten = s,n,GotoIf($["${CHANNEL(channeltype)}" = "PJSIP"]?sip_trunk)
exten = s,n,GotoIf($["${CHANNEL(channeltype)}" = "DAHDI"]?dahdi_trunk)
exten = s,n(sip_trunk),Set(TNAME=${CUT(CHANNEL(name),,1)})
exten = s,n,Set(TRUNK_IND=${CUT(TNAME,_,2)})
exten = s,n,Set(REC_ENABLE=${UCMDB(TRUNK/SIP_${TRUNK_IND}/AUTORECORD)})
exten = s,n,ExecIf($["${REC_ENABLE}" = "yes"]?Set(_TRUNK_REC=yes))
exten = s,n,GotoIf($["${REC_ENABLE}" = "yes"]?final:norext)
exten = s,n(dahdi_trunk),Set(TRUNK_IND=${CHANNEL(dahdi_channel)})
exten = s,n,Set(REC_ENABLE=${UCMDB(TRUNK/DAHDI_${TRUNK_IND}/AUTORECORD)})
exten = s,n,ExecIf($["${REC_ENABLE}" = "yes"]?Set(_TRUNK_REC=yes))
exten = s,n,GotoIf($["${REC_ENABLE}" = "yes"]?final:norext)
exten = s,n(norext),Set(CALLEE_NUM=${CUT(USER_LIST,,2)})
exten = s,n,Set(EN_BOTH=${UCMDB(AAUSER/${CALLEE_NUM}/EN_BOTH)})
exten = s,n,Set(FROM-EXTEN=${UCMDB(AAUSER/${CALLEE_NUM}/EXTERNAL_NUMBER)})
exten = s,n,ExecIf($["${FROM-EXTEN}" != "" & "${EN_BOTH}" == "yes" & $["${MATCHTIME}" == "1"]]?Set(__TRANSPARENTSDP=no))
exten = s,n,Set(BUF=${RECORD_CHECK(${USER_LIST})})
exten = s,n,ExecIf($["${DISA_TRUNKREC}" == "yes"]?Set(REC_ENABLE=yes))
exten = s,n(break),Goto(final)
exten = s,n(final),GotoIf($["${REC_ENABLE}" = "yes"]?record)
exten = s,n,GotoIf($["${MIXAUTORECORDING}" == "ON" & "${QUEUE-TIMEOUT}" == "yes"]?record)
exten = s,n,MacroExit()
exten = s,n(record),Log(NOTICE, "Auto record is enabled.")
;exten = s,n,Set(CALLFILENAME=auto-${STRFTIME(${EPOCH},,%s)}-${CDR(src)}-${CDR(dst)})
exten = s,n,ExecIf($["${RECORD_PROMPT}" = "yes"]?Progress())
exten = s,n,Set(CHANNELTYPE=${CHANNEL(channeltype)})
exten = s,n,GotoIf($["${TWICE_RECORD}" == "yes"]?twice_rec)
exten = s,n,ExecIf($["${UCMDB(AAUSER/${AAUSER}/language)}" != ""]?Set(CHANNEL(language)=${UCMDB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = s,n,ExecIf($["${IVR_LANGUAGE}" != ""]?Set(CHANNEL(language)=${IVR_LANGUAGE}))
exten = s,n(twice_rec),Set(TWICE_RECORD=no)
exten = s,n,GotoIf($[$["${CF_USER}" != ""] && $["${CF_NOPLAY}" == "yes"]]?skip_record_prompt)
exten = s,n,GotoIf($[$["${IN_RINGGROUP}" == "yes"] && $["${CF_NOPLAY}" == "yes"] ]?skip_record_prompt)
exten = s,n,GotoIf($[$["${RECORD_PROMPT}" = "yes"] & $["${CHANNELTYPE}" != "DAHDI"] & $["${HAVE_PROMPTED}" != "yes"]]?:check_record_prompt)
exten = s,n,Playback(dialog-being-recorded,noanswer)
exten = s,n,Set(HAVE_PROMPTED=yes)
exten = s,n(check_record_prompt),GotoIf($[$["${RECORD_PROMPT}" = "yes"] & $["${CHANNELTYPE}" == "DAHDI"] & $["${HAVE_PROMPTED}" != "yes"]]?:skip_record_prompt)
exten = s,n,Set(CDR(special_action_type)=NOTANSWER)
exten = s,n,Playback(dialog-being-recorded,))
exten = s,n,Set(HAVE_PROMPTED=yes)
exten = s,n(skip_record_prompt),Set(CF_NOPLAY=yes)
exten = s,n,Set(AUTO_RECORDING=ON)
exten = s,n,Set(_MIXAUTORECORDING=${AUTO_RECORDING})
exten = s,n,Set(CHECK_USER_LIST=${REPLACE(USER_LIST,*,\*)})
exten = s,n,ExecIf($["${CDR(dst)}" = "s" | "${BLINDTRANSFER}" != "" ]?Set(CALLFILENAME=${STRFTIME(${EPOCH},,%Y-%m)}/auto-${STRFTIME(${EPOCH},,%s)}-${CHECK_USER_LIST}):Set(CALLFILENAME=${STRFTIME(${EPOCH},,%Y-%m)}/auto-${STRFTIME(${EPOCH},,%s)}-${CDR(src)}-${CDR(dst)}))
;exten = s,n,ExecIf($["${CDR(dst)}" = "s" | "${BLINDTRANSFER}" != "" ]?Set(CALLFILENAME=auto-${STRFTIME(${EPOCH},,%s)}-${USER_LIST}):Set(CALLFILENAME=auto-${STRFTIME(${EPOCH},,%s)}-${CDR(src)}-${CDR(dst)}))
exten = s,n,GotoIf($["${FROM-QUEUE}" == "yes" & "${UCMDB(AAUSER/${AAUSER}/AUTORECORD)}" != "yes"]?set_nofile)
exten = s,n,GotoIf($[ "${CDR_RECORD_NO_FILE}" != "yes" ]?record_file:no_file)
exten = s,n(no_file),Set(CDR(RECORD_FILES)=${CALLFILENAME}.${MIXMON_FORMAT}@)
exten = s,n,Goto(set_nofile)
exten = s,n(record_file),GotoIf($[$["${TRUNK_REC}" == "yes" | "${FROM-QUEUE}" != "yes" | "${UCMDB(AAUSER/${AAUSER}/AUTORECORD)}" == "yes" | "${QUEUE-TIMEOUT}" == "yes"] && "${IS_FAILOVER}" == "yes" && ${CDR(RECORD_FILES)} != ""]?one_file_name:normal_file_name)
exten = s,n(normal_file_name),ExecIf($["${TRUNK_REC}" == "yes" | "${FROM-QUEUE}" != "yes" | "${UCMDB(AAUSER/${AAUSER}/AUTORECORD)}" == "yes" | "${QUEUE-TIMEOUT}" == "yes"]?Set(CDR(RECORD_FILES)=${CDR(RECORD_FILES)}${CALLFILENAME}.${MIXMON_FORMAT}@))
exten = s,n(one_file_name),Set(CDR(RECORD_FILES)=${CALLFILENAME}.${MIXMON_FORMAT}@)
exten = s,n(set_nofile),Set(CDR_RECORD_NO_FILE=no)
exten = s,n,Set(_MIXFILENAME=${CALLFILENAME})
exten = s,n,GotoIf($["${FROM-QUEUE}" == "yes" & "${TRUNK_REC}" == "yes" ]?StartMonitor,1)
exten = s,n,GotoIf($["${FROM-QUEUE}" == "yes" & "${UCMDB(AAUSER/${AAUSER}/AUTORECORD)}" == "yes"]?StartMonitor,1)
exten = s,n,GotoIf($["${FM_ENABLE}" == "yes"]?StartMonitor,1)
exten = StartMonitor,1,ExecIf($[$["${CHANNEL(name):0:11}" == "PJSIP/trunk" | "${CHANNEL(name):0:8}" == "DAHDI/i3" | "${CHANNEL(name):0:7}" == "DAHDI/o"] && $[$["${RINGBOTH_RECORDFILENAME}" != ""] && $["${IN_RINGGROUP}" != "yes"]] ]?Set(MIXFILENAME=${RINGBOTH_RECORDFILENAME}))
exten = StartMonitor,n,ExecIf($[$[ "${MIXFILENAME}" != "" ] && $["${DO_FORWARD}" == "" || "${TRUNK_REC}" == "yes"]]?MixMonitor(${MIXMON_DIR}/${MIXFILENAME}.${MIXMON_FORMAT},,${MIXMON_POST}))

[macro-receiveFax]
exten = s,1,Log(NOTICE, "--------receive fax----------")
exten = s,n,ExecIf($["${FAXDIR}" == ""]?set(FAXDIR=/app/asterisk/var/spool/asterisk/fax/))
exten = s,n,ExecIf($["${FAXDATE}" == ""]?set(FAXDATE=${STRFTIME(${EPOCH},,%Y%m%d-%H%M%S)}))
exten = s,n,ExecIf($["${RECEIVEEXTEN}" = ""]?set(RECEIVEEXTEN=${EXTTOCALL}))
exten = s,n,ExecIf($["${RECEIVEEXTEN}" = ""]?set(RECEIVEEXTEN=${FOLLOWMETOCALL}))
exten = s,n,Set(CDR(special_action_type)="INBOUND_FAX")
exten = s,n,GotoIf($["${RECEIVEEXTEN}" = ""]?set_again:normal)
exten = s,n(set_again),set(RECEIVEEXTEN=${CALLERID(dnid)})
exten = s,n(normal),set(FAXNAME=${CALLERID(num)}-${RECEIVEEXTEN}-${FAXDATE}-${UNIQUEID}.tiff)
exten = s,n,ExecIf($["${FAXFILE}" == ""]?set(FAXFILE=${FAXDIR}${FAXNAME}))
exten = s,n,Set(CHANNEL(session)=${CALLERID(num)})
exten = s,n,set(CDR(action_type)=VFAX)
exten = s,n,ExecIf($["${CDR(action_type)}" = "VFAX"]?Set(CDR(RECORD_FILES)=NO_FILE))
exten = s,n,set(CDR(app_callee)=${RECEIVEEXTEN})
exten = s,n,ExecIf($["${FAXMAIL}" = ""]?set(FAXMAIL=${UCMDB(AAUSER/${RECEIVEEXTEN}/EMAIL)}))
exten = s,n,ExecIf($["${FAXMAIL}" = ""]?set(FAXMAIL=${UCMDB(FAX/DEFAULT/EMAIL)}))
exten = s,n,ExecIf($["${FAXMAIL}" = ""]?set(FAXMAIL=${UCMDB(AAUSER/${Callee_NUM}/EMAIL)}))
exten = s,n,Log(NOTICE, "Disable FAX detection first");
exten = s,n,Set(FAXOPT(faxdetect)=no)
exten = s,n,receiveFax(${FAXFILE},f)
exten = s,n,Log(NOTICE, "${FAXSTATUS} --- ${FAXERROR}")
exten = s,n,Log(NOTICE, "pages:  --- ${FAXOPT(pages)}")
exten = s,n,Log(NOTICE, "filename:  --- ${FAXOPT(filename)}")
exten = s,n,hangup

[macro-local-callingrule-cid-0.1]
exten = s,1,Set(CALLERID(all)=${IF($[${LEN(${ARG4})} > 2]?${ARG4}:)})
exten = s,n,Goto(${ARG1},${ARG2},${ARG3})

[macro-trunkdial-failover-0.3]
exten = s,1,GotoIf($[${LEN(${FMCIDNUM})} > 6]?1-fmsetcid,1)
exten = s,n,GotoIf($[${LEN(${GLOBAL_OUTBOUNDCIDNAME})} > 1]?1-setgbobname,1)
exten = s,n,ExecIf($[${LEN(${CID_${CALLERID(num)}})} > 2]?Set(CALLERID(num)=${CID_${CALLERID(num)}}))
exten = s,n,ExecIf($[${LEN(${ARG5})} > 2]?Set(CALLERID(all)=${ARG5}))
exten = s,n,GotoIf($[${LEN(${CALLERID(num)})} > 6]?1-dial,1)
exten = s,n,ExecIf($[${LEN(${GLOBAL_OUTBOUNDCID})} > 2]?Set(CALLERID(num)=${GLOBAL_OUTBOUNDCID}))
exten = s,n,ExecIf($[${LEN(${CID_${ARG3}})} > 6]?Set(CALLERID(all)=${CID_${ARG3}}))
exten = s,n,ExecIf($[${LEN(${ARG5})} > 2]?Set(CALLERID(all)=${ARG5}))
exten = s,n,Goto(1-dial,1)
exten = 1-setgbobname,1,Set(CALLERID(name)=${GLOBAL_OUTBOUNDCIDNAME})
exten = 1-setgbobname,n,Goto(s,3)
exten = 1-fmsetcid,1,Set(CALLERID(num)=${FMCIDNUM})
exten = 1-fmsetcid,n,Set(CALLERID(name)=${FMCIDNAME})
exten = 1-fmsetcid,n,Goto(s,4)
exten = 1-dial,1,Dial(${ARG1})
exten = 1-dial,n,Gotoif(${LEN(${ARG2})} > 0 ?1-${DIALSTATUS},1:1-out,1)
exten = 1-CHANUNAVAIL,1,Dial(${ARG2})
exten = 1-CHANUNAVAIL,n,Hangup()
exten = 1-CONGESTION,1,Dial(${ARG2})
exten = 1-CONGESTION,n,Hangup()
exten = 1-out,1,Hangup()

[macro-member-loginlogout]
exten = s,1,Verbose(2, Logging queue member in or out of the request queue)
exten = s,n,Set(thisQueue=${thisQueueXtn})
exten = s,n,Set(queueMembers=${QUEUE_MEMBER_LIST(${thisQueue})})
exten = s,n,Set(field=1)
exten = s,n,Set(logged_in=0)
exten = s,n,Set(thisQueueMember=${CUT(queueMembers,\,,${field})})
exten = s,n,While($[${EXISTS(${thisQueueMember})}])
exten = s,n,GotoIf($["${thisQueueMember}" != "${thisActiveMember}"]?check_next)
exten = s,n,Set(logged_in=1)
exten = s,n,ExitWhile()
exten = s,n(check_next),Set(field=$[${field} + 1])
exten = s,n,Set(thisQueueMember=${CUT(queueMembers,\,,${field})})
exten = s,n,EndWhile()
exten = s,n,MacroIf($[${logged_in} = 0]?q_login:q_logout)

[macro-q_login]
exten = s,1,Verbose(2, Logging ${thisActiveMember} into the ${thisQueue} queue)
exten = s,n,AddQueueMember(${thisQueue},${thisActiveMember})
exten = s,n,Playback(silence/1)
exten = s,n,ExecIf($["${AQMSTATUS}" = "ADDED"]?Playback(agent-loginok):Playback(an-error-has-occurred))

[macro-q_logout]
exten = s,1,Verbose(2, Logged ${thisActiveMember} out of ${thisQueue} queue)
exten = s,n,RemoveQueueMember(${thisQueue},${thisActiveMember})
exten = s,n,Playback(silence/1)
exten = s,n,ExecIf($["${RQMSTATUS}" = "REMOVED"]?Playback(agent-loggedoff):Playback(an-error-has-occurred))

[ccm-processing]
exten = _X.,1,Set(CONF_ROOM=${EXTEN})
exten = _X.,n,Set(ROLE=${MESSAGE_DATA(ROLE)})
exten = _X.,n,Set(CCM_LOCK=${LOCK(LOCK_CCM_${CONF_ROOM})})
exten = _X.,n,While($[${CCM_LOCK} < 1])
exten = _X.,n,Set(CCM_LOCK=${LOCK(LOCK_CCM_${CONF_ROOM})})
exten = _X.,n,EndWhile
exten = _X.,n,While($["${DB(CCM/${CONF_ROOM}/INVITING)}" != ""])
exten = _X.,n,Wait(1)
exten = _X.,n,EndWhile
exten = _X.,n,Set(DB(CCM/${CONF_ROOM}/ORIG_CHANNEL)=${MESSAGE_DATA(ORIG_CHANNEL)})
exten = _X.,n,GotoIf($["${MESSAGE_DATA(CCM_ACTION)}" = "KICK"]?kick,1)
exten = _X.,n,GotoIf($["${MESSAGE_DATA(CCM_ACTION)}" = "MUTE"]?mute,1)
exten = _X.,n,GotoIf($["${MESSAGE_DATA(CCM_ACTION)}" = "UNMUTE"]?unmute,1)
exten = _X.,n,GotoIf($["${MESSAGE_DATA(CCM_ACTION)}" = "LOCK"]?lock,1)
exten = _X.,n,GotoIf($["${MESSAGE_DATA(CCM_ACTION)}" = "UNLOCK"]?unlock,1)
exten = _X.,n,GotoIf($["${MESSAGE_DATA(CCM_ACTION)}" = "MCB"]?mcb,1)
exten = _X.,n,GotoIf($["${MESSAGE_DATA(CCM_ACTION)}" = "INVITE"]?invite,1)
exten = _X.,n,GotoIf($["${MESSAGE_DATA(CCM_ACTION)}" = "DROP"]?drop,1)
exten = _X.,n,Goto(exit,1)
exten = kick,1,GotoIf($[${ROLE} < 3]?exit,1)
exten = kick,n,GotoIf($["${MESSAGE_DATA(VAR0)}" != "ALL"]?user)
exten = kick,n,MeetmeAdmin(${CONF_ROOM},Q)
exten = kick,n,Goto(exit,1)
exten = kick,n(user),ExecIf($[${REGEX("[0-9]{${LEN(${MESSAGE_DATA(VAR0)})}}" ${MESSAGE_DATA(VAR0)})}]?MeetmeAdmin(${CONF_ROOM},q,${MESSAGE_DATA(VAR0)))
exten = kick,n,Goto(exit,1)
exten = mute,1,GotoIf($[${ROLE} < 3]?exit,1)
exten = mute,n,GotoIf($["${MESSAGE_DATA(VAR0)}" != "ALL"]?user)
exten = mute,n,MeetmeAdmin(${CONF_ROOM},N)
exten = mute,n,Goto(exit,1)
exten = mute,n(user),ExecIf($[${REGEX("[0-9]{${LEN(${MESSAGE_DATA(VAR0)})}}" ${MESSAGE_DATA(VAR0)})}]?MeetmeAdmin(${CONF_ROOM},B,${MESSAGE_DATA(VAR0)))
exten = mute,n,Goto(exit,1)
exten = unmute,1,GotoIf($[${ROLE} < 3]?exit,1)
exten = unmute,n,GotoIf($["${MESSAGE_DATA(VAR0)}" != "ALL"]?user)
exten = unmute,n,MeetmeAdmin(${CONF_ROOM},n)
exten = unmute,n,Goto(exit,1)
exten = unmute,n(user),ExecIf($[${REGEX("[0-9]{${LEN(${MESSAGE_DATA(VAR0)})}}" ${MESSAGE_DATA(VAR0)})}]?MeetmeAdmin(${CONF_ROOM},b,${MESSAGE_DATA(VAR0)))
exten = unmute,n,Goto(exit,1)
exten = lock,1,GotoIf($[${ROLE} < 3]?exit,1)
exten = lock,n,MeetmeAdmin(${CONF_ROOM},L)
exten = lock,n,Goto(exit,1)
exten = unlock,1,GotoIf($[${ROLE} < 3]?exit,1)
exten = unlock,n,MeetmeAdmin(${CONF_ROOM},l)
exten = unlock,n,Goto(exit,1)
exten = mcb,1,GotoIf($[${ROLE} < 2]?exit,1)
exten = mcb,n,GotoIf($[${REGEX("[0-9]{${LEN(${MESSAGE_DATA(VAR0)})}}" ${MESSAGE_DATA(VAR0)})}]?:exit,1)
exten = mcb,n,GotoIf($["${MESSAGE_DATA(VAR0)}" = "${CONF_ROOM}"]?exit,1)
exten = mcb,n,GotoIf($[${LEN(${MESSAGE_DATA(VAR1)})} = 0]?:has_pass)
exten = mcb,n,Set(PASS_VALUE=da39a3ee5e6b4b0d3255bfef95601890afd80709)
exten = mcb,n,Goto(set_pass)
exten = mcb,n(has_pass),GotoIf($[${REGEX("[0-9a-f]+" ${MESSAGE_DATA(VAR1)})} & ${LEN(${MESSAGE_DATA(VAR1)})} = 40]?:exit,1)
exten = mcb,n,Set(PASS_VALUE=${MESSAGE_DATA(VAR1)})
exten = mcb,n(set_pass),Set(DB(CCM/${CONF_ROOM}/INVITE_DATA)=${PASS_VALUE})
exten = mcb,n,Set(DB(CCM/${CONF_ROOM}/INVITING)=1)
exten = mcb,n,Originate(LOCAL/${MESSAGE_DATA(VAR0)}-${CONF_ROOM}@mcb-create,exten,mcb-connect,${MESSAGE_DATA(VAR0)}-${CONF_ROOM},1)
exten = mcb,n,Goto(exit,1)
exten = invite,1,GotoIf($[${ROLE} < 2]?exit,1)
exten = invite,n,GotoIf($[${REGEX("[0-9]{${LEN(${MESSAGE_DATA(VAR0)})}}" ${MESSAGE_DATA(VAR0)})} & ${REGEX("[0-1]" ${MESSAGE_DATA(VAR1)})} & ${LEN(${MESSAGE_DATA(VAR1)})} = 1]?:exit,1)
exten = invite,n,Set(DB(CCM/${CONF_ROOM}/INVITE_DATA)=${MESSAGE_DATA(VAR1)})
exten = invite,n,Set(DB(CCM/${CONF_ROOM}/INVITING)=1)
exten = invite,n,Originate(LOCAL/${MESSAGE_DATA(VAR0)}-${CONF_ROOM}@ccm-invite,exten,conf-tools,conf-inv,2,0)
exten = invite,n,Goto(exit,1)
exten = drop,1,GotoIf($[${ROLE} < 2]?exit,1)
exten = drop,n,MeetmeAdmin(${CONF_ROOM},D)
exten = drop,n,Goto(exit,1)
exten = exit,1,Set(CCM_LOCK=${UNLOCK(LOCK_CCM_${CONF_ROOM})})
exten = exit,n,Set(DB(CCM/${CONF_ROOM}/INVITING)=)
exten = exit,n,Hangup()

[ccm-invite]
exten = _X.,1,NoOp("ZAKU DEBUG ---> CCM INVITE USER ORIGINATE PROCESSING")
exten = _X.,n,Set(__CONF_ROOM=${CUT(EXTEN,-,2)})
exten = _X.,n,Set(__ORIG_CHANNEL=${DB(CCM/${CONF_ROOM}/ORIG_CHANNEL)})
exten = _X.,n,Set(CALLERID(all)=Meeting Invitation <${CONF_ROOM}>)
exten = _X.,n,Set(__IVR_SUPPORT=no)
exten = _X.,n,Set(__CEI_SUPPORT=yes)
;exten = _X.,n,ExecIf($["${DB(CCM/${CONF_ROOM}/INVITE_DATA)}" = "0"]?Set(__CONF_INV_CONFIRM=no):Set(__CONF_INV_CONFIRM=yes))
;exten = _X.,n,Set(DB(CCM/${CONF_ROOM}/INVITE_DATA)=)
exten = _X.,n,Set(__ORI_OPTIONS=${IMPORT(${ORIG_CHANNEL},ORI_OPTIONS)})
exten = _X.,n,Set(__HAS_JOIN=yes)
exten = _X.,n,Set(__NODEST=${CONF_ROOM})
exten = _X.,n,Set(__CONF_USER_INVITE=yes)
exten = _X.,n,Dial(Local/${CUT(EXTEN,-,1)}@from-internal,30000)

[macro-fax-gateway]
exten = s,1,Verbose(2, "Check if the FAX gateway is enabled or not")
exten = s,n,Set(Callee_NUM=${ARG1})
exten = s,n,Set(Caller_PROTOCOL=${CUT(CHANNEL,/,1)})
exten = s,n,Set(Caller_STR=${CUT(CHANNEL,/,2)})
exten = s,n,Set(Caller_NUM=${CUT(Caller_STR,-,1)})
exten = s,n,ExecIf($["${Caller_PROTOCOL}" == "DAHDI"]?ExecIf($["${HARDWARE_T38_SUPPROT(${Caller_NUM})}" == "S"]?Set(FAXOPT(faxgateway)=yes)))
exten = s,n,ExecIf($["${Caller_PROTOCOL}" == "PJSIP"]?ExecIf($["${PJSIP_T38(endpoint)}" == "Enable"]?Set(FAXOPT(faxgateway)=yes)))

[callback_destination]
exten = s,1,Set(loopcount=10)
exten = s,n,ExecIf( $["${CALLBACK_TRUNKTYPE}" == "ss7"]?Set(CALLERID(number)=${CUT(CDR_SESSION,-,2)}))
exten = s,n,ExecIf($["${UCMDB(AAUSER/${AAUSER}/language)}" != ""]?Set(CHANNEL(language)=${UCMDB(AAUSER/${AAUSER}/language)}):Set(CHANNEL(language)=${GLOBAL_LANGUAGE}))
exten = s,n,Set(CALLERID(name)=${CALLERID(number)})
exten = s,n(begin),Set(TIMEOUT(response)=3)
exten = s,n,Background(callback-options,)
exten = s,n,WaitExten(2)
exten = s,n,Set(loopcount=$[${loopcount} - 1])
exten = s,n,ExecIf($[${loopcount} > 0]?Goto(s,begin))
exten = i,1,Macro(cdr-extension,${CALLBACK_CONTEXT},${CALLBACK_EXTEN})
exten = i,n,Goto(${CALLBACK_CONTEXT},${CALLBACK_EXTEN},1)

[macro-do-callback]
exten = s,1,ExecIf($["${FROM_CALLBACK}" = "yes"]?Playback(callback-cannot-callback))
exten = s,n,GotoIf($["${FROM_CALLBACK}" = "yes"]?end)
exten = s,n,GotoIf($[ "${MCB_CREATE_CHAN}" != "" || ("${CHANNEL(channeltype)}" == "PJSIP" && ${LEN(${PJSIP_HEADER(read,X-Grandstream-Mcb-Req)})} > 0) ]?end)
exten = s,n,System(/cfg/var/lib/asterisk/scripts/callback.py --exten "${FROM_EXTEN}" --callerid "${ARG1}" --callbackId ${ARG2} --channel "${CHANNEL}" --cdrSession "${CDR(session)}" --ring "${DID_ALERTINFO}" --channalDahdi "${CHANNEL(dahdi_type)}" --setcid "${SET_CALLER_ID_ENABLE}" --cidname "${SET_CALLER_ID_NAME}" --cidnum "${SET_CALLER_ID_NUM}" &)
exten = s,n,GotoIf($[$["${CHANNEL(channeltype)}" = "DAHDI" & "${CHANNEL(dahdi_type)}" = "analog"] & $["${CHANNEL(state)}" != "Up"]]?wait)
exten = s,n(end),Hangup
exten = s,n(wait),wait(100)

[macro-app-chanspy-prompt]
exten = s,1,Macro(user-callerid,)
exten = s,n,Answer
exten = s,n,Set(NumLoops=0)
exten = s,n,Set(TIMEOUT(digit)=5)
exten = s,n,Set(TIMEOUT(response)=60)
exten = s,n(start),Read(SPYNUMBER,pls-entr-num-uwish2-call&then-press-pound,,,,)
exten = s,n,GotoIf($[${LEN(${SPYNUMBER})} <= 32]?:invalid)
exten = s,n,Set(DIAL_STR=${UCMDB(AAUSER/${SPYNUMBER}/DIAL)})
exten = s,n,GotoIf(${ISNULL(${DIAL_STR})}?invalid)
exten = s,n,GotoIf($["${BLACK_WHITE_LIST(cb-${SPYNUMBER},CALLEE_NUMBER)}" = "YES"]?:nopermision)
exten = s,n,ChanSpy(${DIAL_STR},sE${ARG1})
exten = s,n,Hangup
exten = s,n(invalid),Set(NumLoops=$[${NumLoops} + 1])
exten = s,n,GotoIf($[${NumLoops} < 3]?:bye)
exten = s,n,Playback(check-number-dial-again)
exten = s,n,Goto(start)
exten = s,n(bye),Playback(goodbye)
exten = s,n,Hangup
exten = s,n(nopermision),Playback(you-have-no-permission&goodbye)
exten = s,n,Hangup

[macro-app-chanspy-no-prompt]
exten = s,1,Macro(user-callerid,)
exten = s,n,Answer
exten = s,n,Wait(1)
exten = s,n,Set(DIAL_STR=${UCMDB(AAUSER/${ARG2}/DIAL)})
exten = s,n,GotoIf(${ISNULL(${DIAL_STR})}?invalid)
exten = s,n,GotoIf($["${BLACK_WHITE_LIST(cb-${ARG2},CALLEE_NUMBER)}" = "YES"]?:nopermision)
exten = s,n,ChanSpy(${DIAL_STR},sE${ARG1})
exten = s,n,Hangup
exten = s,n(invalid),Playback(check-number-dial-again&goodbye)
exten = s,n,Hangup
exten = s,n(nopermision),Playback(you-have-no-permission&goodbye)
exten = s,n,Hangup

[macro-set-cdr-variables]
exten = s,1,ExecIf($["${WEBCALL}" != ""]?Set(CDR(webcall)=yes))
exten = s,n,Set(__FORWARD_CONTEXT=call-forward)
exten = s,n,ExecIf($["${DISA_TRUNK_NAME}"="yes" & "${CHANNEL(channeltype)}"="Local"]?Set(CDR(special_action_type)=local_disa))
exten = s,n,ExecIf($["${WEBCALL}" != ""]?Set(CDR(app_caller)=${CALLERID(num)}))
exten = s,n,ExecIf($["${FROM_CALLBACK}" == "yes"]?Set(CDR(app_caller)=Callback))
exten = s,n,ExecIf($["${WEBCALL}" == "VFAX" & "${is_admin}" == "yes"]?Set(CDR(app_caller)=VFAX-admin))
exten = s,n,ExecIf($["${WEBCALL}" == "VFAX" & "${is_admin}" != "yes"]?Set(CDR(app_caller)=VFAX-${is_admin}))
exten = s,n,ExecIf($["${WEBCALL}" != ""]?Set(CDR(action_type)=${WEBCALL}))
exten = s,n,ExecIf($["${EMERGENCY_CALL_INFO}" == "yes"]?Set(CDR(action_type)=EMERGENCYNOTIFY))
exten = s,n,ExecIf($["${EMERGENCY_CALL_INFO}" == "yes"]?Set(CDR(app_caller)=EmergencyNotify${EMERGENCY_CALLER}))
exten = s,n,ExecIf($["${CDR_SESSION}" != ""]?Set(CDR(session)=${CDR_SESSION}))
exten = s,n,ExecIf($["${CONF_INVITE}" == "yes" & "${CONF_ROOM}" != ""]?Set(CDR(app_caller)=${CONF_ROOM}))
exten = s,n,ExecIf($[("${CONF_INVITE}" == "yes" | "${CONF_USER_INVITE}" == "yes") & "${CONF_ROOM}" != ""]?Set(CDR(action_type)=CONFERENCE[${CONF_ROOM}]))
exten = s,n,ExecIf($["${CDR_BLINDTRANSFER}" != ""]?Set(CDR(action_type)=TRANSFER))
;exten = s,n,ExecIf($["${CDR_BLINDTRANSFER}" != ""]?Macro(record-check))
exten = s,n,ExecIf($["${CUT(CDR_BLINDTRANSFER,/,1)}" == "PJSIP"]?Set(CDR(action_owner)=${CUT(CUT(CDR_BLINDTRANSFER,/,2),-,1)}))
exten = s,n,ExecIf($["${CUT(CDR_BLINDTRANSFER,/,1)}" == "DAHDI"]?Set(CDR(action_owner)=${UCMDB(${CUT(CDR_BLINDTRANSFER,-,1)}/FXS_EXTENSION)}))
exten = s,n,Set(CDR_BLINDTRANSFER=)

[messages]
exten = _X.,1,MessageSend(pjsip:${EXTEN},${MESSAGE(from)})
exten = _X.,n,Wait(1)
exten = _X.,n,Set(MESSAGE_CHAT_RECORD(callee)=${EXTEN})
exten = _x.,n,ExecIf($["${WEBRTC_ANONYMOUS_GROUP_MESSAGES}" == "yes"]?Return())

[call-forward]
include=from-internal

[macro-seamless-transfer-bridge]
exten = s,1,NoOp()
exten = s,n,Macro(set-cdr-variables)
exten = s,n,Macro(user-callerid)
exten = s,n,Set(CDR(action_type)=TRANSFER)
exten = s,n,Set(CDR(app_caller)=${APP_CALLER})
exten = s,n,Set(CDR(app_callee)=${APP_CALLEE})
exten = s,n,GotoIF($[ ${TRANSFER_CONFBRIDGE_ID} == "" ]?hangup)
exten = s,n,ExecIf($["${AAUSERCIDNAME}" != ""]?Set(CALLERID(all)="${AAUSERCIDNAME}" <${APP_CALLER}>):ExecIf($["${APP_CALLER}" != "${AAUSER}"]?Set(CALLERID(all)="${AAUSER}" <${APP_CALLER}>):Set(CALLERID(all)="" <${AAUSER}>)))
exten = s,n,ExecIf($[ "${FROM_CALLBACK}" == "yes" && "${AAUSER}" == "" ]?Set(CALLBACK_REC=no):Set(CALLBACK_REC=yes))
exten = s,n,ExecIf($[ $[ "${HAVE_RECORD}" = "1" | "${TRUNK_REC}" = "yes" ] & $["${WAKEUP_STATUS}" == ""] && $["${CALLBACK_REC}" == "yes"] ]?Macro(record-check,${APP_CALLER}-${APP_CALLEE},))
exten = s,n,GotoIf($[ "${UCMDB(AAUSER/${APP_CALLER}/AUTORECORD)}" =="yes" | "${UCMDB(AAUSER/${APP_CALLEE}/AUTORECORD)}" =="yes" | "${REC_ENABLE}" == "yes" | "${MIXAUTORECORDING}" == "ON" ]?:transfer_redirect)
exten = s,n,Set(CALLFILENAME=${STRFTIME(${EPOCH},,%Y-%m)}/auto-${STRFTIME(${EPOCH},,%s)}-${APP_CALLER}-${APP_CALLEE})
exten = s,n,Set(CDR(RECORD_FILES)=${CALLFILENAME}.${MIXMON_FORMAT}@)
exten = s,n,MixMonitor(${MIXMON_DIR}/${CALLFILENAME}.${MIXMON_FORMAT},,${MIXMON_POST}))
exten = s,n(transfer_redirect),Confbridge(${TRANSFER_CONFBRIDGE_ID},default_bridge,seamless_transfer_user,seamless_transfer_menu,transfer)
exten = s,n(hangup),Hangup()

[macro-seamless-transfer-self]
exten = s,1,NoOp()
exten = s,n,ExecIf($["${VQ_CALLBACK_CALLEE}" == "yes"]?Return())
exten = s,n,Gotoif($["${SEAMLESS_TRANSFER_NUMBER}" = ""]?Return())
exten = s,n,Set(DNDON=${UCMDB(AAUSER/${SEAMLESS_TRANSFER_NUMBER}/DND)})
exten = s,n,ExecIf($["${DNDON}" = "yes"]?Macro(check-dnd-white-list))
exten = s,n,ExecIf($["${DNDON}" = "yes"]?Macro(holidaytime-system,${UCMDB(AAUSER/${SEAMLESS_TRANSFER_NUMBER}/DNDTIMETYPE)},${SEAMLESS_TRANSFER_NUMBER}))
exten = s,n,GotoIf($["${DNDON}" = "yes" && "${MATCHTIME}" = "1"]?Return())
exten = s,n(seamless_transfer),ExecIf($["${UCMDB(AAUSER/${CALLERID(number)}/PERMISSION)}" == ""]?Set(CALL_PERMISSION=${UCMDB(AAUSER/${AAUSER}/PERMISSION)}):Set(CALL_PERMISSION=${UCMDB(AAUSER/${CALLERID(number)}/PERMISSION)}))
exten = s,n,ExecIf($["${UCMDB(AAUSER/${SEAMLESS_TRANSFER_NUMBER}/OUTBOUNDCID)}" == ""]?Set(CALL_OUTBOUNDCID=${SEAMLESS_TRANSFER_NUMBER}):Set(CALL_OUTBOUNDCID=${UCMDB(AAUSER/${SEAMLESS_TRANSFER_NUMBER}/OUTBOUNDCID)}))
exten = s,n,System(python /cfg/var/lib/asterisk/scripts/seamless_transfer.py originate TRANSFER_CONFBRIDGE_ID ${SEAMLESS_TRANSFER_NUMBER} "${CHANNEL}" "${CALL_PERMISSION}" "${UCMDB(AAUSER/${SEAMLESS_TRANSFER_NUMBER}/DIAL)}" "${CALL_OUTBOUNDCID}" "${MIXAUTORECORDING}" "${TRUNK_INDEX}" &)
exten = s,n(noop),noop()

[macro-check-dnd-white-list]
exten = s,1,NoOp()
exten = s,n,GotoIf($[${REGEX("${UCMDB(AAUSER/${ARG2}/DNDWHITELIST)}" ${AAUSER})}]?:noop)
exten = s,n,GotoIf($["${UCMDB(AAUSER/${ARG2}/DNDWHITELIST)}" == ""]?noop)
exten = s,n,Set(DNDON=no)
exten = s,n(noop),NoOp()

[macro-check-fwd-white-list]
exten = s,1,NoOp()
exten = s,n,GotoIf($[${REGEX("${UCMDB(AAUSER/${ARG2}/FWDWHITELIST)}" ${AAUSER})}]?:noop)
exten = s,n,GotoIf($["${UCMDB(AAUSER/${ARG2}/FWDWHITELIST)}" == ""]?noop)
exten = s,n,ExecIf($["${ARG1}" = "CFB"]?Set(CFBEXT=))
exten = s,n,ExecIf($["${ARG1}" = "CFU"]?Set(CFUEXT=))
exten = s,n,ExecIf($["${ARG1}" = "CFN"]?Set(CFNEXT=))
exten = s,n(noop),NoOp()


[callback-dial]
exten = _X.,1,Dial(Local/${EXTEN}@from-internal,60)

[macro-seamless-transfer-originate]
exten = s,1,NoOp()
exten = s,n,Macro(set-cdr-variables)
exten = s,n,Macro(user-callerid)
exten = s,n,Set(CDR(action_type)=TRANSFER)
exten = s,n,Set(CDR(app_caller)=${APP_CALLER})
exten = s,n,Set(CDR(app_callee)=${APP_CALLEE})
exten = s,n,Set(IS_TRUNK=${CUT(CUT(CHANNEL,/,2),_,1)})
exten = s,n,Set(TRUNK_INDEX=${CUT(CUT(CHANNEL,_,2),-,1)})
exten = s,n,ExecIf($["${IS_TRUNK}"="trunk" & $"{TRUNK_INDEX}"!=""]?Set(CDR(inbound_trunk_index)=${TRUNK_INDEX}))
exten = s,n,Set(CDR(special_action_type)="SEAMLESS_TRANSFER")
exten = s,n,Set(CALLERID(all)="${AAUSERCIDNAME}"<${AAUSER}>)
exten = s,n,ExecIf($["${SEAM_OBT_INDEX}"!=""]?Set(CDR(outbound_trunk_index)=${SEAM_OBT_INDEX}))
exten = s,n,ExecIf($[ "${FROM_CALLBACK}" == "yes" && "${AAUSER}" == "" ]?Set(CALLBACK_REC=no):Set(CALLBACK_REC=yes))
exten = s,n,ExecIf($[ $[ "${HAVE_RECORD}" = "1" | "${TRUNK_REC}" = "yes" ] & $["${WAKEUP_STATUS}" == ""] && $["${CALLBACK_REC}" == "yes"] ]?Macro(record-check,${APP_CALLER}-${APP_CALLEE},))
exten = s,n,GotoIf($[ "${UCMDB(AAUSER/${APP_CALLER}/AUTORECORD)}" =="yes" | "${UCMDB(AAUSER/${APP_CALLEE}/AUTORECORD)}" =="yes" | "${REC_ENABLE}" == "yes" | "${MIXAUTORECORDING}" == "ON" ]?:confbridge)
exten = s,n,Set(CALLFILENAME=${STRFTIME(${EPOCH},,%Y-%m)}/auto-${STRFTIME(${EPOCH},,%s)}-${APP_CALLER}-${APP_CALLEE})
exten = s,n,Set(CDR(RECORD_FILES)=${CALLFILENAME}.${MIXMON_FORMAT}@)
exten = s,n,MixMonitor(${MIXMON_DIR}/${CALLFILENAME}.${MIXMON_FORMAT},,${MIXMON_POST}))
exten = s,n(confbridge),Confbridge(${TRANSFER_CONFBRIDGE_ID},default_bridge,seamless_transfer_user,seamless_transfer_menu,transfer)

[macro-bindnum-seamless-transfer]
exten = s,1,NoOp()
exten = s,n,Set(DID_X="did-"${INBOUND_RT_INDEX})
exten = s,n,Noop(${IN_TRANSFER_DIDWHILTELIST(${DID_X},${TRANSFER_NUMBER})})
exten = s,n,Set(TRANSFER_EXTEN=${IN_TRANSFER_DIDWHILTELIST(${DID_X},${TRANSFER_NUMBER})})
exten = s,n,GotoIf($["${EXTENSION_STATE(${TRANSFER_EXTEN}@from-internal)}" == "INUSE"]?:noop)
exten = s,n,System(python /cfg/var/lib/asterisk/scripts/seamless_transfer.py redirect ${TRANSFER_EXTEN} "${CHANNEL}" TRANSFER_CONFBRIDGE_ID "${UCMDB(AAUSER/${TRANSFER_EXTEN}/DIAL)}"  ${TRANSFER_NUMBER})
exten = s,n,GotoIf($["${ST_RESULT}" == "SUCCESS"]?:noop)
exten = s,n,Macro(seamless-transfer-bridge)
exten = s,n(hangup),hangup()
exten = s,n(noop),NoOp()

[macro-exten-presence-transfer]
exten = s,1,GotoIf($["${ARG1}" == "0" | "${ARG1}" == "1" | "${ARG1}" == ""]?localexten)
exten = s,n,GotoIf($["${ARG1}" == "2"]?externalexten)
exten = s,n,GotoIf($["${ARG1}" == "3"]?voicemail)
exten = s,n,GotoIf($["${ARG1}" == "4"]?ringgroup)
exten = s,n,GotoIf($["${ARG1}" == "5"]?callqueue)
exten = s,n,GotoIf($["${ARG1}" == "6"]?voicemailgroup)
exten = s,n,ExecIf($["${ARG1}" == "7"]?Hangup)
exten = s,n,Hangup
exten = s,n(localexten),Goto(from-internal,${ARG2},1)
exten = s,n,Hangup
exten = s,n(externalexten),Goto(from-internal,${ARG2},1)
exten = s,n,Hangup
exten = s,n(voicemail),Macro(vm,${ARG2},u)
exten = s,n,Hangup
exten = s,n(ringgroup),Goto(ext-group,${ARG2},1)
exten = s,n,Hangup
exten = s,n(callqueue),Goto(ext-queues,${ARG2},1)
exten = s,n,Hangup
exten = s,n(voicemailgroup),Goto(voicemailgroups,${ARG2},1)
exten = s,n,Hangup

[macro-dialin-check]
exten = s,1,NoOp()
exten = s,n,Set(ILOOPCOUNT=0)
exten = s,n,Set(TLOOPCOUNT=0)
exten = s,n,GotoIf($["${DIAL_PLAYPROMPT(${CALLERID(number)},${TRUNK_INDEX})}" != "yes"]?normaltrunk)
exten = s,n,Answer
exten = s,n(begin),Set(TIMEOUT(digit)=10)
exten = s,n,Set(TIMEOUT(response)=10)
exten = s,n,Set(TMP_EXTEN=${DIALIN_CHECK(${ARG1},${ARG2})})
exten = s,n,GotoIf($["${TMP_EXTEN}" == ""]?normaltrunk)
;2# is normal extension, 1# is to default destination
;check if TMP_EXTEN is TIMEOUT, INVALID, normal extension or ""
exten = s,n,GotoIf($["${TMP_EXTEN}" == "INVALID"]?i,1)
exten = s,n,GotoIf($["${TMP_EXTEN}" == "TIMEOUT"]?t,1)
exten = s,n(dialin),GosubIf($["${BLACKLIST_CHECK}" = "1"]?app-blacklist-check,s,1)
exten = s,n,Goto(from-internal,${TMP_EXTEN},1)
exten = s,n(normaltrunk),NoOp()

;invalid
exten = i,1,Set(ILOOPCOUNT=$[${ILOOPCOUNT} + 1])
exten = i,n,ExecIf($[${ILOOPCOUNT}<3]?Playback(press-invalid))
exten = i,n,GotoIf($[$[${ILOOPCOUNT}<3] & $["${TMP_EXTEN}" = "TIMEOUT"]]?t,1)
exten = i,n,GotoIf($[$[${ILOOPCOUNT}<3] & $["${TMP_EXTEN}" = "INVALID"]]?s,begin)
exten = i,n,GotoIf($[$[${ILOOPCOUNT}<3] & $["${TMP_EXTEN}" = ""]]?s,normaltrunk)
exten = i,n,GotoIf($[$[${ILOOPCOUNT}<3] & $["${TMP_EXTEN}" != "TIMEOUT"] & $["${TMP_EXTEN}" != "INVALID"]& $["${TMP_EXTEN}" != ""]]?s,dialin)
exten = i,n,Playback(goodbye)
exten = i,n,Hangup

;timeout
exten = t,1,Set(TLOOPCOUNT=$[${TLOOPCOUNT} + 1])
exten = t,n,ExecIf($[${TLOOPCOUNT}<3]?Playback(ivr-create-timeout))
exten = t,n,GotoIf($[$[${TLOOPCOUNT}<3] & $["${TMP_EXTEN}" = "TIMEOUT"]]?s,begin)
exten = t,n,GotoIf($[$[${TLOOPCOUNT}<3] & $["${TMP_EXTEN}" = "INVALID"]]?i,1)
exten = t,n,GotoIf($[$[${TLOOPCOUNT}<3] & $["${TMP_EXTEN}" = ""]]?s,normaltrunk)
exten = t,n,GotoIf($[$[${TLOOPCOUNT}<3] & $["${TMP_EXTEN}" != "TIMEOUT"] & $["${TMP_EXTEN}" != "INVALID"]& $["${TMP_EXTEN}" != ""]]?s,dialin)
exten = t,n,Playback(goodbye)
exten = t,n,Hangup

[macro-ext-did]
exten = s,1,ExecIf($["${CHANNEL(session)}" = ""]?Set(CHANNEL(session)=${CALLERID(number)}))
exten = s,n,Set(__FROM_TRUNK=yes)
exten = s,n,Set(__TRUNK_INDEX=${ARG2})
exten = s,n,Set(__TRUNK_PROTOCAL=${ARG3})
exten = s,n,Set(CDR(inbound_trunk_index)=${TRUNK_INDEX})
exten = s,n,Set(__DID_ALERTINFO=${ARG4})
exten = s,n,Set(__DID_ALERT_SCHEMA=${ARG5})
exten = s,n,Set(__FROM_TRUNK_ALERT=yes)
exten = s,n,Set(__FROM_EXTEN=${ARG1})
exten = s,n,ExecIf($[ "${ARG9}" == "MCM-PEER-TRUNK" ]?Set(CDR(action_type)=VIDEOCONFERENCE[${CALLERID(number)}]))
exten = s,n,ExecIf($[ "${ARG9}" == "MCM-PEER-TRUNK" ]?Set(MCM_PEER_TRUNKS=yes))
exten = s,n,Macro(proc-setcid,init,${CALLERID(num)},${ARG6},${ARG7})
exten = s,n,GotoIf($[${ARG8}==yes]?add_trunk_name:dialin)
exten = s,n(add_trunk_name),Set(CALLERID(name)=${ARG9} ${CALLERID(name)})
exten = s,n(dialin),GotoIf($[${ARG13}==no]?normal)
exten = s,n,ExecIf($["${TRUNK_PROTOCAL}"=="Analog" || "${TRUNK_PROTOCAL}"=="PRI" || "${TRUNK_PROTOCAL}"=="MFC/R2" || "${TRUNK_PROTOCAL}"=="SS7"]?Macro(dialin-check,${CALLERID(number)},${TRUNK_INDEX}))
exten = s,n,GotoIf($["${TRUNK_PROTOCAL}"=="Analog" || "${TRUNK_PROTOCAL}"=="PRI" || "${TRUNK_PROTOCAL}"=="MFC/R2" || "${TRUNK_PROTOCAL}"=="SS7"]?normal)
exten = s,n,Set(TMP_EXTEN=${CKECK_PLAYBACK(${CALLERID(number)},${TRUNK_INDEX})})
exten = s,n,GotoIf($["${TMP_EXTEN}" == ""]?normal)
exten = s,n,GosubIf($["${BLACKLIST_CHECK}" = "1"]?app-blacklist-check,s,1)
exten = s,n,Set(CDR(app_callee)=${TMP_EXTEN})
exten = s,n,Goto(from-internal,${TMP_EXTEN},1)
exten = s,n(normal),Set(__DISA_PERMISSION=${ARG10})
exten = s,n,Set(LDAP_PRE=${ARG11})
exten = s,n,Set(__TRANSFER_NUMBER=${CALLERID(number)})
exten = s,n,Set(__INBOUND_RT_INDEX=${ARG12})
exten = s,n,Set(__DID_VM_ENABLE=${ARG14})
exten = s,n,GosubIf($["${BLACKLIST_CHECK}" = "1"]?app-blacklist-check,s,1)
exten = s,n,Macro(bindnum-seamless-transfer)
exten = s,n,ExecIf($["${ARG1}" != "s"]?Set(CDR(app_callee)=${ARG1}))

[macro-emergency-notify]
exten = s,1,Set(j=1)                                                                                                                                  
exten = s,n,Set(person=)
exten = s,n,GotoIf($["${NOTIFYMEMBER}" == "no"]?donothing)
exten = s,n,While($[${j} <= ${NOTIFYCOUNT}])
exten = s,n,Set(person=${CUT(NOTIFYNUM,-,${j})})
exten = s,n,Originate(LOCAL/${person}@ext-local,exten,ucm-emergencyout-prompt,prompt${EMERGENCY_PROMPT_NUM},1,60,${EMERGENCY_DIALER},${EMERGENCY_SERVICE_NUM}))
exten = s,n,Set(j=$[${j} + 1])
exten = s,n,EndWhile
exten = s,n(donothing),Log(NOTICE, "Only notify once!")

[macro-proc-setcid]
exten = s,1,GotoIf($["${ARG1}" == "init"]?:skip_init)
exten = s,n(init),Set(__SET_CALLER_ID_ENABLE=${ARG3})
exten = s,n,Set(__SET_CALLER_ID_NAME=${tmp_callerid_name})
exten = s,n,Set(__SET_CALLER_ID_NUM=${ARG4})
exten = s,n,Set(__ORG_CALLER_ID_NAME=${CALLERID(name)})
exten = s,n,Set(__ORG_CALLER_ID_NUM=${ARG2})
exten = s,n,Goto(end)
exten = s,n(skip_init),NoOp()

exten = s,n,GotoIf($["${ARG1}" == "set"]?:skip_set)
;exten = s,n,NoOp("FROM_CALLBACK=${FROM_CALLBACK}, CALLBACK_DEST=${CALLBACK_DEST}, CUR_CID=${CALLERID(num)}")
exten = s,n(set),GotoIf($["${FROM_CALLBACK}" == "yes" && "${CALLBACK_DEST}" == "${CALLERID(num)}"]?end)
exten = s,n,GotoIf($["${SET_CALLER_ID_ENABLE}" == "yes"]?setcid:end)
exten = s,n(setcid),ExecIf($["${SET_CALLER_ID_NAME}" != ""]?Set(CALLERID(name)=${SET_CALLER_ID_NAME}))
exten = s,n,ExecIf($["${SET_CALLER_ID_NUM}" != ""]?Set(CALLERID(num)=${SET_CALLER_ID_NUM}))
exten = s,n,Goto(end)
exten = s,n(skip_set),NoOp()

exten = s,n,GotoIf($["${ARG1}" == "deinit"]?:deinit)  
exten = s,n(deinit),ExecIf($["${ORG_CALLER_ID_NAME}" != ""]?Set(CALLERID(name)=${ORG_CALLER_ID_NAME}))
exten = s,n(deinit),ExecIf($["${ORG_CALLER_ID_NUM}" != ""]?Set(CALLERID(num)=${ORG_CALLER_ID_NUM}))
exten = s,n,Goto(end)
exten = s,n(skip_deinit),NoOp()

exten = s,n(end),NoOp()
